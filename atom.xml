<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Emacs Fodder]]></title>
  <link href="http://emacsfodder.github.com/atom.xml" rel="self"/>
  <link href="http://emacsfodder.github.com/"/>
  <updated>2013-02-16T21:18:10+11:00</updated>
  <id>http://emacsfodder.github.com/</id>
  <author>
    <name><![CDATA[Jason Milkins]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Purple Haze theme]]></title>
    <link href="http://emacsfodder.github.com/blog/purple-haze-theme/"/>
    <updated>2013-02-16T21:04:00+11:00</updated>
    <id>http://emacsfodder.github.com/blog/purple-haze-theme</id>
    <content type="html"><![CDATA[<p>This is yet another Emacs24 theme, it has core support for font-lock and some basic editor elements, but it lacks special support for Org, Helm, Gnus, Ido etc, etc. It&#8217;s also not terminal friendly.</p>

<p>If that&#8217;s good enough for you, grab it from github at <a href="http://github.com/jasonm23/emacs-purple-haze-theme">http://github.com/jasonm23/emacs-purple-haze-theme</a></p>

<p>No prizes for guessing where the name came from.</p>

<h1><a href="http://github.com/jasonm23/emacs-purple-haze-theme">Clone from github</a></h1>

<h3>&#8230;and of course the obligatory screenshot</h3>

<p><img src="https://raw.github.com/jasonm23/emacs-purple-haze-theme/master/purple-haze-theme.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Soothe theme updated]]></title>
    <link href="http://emacsfodder.github.com/blog/soothe_theme_updated/"/>
    <updated>2013-01-26T00:00:00+11:00</updated>
    <id>http://emacsfodder.github.com/blog/soothe_theme_updated</id>
    <content type="html"><![CDATA[<p>Just a quick post about Soothe, I&#8217;ve updated it to run on the terminal, and adjust it&#8217;s colors accordingly.</p>

<p>Here&#8217;s a screengrab of it running in the terminal&#8230;</p>

<p><img src="https://raw.github.com/jasonm23/emacs-soothe-theme/master/soothe-terminal.png" alt="" /></p>

<p>Soothe is also hosted on github as a <a href="https://github.com/jasonm23/emacs-soothe-theme">standalone repo here</a>, so it&#8217;s easier for me to add it to elpa/milkbox etc.</p>

<p>Also I&#8217;ve made a iTerm2 colortheme using the Soothe palette, which you can <a href="https://github.com/jasonm23/iterm2-color-themes">get over here</a></p>

<p><img src="https://raw.github.com/jasonm23/iterm2-color-themes/master/soothe-colors.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Alternative _syntax.scss for Octopress]]></title>
    <link href="http://emacsfodder.github.com/blog/alternative-syntax-scss-for-octopress/"/>
    <updated>2013-01-16T00:00:00+11:00</updated>
    <id>http://emacsfodder.github.com/blog/alternative-syntax-scss-for-octopress</id>
    <content type="html"><![CDATA[<p>Well this isn&#8217;t anything to do with Emacs, but since this blog uses
Octopress, I suppose this is as good a place as any to post this.</p>

<!--more-->


<p>I&#8217;ve made an alternative <code>_syntax.scss</code> &#8220;part&#8221; for Octopress, just
replace your existing one, all the variables are self-contained.</p>

<figure class='code'><figcaption><span> (_syntax.scss)</span> <a href='http://emacsfodder.github.com/code/_syntax.scss'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
<span class='line-number'>221</span>
<span class='line-number'>222</span>
<span class='line-number'>223</span>
<span class='line-number'>224</span>
<span class='line-number'>225</span>
<span class='line-number'>226</span>
<span class='line-number'>227</span>
<span class='line-number'>228</span>
<span class='line-number'>229</span>
<span class='line-number'>230</span>
<span class='line-number'>231</span>
<span class='line-number'>232</span>
<span class='line-number'>233</span>
<span class='line-number'>234</span>
<span class='line-number'>235</span>
<span class='line-number'>236</span>
<span class='line-number'>237</span>
<span class='line-number'>238</span>
<span class='line-number'>239</span>
<span class='line-number'>240</span>
<span class='line-number'>241</span>
<span class='line-number'>242</span>
<span class='line-number'>243</span>
<span class='line-number'>244</span>
<span class='line-number'>245</span>
<span class='line-number'>246</span>
<span class='line-number'>247</span>
<span class='line-number'>248</span>
<span class='line-number'>249</span>
<span class='line-number'>250</span>
<span class='line-number'>251</span>
<span class='line-number'>252</span>
<span class='line-number'>253</span>
<span class='line-number'>254</span>
<span class='line-number'>255</span>
<span class='line-number'>256</span>
<span class='line-number'>257</span>
<span class='line-number'>258</span>
<span class='line-number'>259</span>
<span class='line-number'>260</span>
<span class='line-number'>261</span>
<span class='line-number'>262</span>
<span class='line-number'>263</span>
<span class='line-number'>264</span>
<span class='line-number'>265</span>
<span class='line-number'>266</span>
<span class='line-number'>267</span>
<span class='line-number'>268</span>
<span class='line-number'>269</span>
<span class='line-number'>270</span>
<span class='line-number'>271</span>
<span class='line-number'>272</span>
<span class='line-number'>273</span>
<span class='line-number'>274</span>
<span class='line-number'>275</span>
<span class='line-number'>276</span>
<span class='line-number'>277</span>
<span class='line-number'>278</span>
<span class='line-number'>279</span>
<span class='line-number'>280</span>
<span class='line-number'>281</span>
<span class='line-number'>282</span>
<span class='line-number'>283</span>
<span class='line-number'>284</span>
<span class='line-number'>285</span>
<span class='line-number'>286</span>
<span class='line-number'>287</span>
<span class='line-number'>288</span>
<span class='line-number'>289</span>
<span class='line-number'>290</span>
<span class='line-number'>291</span>
<span class='line-number'>292</span>
<span class='line-number'>293</span>
<span class='line-number'>294</span>
<span class='line-number'>295</span>
<span class='line-number'>296</span>
<span class='line-number'>297</span>
<span class='line-number'>298</span>
<span class='line-number'>299</span>
<span class='line-number'>300</span>
<span class='line-number'>301</span>
<span class='line-number'>302</span>
<span class='line-number'>303</span>
<span class='line-number'>304</span>
<span class='line-number'>305</span>
<span class='line-number'>306</span>
<span class='line-number'>307</span>
<span class='line-number'>308</span>
<span class='line-number'>309</span>
<span class='line-number'>310</span>
<span class='line-number'>311</span>
<span class='line-number'>312</span>
<span class='line-number'>313</span>
<span class='line-number'>314</span>
<span class='line-number'>315</span>
<span class='line-number'>316</span>
<span class='line-number'>317</span>
<span class='line-number'>318</span>
<span class='line-number'>319</span>
<span class='line-number'>320</span>
<span class='line-number'>321</span>
<span class='line-number'>322</span>
<span class='line-number'>323</span>
<span class='line-number'>324</span>
<span class='line-number'>325</span>
<span class='line-number'>326</span>
<span class='line-number'>327</span>
<span class='line-number'>328</span>
<span class='line-number'>329</span>
<span class='line-number'>330</span>
<span class='line-number'>331</span>
<span class='line-number'>332</span>
<span class='line-number'>333</span>
<span class='line-number'>334</span>
<span class='line-number'>335</span>
<span class='line-number'>336</span>
<span class='line-number'>337</span>
<span class='line-number'>338</span>
<span class='line-number'>339</span>
<span class='line-number'>340</span>
<span class='line-number'>341</span>
<span class='line-number'>342</span>
<span class='line-number'>343</span>
<span class='line-number'>344</span>
<span class='line-number'>345</span>
<span class='line-number'>346</span>
<span class='line-number'>347</span>
<span class='line-number'>348</span>
<span class='line-number'>349</span>
<span class='line-number'>350</span>
<span class='line-number'>351</span>
<span class='line-number'>352</span>
<span class='line-number'>353</span>
<span class='line-number'>354</span>
<span class='line-number'>355</span>
<span class='line-number'>356</span>
<span class='line-number'>357</span>
<span class='line-number'>358</span>
<span class='line-number'>359</span>
<span class='line-number'>360</span>
<span class='line-number'>361</span>
<span class='line-number'>362</span>
<span class='line-number'>363</span>
<span class='line-number'>364</span>
<span class='line-number'>365</span>
<span class='line-number'>366</span>
<span class='line-number'>367</span>
<span class='line-number'>368</span>
<span class='line-number'>369</span>
<span class='line-number'>370</span>
<span class='line-number'>371</span>
<span class='line-number'>372</span>
<span class='line-number'>373</span>
<span class='line-number'>374</span>
<span class='line-number'>375</span>
<span class='line-number'>376</span>
<span class='line-number'>377</span>
<span class='line-number'>378</span>
<span class='line-number'>379</span>
<span class='line-number'>380</span>
<span class='line-number'>381</span>
<span class='line-number'>382</span>
<span class='line-number'>383</span>
<span class='line-number'>384</span>
<span class='line-number'>385</span>
<span class='line-number'>386</span>
<span class='line-number'>387</span>
<span class='line-number'>388</span>
<span class='line-number'>389</span>
<span class='line-number'>390</span>
<span class='line-number'>391</span>
<span class='line-number'>392</span>
<span class='line-number'>393</span>
<span class='line-number'>394</span>
<span class='line-number'>395</span>
<span class='line-number'>396</span>
<span class='line-number'>397</span>
<span class='line-number'>398</span>
<span class='line-number'>399</span>
<span class='line-number'>400</span>
<span class='line-number'>401</span>
<span class='line-number'>402</span>
<span class='line-number'>403</span>
<span class='line-number'>404</span>
<span class='line-number'>405</span>
<span class='line-number'>406</span>
<span class='line-number'>407</span>
<span class='line-number'>408</span>
<span class='line-number'>409</span>
<span class='line-number'>410</span>
<span class='line-number'>411</span>
<span class='line-number'>412</span>
<span class='line-number'>413</span>
<span class='line-number'>414</span>
<span class='line-number'>415</span>
<span class='line-number'>416</span>
<span class='line-number'>417</span>
<span class='line-number'>418</span>
<span class='line-number'>419</span>
<span class='line-number'>420</span>
<span class='line-number'>421</span>
<span class='line-number'>422</span>
<span class='line-number'>423</span>
<span class='line-number'>424</span>
<span class='line-number'>425</span>
<span class='line-number'>426</span>
<span class='line-number'>427</span>
<span class='line-number'>428</span>
<span class='line-number'>429</span>
<span class='line-number'>430</span>
<span class='line-number'>431</span>
<span class='line-number'>432</span>
<span class='line-number'>433</span>
<span class='line-number'>434</span>
<span class='line-number'>435</span>
<span class='line-number'>436</span>
<span class='line-number'>437</span>
<span class='line-number'>438</span>
<span class='line-number'>439</span>
<span class='line-number'>440</span>
<span class='line-number'>441</span>
</pre></td><td class='code'><pre><code class='scss'><span class='line'><span class="c1">// Soothe Color Palette</span>
</span><span class='line'><span class="na">$soothe-gray-1</span><span class="o">         :</span> <span class="mh">#828282</span><span class="p">;</span>
</span><span class='line'><span class="na">$soothe-gray-1bg</span><span class="o">       :</span> <span class="mh">#0a0a0a</span><span class="p">;</span>
</span><span class='line'><span class="na">$soothe-gray-2</span><span class="o">         :</span> <span class="mh">#333333</span><span class="p">;</span>
</span><span class='line'><span class="na">$soothe-gray-2bg</span><span class="o">       :</span> <span class="mh">#111111</span><span class="p">;</span>
</span><span class='line'><span class="na">$soothe-gray-3</span><span class="o">         :</span> <span class="mh">#aaaaaa</span><span class="p">;</span>
</span><span class='line'><span class="na">$soothe-gray-3bg</span><span class="o">       :</span> <span class="mh">#141414</span><span class="p">;</span>
</span><span class='line'><span class="na">$soothe-gray-4</span><span class="o">         :</span> <span class="mh">#252525</span><span class="p">;</span>
</span><span class='line'><span class="na">$soothe-gray-4bg</span><span class="o">       :</span> <span class="mh">#171717</span><span class="p">;</span>
</span><span class='line'><span class="na">$soothe-gray-5</span><span class="o">         :</span> <span class="mh">#2a2a2a</span><span class="p">;</span>
</span><span class='line'><span class="na">$soothe-gray-5bg</span><span class="o">       :</span> <span class="mh">#1a1a1a</span><span class="p">;</span>
</span><span class='line'><span class="na">$soothe-gray-6</span><span class="o">         :</span> <span class="mh">#202020</span><span class="p">;</span>
</span><span class='line'><span class="na">$soothe-gray-6bg</span><span class="o">       :</span> <span class="mh">#1e1e1e</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="na">$soothe-red-1</span><span class="o">          :</span> <span class="mh">#d13120</span><span class="p">;</span>
</span><span class='line'><span class="na">$soothe-red-1bg</span><span class="o">        :</span> <span class="mh">#1D1515</span><span class="p">;</span>
</span><span class='line'><span class="na">$soothe-red-2</span><span class="o">          :</span> <span class="mh">#b23f1e</span><span class="p">;</span>
</span><span class='line'><span class="na">$soothe-red-2bg</span><span class="o">        :</span> <span class="mh">#251c1e</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="na">$soothe-brown-1</span><span class="o">        :</span> <span class="mh">#9f621d</span><span class="p">;</span>
</span><span class='line'><span class="na">$soothe-brown-1bg</span><span class="o">      :</span> <span class="mh">#2a1f1f</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="na">$soothe-orange-1</span><span class="o">       :</span> <span class="mh">#d97a35</span><span class="p">;</span>
</span><span class='line'><span class="na">$soothe-orange-1bg</span><span class="o">     :</span> <span class="mh">#1F1710</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="na">$soothe-yellow-1</span><span class="o">       :</span> <span class="mh">#deae3e</span><span class="p">;</span>
</span><span class='line'><span class="na">$soothe-yellow-1bg</span><span class="o">     :</span> <span class="mh">#18140C</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="na">$soothe-green-1</span><span class="o">        :</span> <span class="mh">#81af34</span><span class="p">;</span>
</span><span class='line'><span class="na">$soothe-green-1bg</span><span class="o">      :</span> <span class="mh">#1a2321</span><span class="p">;</span>
</span><span class='line'><span class="na">$soothe-green-2</span><span class="o">        :</span> <span class="mh">#4e9f75</span><span class="p">;</span>
</span><span class='line'><span class="na">$soothe-green-2bg</span><span class="o">      :</span> <span class="mh">#1a2321</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="na">$soothe-turquoise-1</span><span class="o">    :</span> <span class="mh">#11535F</span><span class="p">;</span>
</span><span class='line'><span class="na">$soothe-turquoise-2</span><span class="o">    :</span> <span class="mh">#082E36</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="na">$soothe-turquoise-1bg</span><span class="o">  :</span> <span class="mh">#05181C</span><span class="p">;</span>
</span><span class='line'><span class="na">$soothe-turquoise-2bg</span><span class="o">  :</span> <span class="mh">#041316</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="na">$soothe-blue-1</span><span class="o">         :</span> <span class="mh">#7e9fc9</span><span class="p">;</span>
</span><span class='line'><span class="na">$soothe-blue-1bg</span><span class="o">       :</span> <span class="mh">#1e252f</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="na">$soothe-blue-2</span><span class="o">         :</span> <span class="mh">#417598</span><span class="p">;</span>
</span><span class='line'><span class="na">$soothe-blue-2bg</span><span class="o">       :</span> <span class="mh">#1b333e</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="na">$soothe-blue-3</span><span class="o">         :</span> <span class="mh">#00959e</span><span class="p">;</span>
</span><span class='line'><span class="na">$soothe-blue-3bg</span><span class="o">       :</span> <span class="mh">#132228</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="na">$soothe-blue-4</span><span class="o">         :</span> <span class="mh">#365e7a</span><span class="p">;</span>
</span><span class='line'><span class="na">$soothe-blue-4bg</span><span class="o">       :</span> <span class="mh">#172028</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="na">$soothe-magenta-1</span><span class="o">      :</span> <span class="mh">#a737a7</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="na">$soothe-purple-1</span><span class="o">       :</span> <span class="mh">#7878b5</span><span class="p">;</span>
</span><span class='line'><span class="na">$soothe-purple-1bg</span><span class="o">     :</span> <span class="mh">#1D1B25</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// special colors </span>
</span><span class='line'><span class="na">$soothe-background</span><span class="o">     :</span> <span class="mh">#110F13</span><span class="p">;</span>
</span><span class='line'><span class="na">$soothe-alt-background</span><span class="o"> :</span> <span class="mh">#111013</span><span class="p">;</span>
</span><span class='line'><span class="na">$soothe-foreground</span><span class="o">     :</span> <span class="mh">#dcdddd</span><span class="p">;</span>
</span><span class='line'><span class="na">$soothe-hl-line</span><span class="o">        :</span> <span class="mh">#11151a</span><span class="p">;</span>
</span><span class='line'><span class="na">$soothe-selection</span><span class="o">      :</span> <span class="mh">#11151a</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="na">$caption-gradient-top</span><span class="o">:</span>    <span class="mh">#d7d7d7</span><span class="p">;</span>
</span><span class='line'><span class="na">$caption-gradient-bottom</span><span class="o">:</span> <span class="mh">#bbbbbb</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$base03</span><span class="o">:</span> <span class="nv">$sooth-background</span> <span class="nv">!default</span><span class="p">;</span> <span class="c1">//darkest blue</span>
</span><span class='line'><span class="nv">$base02</span><span class="o">:</span> <span class="nv">$sooth-blue-4bg</span>   <span class="nv">!default</span><span class="p">;</span> <span class="c1">//dark blue</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$base01</span><span class="o">:</span> <span class="mh">#586e75</span>          <span class="nv">!default</span><span class="p">;</span> <span class="c1">//darkest gray</span>
</span><span class='line'><span class="nv">$base00</span><span class="o">:</span> <span class="mh">#657b83</span>          <span class="nv">!default</span><span class="p">;</span> <span class="c1">//dark gray</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$base0</span><span class="o">:</span>     <span class="mh">#839496</span>           <span class="nv">!default</span><span class="p">;</span> <span class="c1">//medium gray</span>
</span><span class='line'><span class="nv">$base1</span><span class="o">:</span>     <span class="mh">#93a1a1</span>           <span class="nv">!default</span><span class="p">;</span> <span class="c1">//medium light gray</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$base2</span><span class="o">:</span>     <span class="mh">#eee8d5</span>           <span class="nv">!default</span><span class="p">;</span> <span class="c1">//cream</span>
</span><span class='line'><span class="nv">$base3</span><span class="o">:</span>     <span class="mh">#fdf6e3</span>           <span class="nv">!default</span><span class="p">;</span> <span class="c1">//white</span>
</span><span class='line'>
</span><span class='line'><span class="na">$pre-bg</span><span class="o">:</span> <span class="nv">$soothe-background</span><span class="p">;</span>
</span><span class='line'><span class="na">$pre-border</span><span class="o">:</span> <span class="mh">#345</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">article</span><span class="p">{</span>
</span><span class='line'>  <span class="nt">code</span><span class="o">,</span> <span class="nt">pre</span><span class="p">{</span>
</span><span class='line'>      <span class="na">background</span><span class="o">:</span> <span class="nv">$pre-bg</span><span class="p">;</span>
</span><span class='line'>      <span class="na">border</span><span class="o">:</span> <span class="mi">1</span><span class="kt">px</span> <span class="no">solid</span> <span class="nv">$pre-border</span><span class="p">;</span>
</span><span class='line'>        <span class="na">color</span><span class="o">:</span> <span class="nv">$base00</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nt">code</span><span class="p">{</span>
</span><span class='line'>      <span class="na">font-family</span><span class="o">:</span> <span class="nv">$font-mono</span><span class="p">;</span>
</span><span class='line'>      <span class="na">font-size</span><span class="o">:</span> <span class="mi">0</span><span class="mf">.9</span><span class="kt">em</span><span class="p">;</span>
</span><span class='line'>      <span class="na">padding</span><span class="o">:</span> <span class="mi">1</span><span class="kt">px</span> <span class="mi">3</span><span class="kt">px</span><span class="p">;</span>
</span><span class='line'>      <span class="na">margin</span><span class="o">:</span> <span class="mi">0</span> <span class="mi">3</span><span class="kt">px</span><span class="p">;</span>
</span><span class='line'>        <span class="na">color</span><span class="o">:</span> <span class="mh">#111</span><span class="p">;</span>
</span><span class='line'>        <span class="na">background</span><span class="o">:</span> <span class="nf">rgba</span><span class="p">(</span><span class="mi">0</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="mi">0</span><span class="mf">.1</span><span class="p">);</span>
</span><span class='line'>        <span class="na">border</span><span class="o">:</span> <span class="no">none</span><span class="p">;</span>
</span><span class='line'>      <span class="k">@include</span><span class="nd"> border-radius</span><span class="p">(</span><span class="mi">5</span><span class="kt">px</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nt">pre</span><span class="p">{</span>
</span><span class='line'>      <span class="na">font-size</span><span class="o">:</span> <span class="mi">1</span> <span class="o">/</span> <span class="mi">0</span><span class="mf">.9</span><span class="kt">em</span><span class="p">;</span>
</span><span class='line'>      <span class="na">line-height</span><span class="o">:</span> <span class="mi">1</span><span class="mf">.5</span><span class="p">;</span>
</span><span class='line'>      <span class="na">margin-top</span><span class="o">:</span> <span class="mi">10</span><span class="kt">px</span><span class="p">;</span>
</span><span class='line'>      <span class="na">padding</span><span class="o">:</span> <span class="mi">5</span><span class="kt">px</span> <span class="mi">15</span><span class="kt">px</span><span class="p">;</span>
</span><span class='line'>      <span class="na">overflow-x</span><span class="o">:</span> <span class="no">auto</span><span class="p">;</span>
</span><span class='line'>      <span class="k">@include</span><span class="nd"> border-radius</span><span class="p">(</span><span class="mi">5</span><span class="kt">px</span><span class="p">);</span>
</span><span class='line'>      <span class="nt">code</span><span class="p">{</span>
</span><span class='line'>          <span class="na">background</span><span class="o">:</span> <span class="no">none</span><span class="p">;</span>
</span><span class='line'>          <span class="na">border</span><span class="o">:</span> <span class="no">none</span><span class="p">;</span>
</span><span class='line'>          <span class="na">padding</span><span class="o">:</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>          <span class="na">margin</span><span class="o">:</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>            <span class="na">color</span><span class="o">:</span> <span class="nv">$base00</span><span class="p">;</span>
</span><span class='line'>          <span class="k">@include</span><span class="nd"> border-radius</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nt">figure</span><span class="nc">.code</span><span class="p">{</span>
</span><span class='line'>  <span class="na">background</span><span class="o">:</span> <span class="nv">$pre-bg</span><span class="p">;</span>
</span><span class='line'>  <span class="na">border</span><span class="o">:</span> <span class="mi">0</span><span class="kt">px</span> <span class="no">solid</span> <span class="nv">$caption-gradient-top</span><span class="p">;</span>
</span><span class='line'>  <span class="na">margin-top</span><span class="o">:</span> <span class="mi">10</span><span class="kt">px</span><span class="p">;</span>
</span><span class='line'>  <span class="na">padding</span><span class="o">:</span> <span class="mi">5</span><span class="kt">px</span> <span class="mi">15</span><span class="kt">px</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">@include</span><span class="nd"> border-radius</span><span class="p">(</span><span class="mi">5</span><span class="kt">px</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">table</span> <span class="p">{</span>
</span><span class='line'>        <span class="na">background</span><span class="o">:</span> <span class="no">none</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">figcaption</span><span class="p">{</span>
</span><span class='line'>      <span class="na">font-size</span><span class="o">:</span> <span class="mi">0</span><span class="mf">.9</span><span class="kt">em</span><span class="p">;</span>
</span><span class='line'>      <span class="na">position</span><span class="o">:</span> <span class="no">relative</span><span class="p">;</span>
</span><span class='line'>      <span class="nt">span</span><span class="p">{</span>
</span><span class='line'>          <span class="na">margin</span><span class="o">:</span> <span class="mi">-5</span><span class="kt">px</span> <span class="mi">-15</span><span class="kt">px</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>          <span class="na">padding</span><span class="o">:</span> <span class="mi">0</span><span class="kt">px</span> <span class="mi">15</span><span class="kt">px</span><span class="p">;</span>
</span><span class='line'>          <span class="na">display</span><span class="o">:</span> <span class="no">block</span><span class="p">;</span>
</span><span class='line'>            <span class="na">border-radius</span><span class="o">:</span> <span class="mi">5</span><span class="kt">px</span> <span class="mi">5</span><span class="kt">px</span> <span class="mi">0</span><span class="kt">px</span> <span class="mi">0</span><span class="kt">px</span><span class="p">;</span>
</span><span class='line'>            <span class="na">border-top</span><span class="o">:</span> <span class="mi">1</span><span class="kt">px</span> <span class="nf">lighten</span><span class="p">(</span><span class="nv">$caption-gradient-top</span><span class="o">,</span> <span class="mi">10</span><span class="kt">%</span><span class="p">)</span> <span class="no">solid</span><span class="p">;</span>
</span><span class='line'>          <span class="k">@include</span><span class="nd"> background</span><span class="p">(</span><span class="nf">linear-gradient</span><span class="p">(</span><span class="no">top</span><span class="o">,</span> <span class="nv">$caption-gradient-top</span><span class="o">,</span> <span class="nv">$caption-gradient-bottom</span><span class="p">));</span>
</span><span class='line'>          <span class="k">&amp;</span><span class="nd">:empty</span><span class="p">{</span>
</span><span class='line'>              <span class="na">display</span><span class="o">:</span> <span class="no">none</span><span class="p">;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="nt">a</span><span class="p">{</span>
</span><span class='line'>          <span class="na">position</span><span class="o">:</span> <span class="no">absolute</span><span class="p">;</span>
</span><span class='line'>          <span class="na">top</span><span class="o">:</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>          <span class="na">right</span><span class="o">:</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nt">code</span><span class="o">,</span> <span class="nt">pre</span><span class="p">{</span>
</span><span class='line'>      <span class="na">background</span><span class="o">:</span> <span class="no">none</span><span class="p">;</span>
</span><span class='line'>      <span class="na">border</span><span class="o">:</span> <span class="no">none</span><span class="p">;</span>
</span><span class='line'>      <span class="na">padding</span><span class="o">:</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>      <span class="na">margin</span><span class="o">:</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>      <span class="k">@include</span><span class="nd"> border-radius</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nc">.highlight</span><span class="p">{</span>
</span><span class='line'>      <span class="na">overflow-x</span><span class="o">:</span> <span class="no">auto</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nc">.line-numbers</span><span class="p">{</span>
</span><span class='line'>      <span class="na">border-right</span><span class="o">:</span> <span class="mi">1</span><span class="kt">px</span> <span class="no">solid</span> <span class="nv">$pre-border</span><span class="p">;</span>
</span><span class='line'>      <span class="na">font-family</span><span class="o">:</span> <span class="nv">$font-mono</span><span class="p">;</span>
</span><span class='line'>        <span class="na">font-size</span><span class="o">:</span> <span class="mi">8</span><span class="kt">px</span><span class="p">;</span>
</span><span class='line'>        <span class="na">line-height</span><span class="o">:</span> <span class="mi">16</span><span class="kt">pt</span><span class="p">;</span>
</span><span class='line'>        <span class="na">color</span><span class="o">:</span> <span class="nv">$soothe-blue-2</span><span class="p">;</span>
</span><span class='line'>        <span class="na">background</span><span class="o">:</span> <span class="nv">$soothe-blue-4bg</span><span class="p">;</span>
</span><span class='line'>      <span class="na">padding</span><span class="o">:</span> <span class="mi">0</span> <span class="mi">3</span><span class="kt">px</span> <span class="mi">0</span> <span class="mi">15</span><span class="kt">px</span><span class="p">;</span>
</span><span class='line'>      <span class="na">text-align</span><span class="o">:</span> <span class="no">right</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nt">table</span><span class="p">{</span>
</span><span class='line'>      <span class="na">border</span><span class="o">:</span> <span class="no">none</span><span class="p">;</span>
</span><span class='line'>      <span class="na">text-align</span><span class="o">:</span> <span class="no">left</span><span class="p">;</span>
</span><span class='line'>      <span class="na">margin-top</span><span class="o">:</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>      <span class="nt">td</span><span class="p">{</span>
</span><span class='line'>          <span class="na">text-align</span><span class="o">:</span> <span class="no">left</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nt">td</span><span class="nc">.code</span><span class="p">{</span>
</span><span class='line'>      <span class="na">width</span><span class="o">:</span> <span class="mi">100</span><span class="kt">%</span><span class="p">;</span>
</span><span class='line'>      <span class="na">padding-left</span><span class="o">:</span> <span class="mi">15</span><span class="kt">px</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nc">.entry-content</span> <span class="nc">.gist</span><span class="p">{</span>
</span><span class='line'>  <span class="na">background</span><span class="o">:</span> <span class="nv">$pre-bg</span><span class="p">;</span>
</span><span class='line'>  <span class="na">color</span><span class="o">:</span> <span class="nv">$color-gray01</span><span class="p">;</span>
</span><span class='line'>  <span class="na">padding</span><span class="o">:</span> <span class="mi">30</span><span class="kt">px</span> <span class="mi">15</span><span class="kt">px</span> <span class="mi">5</span><span class="kt">px</span><span class="p">;</span>
</span><span class='line'>  <span class="na">margin-top</span><span class="o">:</span> <span class="mi">10</span><span class="kt">px</span><span class="p">;</span>
</span><span class='line'>  <span class="na">border</span><span class="o">:</span> <span class="mi">1</span><span class="kt">px</span> <span class="no">solid</span> <span class="nv">$pre-border</span><span class="p">;</span>
</span><span class='line'>  <span class="na">position</span><span class="o">:</span> <span class="no">relative</span><span class="p">;</span>
</span><span class='line'>  <span class="na">overflow</span><span class="o">:</span> <span class="no">hidden</span><span class="p">;</span>
</span><span class='line'>  <span class="k">@include</span><span class="nd"> border-radius</span><span class="p">(</span><span class="mi">5</span><span class="kt">px</span><span class="p">);</span>
</span><span class='line'>  <span class="nc">.gist-file</span><span class="p">{</span>
</span><span class='line'>      <span class="na">margin</span><span class="o">:</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>      <span class="nc">.gist-data</span><span class="p">{</span>
</span><span class='line'>          <span class="na">background</span><span class="o">:</span> <span class="no">transparent</span><span class="p">;</span>
</span><span class='line'>          <span class="na">border</span><span class="o">:</span> <span class="no">none</span><span class="p">;</span>
</span><span class='line'>          <span class="nt">pre</span><span class="p">{</span>
</span><span class='line'>              <span class="na">font</span><span class="o">:</span> <span class="mi">0</span><span class="mf">.9</span><span class="kt">em</span> <span class="nv">$font-mono</span><span class="p">;</span>
</span><span class='line'>              <span class="na">line-height</span><span class="o">:</span> <span class="mi">1</span><span class="mf">.5</span><span class="p">;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="nc">.gist-meta</span><span class="p">{</span>
</span><span class='line'>          <span class="na">font</span><span class="o">:</span> <span class="mi">300</span> <span class="mi">0</span><span class="mf">.9</span><span class="kt">em</span> <span class="nv">$font-default</span><span class="p">;</span>
</span><span class='line'>          <span class="na">line-height</span><span class="o">:</span> <span class="mi">1</span><span class="mf">.5</span><span class="p">;</span>
</span><span class='line'>          <span class="na">margin</span><span class="o">:</span> <span class="mi">0</span> <span class="mi">-16</span><span class="kt">px</span> <span class="mi">-6</span><span class="kt">px</span><span class="p">;</span>
</span><span class='line'>          <span class="na">padding</span><span class="o">:</span> <span class="mi">5</span><span class="kt">px</span> <span class="mi">15</span><span class="kt">px</span><span class="p">;</span>
</span><span class='line'>          <span class="k">@include</span><span class="nd"> background</span><span class="p">(</span><span class="nf">linear-gradient</span><span class="p">(</span><span class="no">top</span><span class="o">,</span> <span class="nv">$pre-bg</span><span class="o">,</span> <span class="nv">$pre-border</span><span class="p">));</span>
</span><span class='line'>          <span class="nt">a</span><span class="p">{</span>
</span><span class='line'>              <span class="na">color</span><span class="o">:</span> <span class="nv">$color-main</span><span class="p">;</span>
</span><span class='line'>              <span class="k">&amp;</span><span class="nd">:first-of-type</span><span class="p">{</span>
</span><span class='line'>                  <span class="na">position</span><span class="o">:</span> <span class="no">absolute</span><span class="p">;</span>
</span><span class='line'>                  <span class="na">top</span><span class="o">:</span> <span class="mi">5</span><span class="kt">px</span><span class="p">;</span>
</span><span class='line'>                  <span class="na">right</span><span class="o">:</span> <span class="mi">15</span><span class="kt">px</span><span class="p">;</span>
</span><span class='line'>                  <span class="na">z-index</span><span class="o">:</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>              <span class="k">&amp;</span><span class="nd">:nth-of-type</span><span class="o">(</span><span class="nt">2</span><span class="o">)</span><span class="p">{</span>
</span><span class='line'>                  <span class="na">position</span><span class="o">:</span> <span class="no">absolute</span><span class="p">;</span>
</span><span class='line'>                  <span class="na">top</span><span class="o">:</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>                  <span class="na">left</span><span class="o">:</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>                  <span class="na">padding</span><span class="o">:</span> <span class="mi">5</span><span class="kt">px</span> <span class="mi">15</span><span class="kt">px</span><span class="p">;</span>
</span><span class='line'>                  <span class="na">width</span><span class="o">:</span> <span class="mi">100</span><span class="kt">%</span><span class="p">;</span>
</span><span class='line'>                  <span class="k">@include</span><span class="nd"> background</span><span class="p">(</span><span class="nf">linear-gradient</span><span class="p">(</span><span class="no">top</span><span class="o">,</span> <span class="nv">$pre-border</span><span class="o">,</span> <span class="nv">$pre-bg</span><span class="p">));</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nt">figure</span><span class="nc">.code</span><span class="o">,</span> <span class="nc">.gist-highlight</span><span class="p">{</span>
</span><span class='line'>  <span class="nc">.c</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span><span class="nv">$base01</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>      <span class="na">font-style</span><span class="o">:</span> <span class="no">italic</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* Comment */</span>
</span><span class='line'>  <span class="nc">.cm</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span><span class="nv">$base01</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>      <span class="na">font-style</span><span class="o">:</span> <span class="no">italic</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* Comment.Multiline */</span>
</span><span class='line'>  <span class="nc">.cp</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span><span class="nv">$base01</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>      <span class="na">font-style</span><span class="o">:</span> <span class="no">italic</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* Comment.Preproc */</span>
</span><span class='line'>  <span class="nc">.c1</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span><span class="nv">$base01</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>      <span class="na">font-style</span><span class="o">:</span> <span class="no">italic</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* Comment.Single */</span>
</span><span class='line'>  <span class="nc">.cs</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span><span class="nv">$base01</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>      <span class="nt">font-weight</span><span class="nd">:bold</span> <span class="o">!</span><span class="nt">important</span><span class="o">;</span>
</span><span class='line'>      <span class="nt">font-style</span><span class="nd">:</span> <span class="nt">italic</span> <span class="o">!</span><span class="nt">important</span><span class="o">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* Comment.Special */</span>
</span><span class='line'>  <span class="nc">.err</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span><span class="nv">$soothe-red-2</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>      <span class="na">background</span><span class="o">:</span> <span class="no">none</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* Error */</span>
</span><span class='line'>  <span class="nc">.k</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span> <span class="nv">$soothe-orange-1</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* Keyword */</span>
</span><span class='line'>  <span class="nc">.o</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span><span class="nv">$base1</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>      <span class="na">font-weight</span><span class="o">:</span> <span class="no">bold</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* Operator */</span>
</span><span class='line'>  <span class="nc">.p</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span> <span class="nv">$base1</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* Operator */</span>
</span><span class='line'>  <span class="nc">.ow</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span><span class="nv">$soothe-blue-3</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>      <span class="na">font-weight</span><span class="o">:</span> <span class="no">bold</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* Operator.Word */</span>
</span><span class='line'>  <span class="nc">.gd</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span><span class="nv">$base1</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>      <span class="nt">background-color</span><span class="nd">:mix</span><span class="o">(</span><span class="err">$</span><span class="nt">soothe-red-2</span><span class="o">,</span><span class="err">$</span><span class="nt">base03</span><span class="o">,</span><span class="nt">25</span><span class="err">%</span><span class="o">)</span> <span class="o">!</span><span class="nt">important</span><span class="o">;</span>
</span><span class='line'>      <span class="nt">display</span><span class="nd">:</span> <span class="nt">inline-block</span><span class="o">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* Generic.Deleted */</span>
</span><span class='line'>  <span class="nc">.gd</span> <span class="nc">.x</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span><span class="nv">$base1</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>      <span class="nt">background-color</span><span class="nd">:mix</span><span class="o">(</span><span class="err">$</span><span class="nt">soothe-red-2</span><span class="o">,</span><span class="err">$</span><span class="nt">base03</span><span class="o">,</span><span class="nt">35</span><span class="err">%</span><span class="o">)</span> <span class="o">!</span><span class="nt">important</span><span class="o">;</span>
</span><span class='line'>      <span class="nt">display</span><span class="nd">:</span> <span class="nt">inline-block</span><span class="o">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* Generic.Deleted.Specific */</span>
</span><span class='line'>  <span class="nc">.ge</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span><span class="nv">$base1</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>      <span class="na">font-style</span><span class="o">:</span> <span class="no">italic</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* Generic.Emph */</span>
</span><span class='line'>  <span class="nc">.gh</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span> <span class="nv">$base01</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* Generic.Heading */</span>
</span><span class='line'>  <span class="nc">.gi</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span><span class="nv">$base1</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>      <span class="nt">background-color</span><span class="nd">:mix</span><span class="o">(</span><span class="err">$</span><span class="nt">soothe-green-2</span><span class="o">,</span><span class="err">$</span><span class="nt">base03</span><span class="o">,</span><span class="nt">20</span><span class="err">%</span><span class="o">)</span> <span class="o">!</span><span class="nt">important</span><span class="o">;</span>
</span><span class='line'>      <span class="nt">display</span><span class="nd">:</span> <span class="nt">inline-block</span><span class="o">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* Generic.Inserted */</span>
</span><span class='line'>  <span class="nc">.gi</span> <span class="nc">.x</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span><span class="nv">$base1</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>      <span class="nt">background-color</span><span class="nd">:mix</span><span class="o">(</span><span class="err">$</span><span class="nt">soothe-green-2</span><span class="o">,</span><span class="err">$</span><span class="nt">base03</span><span class="o">,</span><span class="nt">40</span><span class="err">%</span><span class="o">)</span> <span class="o">!</span><span class="nt">important</span><span class="o">;</span>
</span><span class='line'>      <span class="nt">display</span><span class="nd">:</span> <span class="nt">inline-block</span><span class="o">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* Generic.Inserted.Specific */</span>
</span><span class='line'>  <span class="nc">.gs</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span><span class="nv">$base1</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>      <span class="na">font-weight</span><span class="o">:</span> <span class="no">bold</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* Generic.Strong */</span>
</span><span class='line'>  <span class="nc">.gu</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span> <span class="nv">$soothe-purple-1</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* Generic.Subheading */</span>
</span><span class='line'>  <span class="nc">.kc</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span><span class="nv">$soothe-green-2</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>      <span class="na">font-weight</span><span class="o">:</span> <span class="no">bold</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* Keyword.Constant */</span>
</span><span class='line'>  <span class="nc">.kd</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span> <span class="nv">$soothe-blue-4</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* Keyword.Declaration */</span>
</span><span class='line'>  <span class="nc">.kp</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span><span class="nv">$soothe-orange-1</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>      <span class="na">font-weight</span><span class="o">:</span> <span class="no">bold</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* Keyword.Pseudo */</span>
</span><span class='line'>  <span class="nc">.kr</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span><span class="nv">$soothe-magenta-1</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>      <span class="na">font-weight</span><span class="o">:</span> <span class="no">bold</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* Keyword.Reserved */</span>
</span><span class='line'>  <span class="nc">.kt</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span> <span class="nv">$soothe-blue-3</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* Keyword.Type */</span>
</span><span class='line'>  <span class="nc">.n</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span><span class="nv">$soothe-blue-4</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nc">.na</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span> <span class="nv">$soothe-blue-4</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* Name.Attribute */</span>
</span><span class='line'>  <span class="nc">.nb</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span> <span class="nv">$soothe-green-2</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* Name.Builtin */</span>
</span><span class='line'>  <span class="nc">.nc</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span> <span class="nv">$soothe-magenta-1</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* Name.Class */</span>
</span><span class='line'>  <span class="nc">.no</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span> <span class="nv">$soothe-yellow-1</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* Name.Constant */</span>
</span><span class='line'>  <span class="nc">.nl</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span><span class="nv">$soothe-green-2</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nc">.ne</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span><span class="nv">$soothe-blue-4</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>      <span class="na">font-weight</span><span class="o">:</span> <span class="no">bold</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* Name.Exception */</span>
</span><span class='line'>  <span class="nc">.nf</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span><span class="nv">$soothe-blue-4</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>      <span class="na">font-weight</span><span class="o">:</span> <span class="no">bold</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* Name.Function */</span>
</span><span class='line'>  <span class="nc">.nn</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span> <span class="nv">$soothe-yellow-1</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* Name.Namespace */</span>
</span><span class='line'>  <span class="nc">.nt</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span><span class="nv">$soothe-blue-4</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>      <span class="na">font-weight</span><span class="o">:</span> <span class="no">bold</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* Name.Tag */</span>
</span><span class='line'>  <span class="nc">.nx</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span><span class="nv">$soothe-yellow-1</span> <span class="nv">!Important</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nc">.vg</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span> <span class="nv">$soothe-blue-4</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* Name.Variable.Global */</span>
</span><span class='line'>  <span class="nc">.vi</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span> <span class="nv">$soothe-blue-4</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* Name.Variable.Instance */</span>
</span><span class='line'>  <span class="nc">.nv</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span> <span class="nv">$soothe-blue-4</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* Name.Variable */</span>
</span><span class='line'>  <span class="nc">.mf</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span> <span class="nv">$soothe-blue-3</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* Literal.Number.Float */</span>
</span><span class='line'>  <span class="nc">.m</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span> <span class="nv">$soothe-blue-3</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* Literal.Number */</span>
</span><span class='line'>  <span class="nc">.mh</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span> <span class="nv">$soothe-blue-3</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* Literal.Number.Hex */</span>
</span><span class='line'>  <span class="nc">.mi</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span> <span class="nv">$soothe-blue-3</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* Literal.Number.Integer */</span>
</span><span class='line'>  <span class="nc">.s</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span> <span class="nv">$soothe-blue-3</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* Literal.String */</span>
</span><span class='line'>  <span class="nc">.sd</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span> <span class="nv">$soothe-blue-3</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* Literal.String.Doc */</span>
</span><span class='line'>  <span class="nc">.s2</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span> <span class="nv">$soothe-blue-3</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* Literal.String.Double */</span>
</span><span class='line'>  <span class="nc">.se</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span> <span class="nv">$soothe-red-2</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* Literal.String.Escape */</span>
</span><span class='line'>  <span class="nc">.si</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span> <span class="nv">$soothe-blue-4</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* Literal.String.Interpol */</span>
</span><span class='line'>  <span class="nc">.sr</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span> <span class="nv">$soothe-blue-3</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* Literal.String.Regex */</span>
</span><span class='line'>  <span class="nc">.s1</span> <span class="p">{</span>
</span><span class='line'>      <span class="na">color</span><span class="o">:</span> <span class="nv">$soothe-blue-3</span> <span class="nv">!important</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="cm">/* Literal.String.Single */</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Notes on deftheme]]></title>
    <link href="http://emacsfodder.github.com/blog/notes-on-deftheme/"/>
    <updated>2013-01-15T00:00:00+11:00</updated>
    <id>http://emacsfodder.github.com/blog/notes-on-deftheme</id>
    <content type="html"><![CDATA[<p>I have a bunch of Emacs color themes that I built a few years ago,
they use the old <code>color-theme.el</code> system, I&#8217;d also adapted a web-based
theme creator, so that it could load existing themes, as long as they
were in a fixed format, the same as used by
<a href="http://themes.sweyla.com/">http://themes.sweyla.com/</a> - All in all I
was quite invested in <code>color-theme.el</code></p>

<!--more-->


<p>I&#8217;ve begun to convert some of my regular themes over to the new
<code>(deftheme)</code> format. The main advangatge is there&#8217;s no reliance on
<code>color-theme.el</code> anymore. There&#8217;s a couple of small drawbacks, when a
theme is first loaded, you need to confirm it, since it&#8217;s possible to
run arbitrary emacs-lisp in it. You then need to enable it for future
use, so it&#8217;s a quick trip to <code>.emacs</code> - This is only going to bug you
if you run Emacs in <code>-Q</code> quick-start mode, which I do in some cases.</p>

<p>With Emacs 24 you can create a theme <code>customize-create-theme</code> it&#8217;s ok,
but not the best way to to it, it&#8217;s much better to learn how to work
with theme source code, which like everything that extends Emacs, is
written in emacs lisp.</p>

<p>To that end, have a look at this base template, it&#8217;s meant to serve as
a guide, it&#8217;d be better to create a few <code>yas/snippets</code>.</p>

<figure class='code'><figcaption><span> (template-theme.el)</span> <a href='http://emacsfodder.github.com/code/template-theme.el'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='cl'><span class='line'>    <span class="c1">;;; Filename: name-theme.el </span>
</span><span class='line'><span class="p">(</span><span class="nv">deftheme</span> <span class="nv">name</span>
</span><span class='line'>  <span class="s">&quot;DOCSTRING&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">;; Not a bad idea to define a palette...</span>
</span><span class='line'><span class="p">(</span><span class="k">let</span> <span class="p">(</span>
</span><span class='line'>      <span class="p">(</span><span class="nv">color-1</span> <span class="s">&quot;#ffffff&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="p">(</span><span class="nv">color-2</span> <span class="s">&quot;#ff0000&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="p">(</span><span class="nv">color-3</span> <span class="s">&quot;#00ff00&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="p">(</span><span class="nv">color-4</span> <span class="s">&quot;#0000ff&quot;</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">;; Set faces</span>
</span><span class='line'>  <span class="p">(</span><span class="nv">custom-theme-set-faces</span>
</span><span class='line'>   <span class="ss">&#39;name</span> <span class="c1">;; you must use the same theme name here...</span>
</span><span class='line'>   <span class="o">&#39;</span><span class="p">(</span><span class="nv">default</span> <span class="p">((</span><span class="no">t</span> <span class="p">(</span><span class="ss">:foreground</span> <span class="o">,</span><span class="nv">color-1</span> <span class="ss">:background</span> <span class="nv">black</span><span class="p">))))</span>
</span><span class='line'>   <span class="o">&#39;</span><span class="p">(</span><span class="nv">cursor</span>  <span class="p">((</span><span class="no">t</span> <span class="p">(</span><span class="ss">:background</span> <span class="o">,</span><span class="nv">color-4</span><span class="p">))))</span>
</span><span class='line'>   <span class="o">&#39;</span><span class="p">(</span><span class="nv">fringe</span>  <span class="p">((</span><span class="no">t</span> <span class="p">(</span><span class="ss">:background</span> <span class="o">,</span><span class="nv">color-3</span><span class="p">))))</span>
</span><span class='line'>       <span class="c1">;;; etc... </span>
</span><span class='line'>       <span class="c1">;;; don&#39;t use these settings of course, </span>
</span><span class='line'>       <span class="c1">;;; they&#39;re horrible.</span>
</span><span class='line'>   <span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">;; Set variables</span>
</span><span class='line'>  <span class="p">(</span><span class="nv">custom-theme-set-variables</span>
</span><span class='line'>   <span class="ss">&#39;name</span> <span class="c1">;; again specify the same theme name...</span>
</span><span class='line'>   <span class="o">&#39;</span><span class="p">(</span><span class="nv">any-variable</span> <span class="nv">EXPR</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>   <span class="p">(</span><span class="nv">provide-theme</span> <span class="ss">&#39;name</span><span class="p">)</span>
</span><span class='line'>    <span class="c1">;;; name-theme.el ends here</span>
</span></code></pre></td></tr></table></div></figure>


<p>For more advanced examples, look at the new built in themes, I&#8217;d
recommend <code>tango-theme.el</code> which you&#8217;ll be able to find using, <code>M-x
describe-theme</code> <code>tango</code>.</p>

<p>Have a look at <a href="http://emacsfodder.github.com/blog/hexrgb-some-convenient-functions/">my extensions</a> to Drew Adams
<a href="http://emacswiki.org/emacs/hexrgb.el"><code>hexrgb.el</code></a> for some useful
color helpers, and don&#8217;t forget the always helpful
<a href="http://julien.danjou.info/projects/emacs-packages"><code>rainbow-mode.el</code></a>. Personally
I think Emacs plus these little extensions, are the best way to make
themes.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mesa theme]]></title>
    <link href="http://emacsfodder.github.com/blog/mesa-theme/"/>
    <updated>2013-01-14T00:00:00+11:00</updated>
    <id>http://emacsfodder.github.com/blog/mesa-theme</id>
    <content type="html"><![CDATA[<p>Mesa is a theme for Emacs 24, works in both the terminal and full
color GUIs.</p>

<p>Download : <a href="http://emacsfodder.github.com/downloads/mesa-theme.el">mesa-theme.el</a></p>

<h1>Screenshots</h1>

<p><img src="http://emacsfodder.github.com/media/mesa-screen.png" alt="" />
<img src="http://emacsfodder.github.com/media/mesa-screen2.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Soothe theme]]></title>
    <link href="http://emacsfodder.github.com/blog/soothe-theme/"/>
    <updated>2012-07-17T00:00:00+10:00</updated>
    <id>http://emacsfodder.github.com/blog/soothe-theme</id>
    <content type="html"><![CDATA[<p>This is a theme I use almost exclusively now, it&#8217;s not Terminal
friendly, and I should fix that, but if you&#8217;re using Emacs.app on OS
X, or in another full color window manager it&#8217;ll serve you well.</p>

<p>The block-highlights may put you off, I find them very helpful for
some reason I&#8217;m unable to clarify for you in any technical /
psychological / color-theory sense, but try it out anyway.</p>

<p>Feel free to fork modify, whatever, it&#8217;s MIT Licensed.</p>

<p><a href="http://emacsfodder.github.com/downloads/soothe-theme.el">Download: soothe-theme.el</a></p>

<h1>Screenshots</h1>

<p><img src="http://emacsfodder.github.com/media/soothe-ruby.png" alt="" /></p>

<p><img src="http://emacsfodder.github.com/media/soothe-html.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jade Dragon theme]]></title>
    <link href="http://emacsfodder.github.com/blog/jadedragon-theme/"/>
    <updated>2012-07-03T00:00:00+10:00</updated>
    <id>http://emacsfodder.github.com/blog/jadedragon-theme</id>
    <content type="html"><![CDATA[<p><a href="http://emacsfodder.github.com/downloads/jadedragon-theme.el">Download: jade dragon</a></p>

<h3>emacs-lisp</h3>

<p><img src="http://emacsfodder.github.com/media/jadedragon-emacslisp.png" alt="emacs-lisp" /></p>

<h3>ObjC</h3>

<p><img src="http://emacsfodder.github.com/media/jadedragon-objc.png" alt="SleepDisplay console utility" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tangerine Theme]]></title>
    <link href="http://emacsfodder.github.com/blog/tangerine-theme/"/>
    <updated>2012-07-02T00:00:00+10:00</updated>
    <id>http://emacsfodder.github.com/blog/tangerine-theme</id>
    <content type="html"><![CDATA[<p>Amber CRTs, Tangerine Dream, retro-futuristic, kandy kolored tangerine
flake streamline baby&#8230; all these things held some influence over
the creation of this theme.  Well, those things, and the fact I like orange.</p>

<p><a href="http://emacsfodder.github.com/downloads/tangerine-theme.el">Download: Tangerine</a></p>

<h2>Obligatory screenshots</h2>

<p><img src="http://emacsfodder.github.com/media/tangerine-clojure.png" alt="Sample emacslisp" /></p>

<h3>Tangerine shell</h3>

<p><img src="http://emacsfodder.github.com/media/tangerine-shell.png" alt="Sample Shell script" /></p>

<h3>Tangerine Perl</h3>

<p><img src="http://emacsfodder.github.com/media/tangerine-perls.png" alt="Sample Perl code Git.pm" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HexRGB.el with some extras]]></title>
    <link href="http://emacsfodder.github.com/blog/hexrgb-some-convenient-functions/"/>
    <updated>2012-06-30T00:00:00+10:00</updated>
    <id>http://emacsfodder.github.com/blog/hexrgb-some-convenient-functions</id>
    <content type="html"><![CDATA[<p>If you use a lot of css, you probably know there a few useful
preprocessor, like <a href="http://sass-lang.com">SASS</a> and
<a href="http://lesscss.org">LESS</a> both of which give us a collection of color
manipulation functions.</p>

<p>Building on the work done by the most excellent <strong>Drew Adams</strong> in his
hexrgb.el (the original is at http://www.emacswiki.org/cgi-bin/wiki/hexrgb.el)</p>

<p>I&#8217;ve added a few extensions, and tweaks to make it even more useful.</p>

<!--more-->


<p><code>hexrgb-rgb-to-hex</code> and <code>hexrgb-hsv-to-hex</code> accepts an additional
argument <code>nb-digits</code> so that hex colors returned are with 2 digits per
r,g,b value.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(hexrgb-hsv-to-hex   0.05   0.7   0.4     2) 
</span><span class='line'>;;------------------ ^ ---- ^ --- ^ ----- ^ -------
</span><span class='line'>;;                   hue    sat   light   nb-digits</span></code></pre></td></tr></table></div></figure>


<p>Which returns <span style="color: white; background-color:#6639B8;
padding:4px; border-radius: 3px;">#6639B8</span></p>

<p>I&#8217;ve also added a few convenience functions that provide color
manipulation direct from hex colors. Currently these just work in
eshell or interactive emacs lisp modes.</p>

<p>For example:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(hexrgb-hex-set-brightness "#ff0000" 0.3)</span></code></pre></td></tr></table></div></figure>


<p>returns <span style="color:white;background-color:#4C0000; padding:4px;border-radius: 3px;">#4C0000</span></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(hexrgb-hex-set-saturation "#ff0000" 0.5)</span></code></pre></td></tr></table></div></figure>


<p>returns <span style="color:white;background-color:#FF7F7F; padding:4px; border-radius: 3px;">#FF7F7F</span></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(hexrgb-hex-set-hue "#FF0000" 0.6)</span></code></pre></td></tr></table></div></figure>


<p>returns <span style="color:white;background-color:#0066FF; padding:4px; border-radius: 3px;">#0066FF</span></p>

<p>Color groups,</p>

<p>This makes working with colors easier, for example, you
could add <code>(require 'hexrgb)</code> to a theme definition and use the
functions to manipulate theme colors, or just switch on
<a href="https://github.com/emacsmirror/rainbow-mode"><em>rainbow-mode</em></a> when
you&#8217;re in eshell, and play.</p>

<p>Here&#8217;s the full code, to get the new functions, they&#8217;re at the bottom.</p>

<figure class='code'><figcaption><span> (hexrgb.el)</span> <a href='http://emacsfodder.github.com/code/hexrgb.el'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
<span class='line-number'>221</span>
<span class='line-number'>222</span>
<span class='line-number'>223</span>
<span class='line-number'>224</span>
<span class='line-number'>225</span>
<span class='line-number'>226</span>
<span class='line-number'>227</span>
<span class='line-number'>228</span>
<span class='line-number'>229</span>
<span class='line-number'>230</span>
<span class='line-number'>231</span>
<span class='line-number'>232</span>
<span class='line-number'>233</span>
<span class='line-number'>234</span>
<span class='line-number'>235</span>
<span class='line-number'>236</span>
<span class='line-number'>237</span>
<span class='line-number'>238</span>
<span class='line-number'>239</span>
<span class='line-number'>240</span>
<span class='line-number'>241</span>
<span class='line-number'>242</span>
<span class='line-number'>243</span>
<span class='line-number'>244</span>
<span class='line-number'>245</span>
<span class='line-number'>246</span>
<span class='line-number'>247</span>
<span class='line-number'>248</span>
<span class='line-number'>249</span>
<span class='line-number'>250</span>
<span class='line-number'>251</span>
<span class='line-number'>252</span>
<span class='line-number'>253</span>
<span class='line-number'>254</span>
<span class='line-number'>255</span>
<span class='line-number'>256</span>
<span class='line-number'>257</span>
<span class='line-number'>258</span>
<span class='line-number'>259</span>
<span class='line-number'>260</span>
<span class='line-number'>261</span>
<span class='line-number'>262</span>
<span class='line-number'>263</span>
<span class='line-number'>264</span>
<span class='line-number'>265</span>
<span class='line-number'>266</span>
<span class='line-number'>267</span>
<span class='line-number'>268</span>
<span class='line-number'>269</span>
<span class='line-number'>270</span>
<span class='line-number'>271</span>
<span class='line-number'>272</span>
<span class='line-number'>273</span>
<span class='line-number'>274</span>
<span class='line-number'>275</span>
<span class='line-number'>276</span>
<span class='line-number'>277</span>
<span class='line-number'>278</span>
<span class='line-number'>279</span>
<span class='line-number'>280</span>
<span class='line-number'>281</span>
<span class='line-number'>282</span>
<span class='line-number'>283</span>
<span class='line-number'>284</span>
<span class='line-number'>285</span>
<span class='line-number'>286</span>
<span class='line-number'>287</span>
<span class='line-number'>288</span>
<span class='line-number'>289</span>
<span class='line-number'>290</span>
<span class='line-number'>291</span>
<span class='line-number'>292</span>
<span class='line-number'>293</span>
<span class='line-number'>294</span>
<span class='line-number'>295</span>
<span class='line-number'>296</span>
<span class='line-number'>297</span>
<span class='line-number'>298</span>
<span class='line-number'>299</span>
<span class='line-number'>300</span>
<span class='line-number'>301</span>
<span class='line-number'>302</span>
<span class='line-number'>303</span>
<span class='line-number'>304</span>
<span class='line-number'>305</span>
<span class='line-number'>306</span>
<span class='line-number'>307</span>
<span class='line-number'>308</span>
<span class='line-number'>309</span>
<span class='line-number'>310</span>
<span class='line-number'>311</span>
<span class='line-number'>312</span>
<span class='line-number'>313</span>
<span class='line-number'>314</span>
<span class='line-number'>315</span>
<span class='line-number'>316</span>
<span class='line-number'>317</span>
<span class='line-number'>318</span>
<span class='line-number'>319</span>
<span class='line-number'>320</span>
<span class='line-number'>321</span>
<span class='line-number'>322</span>
<span class='line-number'>323</span>
<span class='line-number'>324</span>
<span class='line-number'>325</span>
<span class='line-number'>326</span>
<span class='line-number'>327</span>
<span class='line-number'>328</span>
<span class='line-number'>329</span>
<span class='line-number'>330</span>
<span class='line-number'>331</span>
<span class='line-number'>332</span>
<span class='line-number'>333</span>
<span class='line-number'>334</span>
<span class='line-number'>335</span>
<span class='line-number'>336</span>
<span class='line-number'>337</span>
<span class='line-number'>338</span>
<span class='line-number'>339</span>
<span class='line-number'>340</span>
<span class='line-number'>341</span>
<span class='line-number'>342</span>
<span class='line-number'>343</span>
<span class='line-number'>344</span>
<span class='line-number'>345</span>
<span class='line-number'>346</span>
<span class='line-number'>347</span>
<span class='line-number'>348</span>
<span class='line-number'>349</span>
<span class='line-number'>350</span>
<span class='line-number'>351</span>
<span class='line-number'>352</span>
<span class='line-number'>353</span>
<span class='line-number'>354</span>
<span class='line-number'>355</span>
<span class='line-number'>356</span>
<span class='line-number'>357</span>
<span class='line-number'>358</span>
<span class='line-number'>359</span>
<span class='line-number'>360</span>
<span class='line-number'>361</span>
<span class='line-number'>362</span>
<span class='line-number'>363</span>
<span class='line-number'>364</span>
<span class='line-number'>365</span>
<span class='line-number'>366</span>
<span class='line-number'>367</span>
<span class='line-number'>368</span>
<span class='line-number'>369</span>
<span class='line-number'>370</span>
<span class='line-number'>371</span>
<span class='line-number'>372</span>
<span class='line-number'>373</span>
<span class='line-number'>374</span>
<span class='line-number'>375</span>
<span class='line-number'>376</span>
<span class='line-number'>377</span>
<span class='line-number'>378</span>
<span class='line-number'>379</span>
<span class='line-number'>380</span>
<span class='line-number'>381</span>
<span class='line-number'>382</span>
<span class='line-number'>383</span>
<span class='line-number'>384</span>
<span class='line-number'>385</span>
<span class='line-number'>386</span>
<span class='line-number'>387</span>
<span class='line-number'>388</span>
<span class='line-number'>389</span>
<span class='line-number'>390</span>
<span class='line-number'>391</span>
<span class='line-number'>392</span>
<span class='line-number'>393</span>
<span class='line-number'>394</span>
<span class='line-number'>395</span>
<span class='line-number'>396</span>
<span class='line-number'>397</span>
<span class='line-number'>398</span>
<span class='line-number'>399</span>
<span class='line-number'>400</span>
<span class='line-number'>401</span>
<span class='line-number'>402</span>
<span class='line-number'>403</span>
<span class='line-number'>404</span>
<span class='line-number'>405</span>
<span class='line-number'>406</span>
<span class='line-number'>407</span>
<span class='line-number'>408</span>
<span class='line-number'>409</span>
<span class='line-number'>410</span>
<span class='line-number'>411</span>
<span class='line-number'>412</span>
<span class='line-number'>413</span>
<span class='line-number'>414</span>
<span class='line-number'>415</span>
<span class='line-number'>416</span>
<span class='line-number'>417</span>
<span class='line-number'>418</span>
<span class='line-number'>419</span>
<span class='line-number'>420</span>
<span class='line-number'>421</span>
<span class='line-number'>422</span>
<span class='line-number'>423</span>
<span class='line-number'>424</span>
<span class='line-number'>425</span>
<span class='line-number'>426</span>
<span class='line-number'>427</span>
<span class='line-number'>428</span>
<span class='line-number'>429</span>
<span class='line-number'>430</span>
<span class='line-number'>431</span>
<span class='line-number'>432</span>
<span class='line-number'>433</span>
<span class='line-number'>434</span>
<span class='line-number'>435</span>
<span class='line-number'>436</span>
<span class='line-number'>437</span>
<span class='line-number'>438</span>
<span class='line-number'>439</span>
<span class='line-number'>440</span>
<span class='line-number'>441</span>
<span class='line-number'>442</span>
<span class='line-number'>443</span>
<span class='line-number'>444</span>
<span class='line-number'>445</span>
<span class='line-number'>446</span>
<span class='line-number'>447</span>
<span class='line-number'>448</span>
<span class='line-number'>449</span>
<span class='line-number'>450</span>
<span class='line-number'>451</span>
<span class='line-number'>452</span>
<span class='line-number'>453</span>
<span class='line-number'>454</span>
<span class='line-number'>455</span>
<span class='line-number'>456</span>
<span class='line-number'>457</span>
<span class='line-number'>458</span>
<span class='line-number'>459</span>
<span class='line-number'>460</span>
<span class='line-number'>461</span>
<span class='line-number'>462</span>
<span class='line-number'>463</span>
<span class='line-number'>464</span>
<span class='line-number'>465</span>
<span class='line-number'>466</span>
<span class='line-number'>467</span>
<span class='line-number'>468</span>
<span class='line-number'>469</span>
<span class='line-number'>470</span>
<span class='line-number'>471</span>
<span class='line-number'>472</span>
<span class='line-number'>473</span>
<span class='line-number'>474</span>
<span class='line-number'>475</span>
<span class='line-number'>476</span>
<span class='line-number'>477</span>
<span class='line-number'>478</span>
<span class='line-number'>479</span>
<span class='line-number'>480</span>
<span class='line-number'>481</span>
<span class='line-number'>482</span>
<span class='line-number'>483</span>
<span class='line-number'>484</span>
<span class='line-number'>485</span>
<span class='line-number'>486</span>
<span class='line-number'>487</span>
<span class='line-number'>488</span>
<span class='line-number'>489</span>
<span class='line-number'>490</span>
<span class='line-number'>491</span>
<span class='line-number'>492</span>
<span class='line-number'>493</span>
<span class='line-number'>494</span>
<span class='line-number'>495</span>
<span class='line-number'>496</span>
<span class='line-number'>497</span>
<span class='line-number'>498</span>
<span class='line-number'>499</span>
<span class='line-number'>500</span>
<span class='line-number'>501</span>
<span class='line-number'>502</span>
<span class='line-number'>503</span>
<span class='line-number'>504</span>
<span class='line-number'>505</span>
<span class='line-number'>506</span>
<span class='line-number'>507</span>
<span class='line-number'>508</span>
<span class='line-number'>509</span>
<span class='line-number'>510</span>
<span class='line-number'>511</span>
<span class='line-number'>512</span>
<span class='line-number'>513</span>
<span class='line-number'>514</span>
<span class='line-number'>515</span>
<span class='line-number'>516</span>
<span class='line-number'>517</span>
<span class='line-number'>518</span>
<span class='line-number'>519</span>
<span class='line-number'>520</span>
<span class='line-number'>521</span>
<span class='line-number'>522</span>
<span class='line-number'>523</span>
<span class='line-number'>524</span>
<span class='line-number'>525</span>
<span class='line-number'>526</span>
<span class='line-number'>527</span>
<span class='line-number'>528</span>
<span class='line-number'>529</span>
<span class='line-number'>530</span>
<span class='line-number'>531</span>
<span class='line-number'>532</span>
<span class='line-number'>533</span>
<span class='line-number'>534</span>
<span class='line-number'>535</span>
<span class='line-number'>536</span>
<span class='line-number'>537</span>
<span class='line-number'>538</span>
<span class='line-number'>539</span>
<span class='line-number'>540</span>
<span class='line-number'>541</span>
<span class='line-number'>542</span>
<span class='line-number'>543</span>
<span class='line-number'>544</span>
<span class='line-number'>545</span>
<span class='line-number'>546</span>
<span class='line-number'>547</span>
<span class='line-number'>548</span>
<span class='line-number'>549</span>
<span class='line-number'>550</span>
<span class='line-number'>551</span>
<span class='line-number'>552</span>
<span class='line-number'>553</span>
<span class='line-number'>554</span>
<span class='line-number'>555</span>
<span class='line-number'>556</span>
<span class='line-number'>557</span>
<span class='line-number'>558</span>
<span class='line-number'>559</span>
<span class='line-number'>560</span>
<span class='line-number'>561</span>
<span class='line-number'>562</span>
<span class='line-number'>563</span>
<span class='line-number'>564</span>
<span class='line-number'>565</span>
<span class='line-number'>566</span>
<span class='line-number'>567</span>
<span class='line-number'>568</span>
<span class='line-number'>569</span>
<span class='line-number'>570</span>
<span class='line-number'>571</span>
<span class='line-number'>572</span>
<span class='line-number'>573</span>
<span class='line-number'>574</span>
<span class='line-number'>575</span>
<span class='line-number'>576</span>
<span class='line-number'>577</span>
<span class='line-number'>578</span>
<span class='line-number'>579</span>
<span class='line-number'>580</span>
<span class='line-number'>581</span>
<span class='line-number'>582</span>
<span class='line-number'>583</span>
<span class='line-number'>584</span>
<span class='line-number'>585</span>
<span class='line-number'>586</span>
<span class='line-number'>587</span>
<span class='line-number'>588</span>
<span class='line-number'>589</span>
<span class='line-number'>590</span>
<span class='line-number'>591</span>
<span class='line-number'>592</span>
<span class='line-number'>593</span>
<span class='line-number'>594</span>
<span class='line-number'>595</span>
<span class='line-number'>596</span>
<span class='line-number'>597</span>
<span class='line-number'>598</span>
<span class='line-number'>599</span>
<span class='line-number'>600</span>
<span class='line-number'>601</span>
<span class='line-number'>602</span>
<span class='line-number'>603</span>
<span class='line-number'>604</span>
<span class='line-number'>605</span>
<span class='line-number'>606</span>
<span class='line-number'>607</span>
<span class='line-number'>608</span>
<span class='line-number'>609</span>
<span class='line-number'>610</span>
<span class='line-number'>611</span>
<span class='line-number'>612</span>
<span class='line-number'>613</span>
<span class='line-number'>614</span>
<span class='line-number'>615</span>
<span class='line-number'>616</span>
<span class='line-number'>617</span>
<span class='line-number'>618</span>
<span class='line-number'>619</span>
<span class='line-number'>620</span>
<span class='line-number'>621</span>
<span class='line-number'>622</span>
<span class='line-number'>623</span>
<span class='line-number'>624</span>
<span class='line-number'>625</span>
<span class='line-number'>626</span>
<span class='line-number'>627</span>
<span class='line-number'>628</span>
<span class='line-number'>629</span>
<span class='line-number'>630</span>
<span class='line-number'>631</span>
<span class='line-number'>632</span>
<span class='line-number'>633</span>
<span class='line-number'>634</span>
<span class='line-number'>635</span>
<span class='line-number'>636</span>
<span class='line-number'>637</span>
<span class='line-number'>638</span>
<span class='line-number'>639</span>
<span class='line-number'>640</span>
<span class='line-number'>641</span>
<span class='line-number'>642</span>
<span class='line-number'>643</span>
<span class='line-number'>644</span>
<span class='line-number'>645</span>
<span class='line-number'>646</span>
<span class='line-number'>647</span>
<span class='line-number'>648</span>
<span class='line-number'>649</span>
<span class='line-number'>650</span>
<span class='line-number'>651</span>
<span class='line-number'>652</span>
<span class='line-number'>653</span>
<span class='line-number'>654</span>
<span class='line-number'>655</span>
<span class='line-number'>656</span>
<span class='line-number'>657</span>
<span class='line-number'>658</span>
<span class='line-number'>659</span>
<span class='line-number'>660</span>
<span class='line-number'>661</span>
<span class='line-number'>662</span>
<span class='line-number'>663</span>
<span class='line-number'>664</span>
<span class='line-number'>665</span>
<span class='line-number'>666</span>
<span class='line-number'>667</span>
<span class='line-number'>668</span>
<span class='line-number'>669</span>
<span class='line-number'>670</span>
<span class='line-number'>671</span>
<span class='line-number'>672</span>
<span class='line-number'>673</span>
<span class='line-number'>674</span>
<span class='line-number'>675</span>
<span class='line-number'>676</span>
<span class='line-number'>677</span>
<span class='line-number'>678</span>
<span class='line-number'>679</span>
<span class='line-number'>680</span>
<span class='line-number'>681</span>
<span class='line-number'>682</span>
<span class='line-number'>683</span>
<span class='line-number'>684</span>
<span class='line-number'>685</span>
<span class='line-number'>686</span>
<span class='line-number'>687</span>
<span class='line-number'>688</span>
<span class='line-number'>689</span>
<span class='line-number'>690</span>
<span class='line-number'>691</span>
<span class='line-number'>692</span>
<span class='line-number'>693</span>
<span class='line-number'>694</span>
<span class='line-number'>695</span>
<span class='line-number'>696</span>
<span class='line-number'>697</span>
<span class='line-number'>698</span>
<span class='line-number'>699</span>
<span class='line-number'>700</span>
<span class='line-number'>701</span>
<span class='line-number'>702</span>
<span class='line-number'>703</span>
<span class='line-number'>704</span>
<span class='line-number'>705</span>
<span class='line-number'>706</span>
<span class='line-number'>707</span>
<span class='line-number'>708</span>
<span class='line-number'>709</span>
<span class='line-number'>710</span>
<span class='line-number'>711</span>
<span class='line-number'>712</span>
<span class='line-number'>713</span>
<span class='line-number'>714</span>
<span class='line-number'>715</span>
<span class='line-number'>716</span>
<span class='line-number'>717</span>
<span class='line-number'>718</span>
<span class='line-number'>719</span>
<span class='line-number'>720</span>
<span class='line-number'>721</span>
<span class='line-number'>722</span>
<span class='line-number'>723</span>
<span class='line-number'>724</span>
<span class='line-number'>725</span>
<span class='line-number'>726</span>
<span class='line-number'>727</span>
<span class='line-number'>728</span>
<span class='line-number'>729</span>
<span class='line-number'>730</span>
<span class='line-number'>731</span>
<span class='line-number'>732</span>
<span class='line-number'>733</span>
<span class='line-number'>734</span>
<span class='line-number'>735</span>
<span class='line-number'>736</span>
<span class='line-number'>737</span>
<span class='line-number'>738</span>
<span class='line-number'>739</span>
<span class='line-number'>740</span>
<span class='line-number'>741</span>
<span class='line-number'>742</span>
<span class='line-number'>743</span>
<span class='line-number'>744</span>
<span class='line-number'>745</span>
<span class='line-number'>746</span>
<span class='line-number'>747</span>
<span class='line-number'>748</span>
<span class='line-number'>749</span>
<span class='line-number'>750</span>
<span class='line-number'>751</span>
<span class='line-number'>752</span>
<span class='line-number'>753</span>
<span class='line-number'>754</span>
<span class='line-number'>755</span>
<span class='line-number'>756</span>
<span class='line-number'>757</span>
<span class='line-number'>758</span>
<span class='line-number'>759</span>
<span class='line-number'>760</span>
<span class='line-number'>761</span>
<span class='line-number'>762</span>
<span class='line-number'>763</span>
<span class='line-number'>764</span>
<span class='line-number'>765</span>
<span class='line-number'>766</span>
<span class='line-number'>767</span>
<span class='line-number'>768</span>
<span class='line-number'>769</span>
<span class='line-number'>770</span>
<span class='line-number'>771</span>
<span class='line-number'>772</span>
<span class='line-number'>773</span>
<span class='line-number'>774</span>
<span class='line-number'>775</span>
<span class='line-number'>776</span>
<span class='line-number'>777</span>
<span class='line-number'>778</span>
<span class='line-number'>779</span>
<span class='line-number'>780</span>
<span class='line-number'>781</span>
<span class='line-number'>782</span>
<span class='line-number'>783</span>
<span class='line-number'>784</span>
<span class='line-number'>785</span>
<span class='line-number'>786</span>
<span class='line-number'>787</span>
<span class='line-number'>788</span>
<span class='line-number'>789</span>
<span class='line-number'>790</span>
<span class='line-number'>791</span>
<span class='line-number'>792</span>
<span class='line-number'>793</span>
<span class='line-number'>794</span>
<span class='line-number'>795</span>
<span class='line-number'>796</span>
<span class='line-number'>797</span>
<span class='line-number'>798</span>
<span class='line-number'>799</span>
<span class='line-number'>800</span>
<span class='line-number'>801</span>
<span class='line-number'>802</span>
<span class='line-number'>803</span>
<span class='line-number'>804</span>
<span class='line-number'>805</span>
<span class='line-number'>806</span>
<span class='line-number'>807</span>
<span class='line-number'>808</span>
<span class='line-number'>809</span>
<span class='line-number'>810</span>
<span class='line-number'>811</span>
<span class='line-number'>812</span>
<span class='line-number'>813</span>
<span class='line-number'>814</span>
<span class='line-number'>815</span>
<span class='line-number'>816</span>
<span class='line-number'>817</span>
<span class='line-number'>818</span>
<span class='line-number'>819</span>
<span class='line-number'>820</span>
<span class='line-number'>821</span>
<span class='line-number'>822</span>
<span class='line-number'>823</span>
<span class='line-number'>824</span>
<span class='line-number'>825</span>
<span class='line-number'>826</span>
<span class='line-number'>827</span>
<span class='line-number'>828</span>
<span class='line-number'>829</span>
<span class='line-number'>830</span>
<span class='line-number'>831</span>
<span class='line-number'>832</span>
<span class='line-number'>833</span>
<span class='line-number'>834</span>
<span class='line-number'>835</span>
<span class='line-number'>836</span>
<span class='line-number'>837</span>
<span class='line-number'>838</span>
<span class='line-number'>839</span>
<span class='line-number'>840</span>
<span class='line-number'>841</span>
<span class='line-number'>842</span>
<span class='line-number'>843</span>
<span class='line-number'>844</span>
<span class='line-number'>845</span>
<span class='line-number'>846</span>
<span class='line-number'>847</span>
<span class='line-number'>848</span>
<span class='line-number'>849</span>
<span class='line-number'>850</span>
<span class='line-number'>851</span>
<span class='line-number'>852</span>
<span class='line-number'>853</span>
<span class='line-number'>854</span>
<span class='line-number'>855</span>
<span class='line-number'>856</span>
<span class='line-number'>857</span>
<span class='line-number'>858</span>
<span class='line-number'>859</span>
<span class='line-number'>860</span>
<span class='line-number'>861</span>
<span class='line-number'>862</span>
<span class='line-number'>863</span>
<span class='line-number'>864</span>
<span class='line-number'>865</span>
<span class='line-number'>866</span>
<span class='line-number'>867</span>
<span class='line-number'>868</span>
<span class='line-number'>869</span>
<span class='line-number'>870</span>
<span class='line-number'>871</span>
<span class='line-number'>872</span>
<span class='line-number'>873</span>
<span class='line-number'>874</span>
<span class='line-number'>875</span>
<span class='line-number'>876</span>
<span class='line-number'>877</span>
<span class='line-number'>878</span>
<span class='line-number'>879</span>
<span class='line-number'>880</span>
<span class='line-number'>881</span>
<span class='line-number'>882</span>
<span class='line-number'>883</span>
<span class='line-number'>884</span>
<span class='line-number'>885</span>
<span class='line-number'>886</span>
<span class='line-number'>887</span>
<span class='line-number'>888</span>
<span class='line-number'>889</span>
<span class='line-number'>890</span>
<span class='line-number'>891</span>
<span class='line-number'>892</span>
<span class='line-number'>893</span>
<span class='line-number'>894</span>
<span class='line-number'>895</span>
<span class='line-number'>896</span>
<span class='line-number'>897</span>
<span class='line-number'>898</span>
<span class='line-number'>899</span>
<span class='line-number'>900</span>
<span class='line-number'>901</span>
<span class='line-number'>902</span>
<span class='line-number'>903</span>
</pre></td><td class='code'><pre><code class='cl'><span class='line'><span class="c1">;;; hexrgb.el --- Functions to manipulate colors, including RGB hex strings.</span>
</span><span class='line'><span class="c1">;;</span>
</span><span class='line'><span class="c1">;; Filename: hexrgb.el</span>
</span><span class='line'><span class="c1">;; Description: Functions to manipulate colors, including RGB hex strings.</span>
</span><span class='line'><span class="c1">;; Author: Drew Adams</span>
</span><span class='line'><span class="c1">;; Maintainer: Drew Adams</span>
</span><span class='line'><span class="c1">;; Copyright (C) 2004-2012, Drew Adams, all rights reserved.</span>
</span><span class='line'><span class="c1">;; Created: Mon Sep 20 22:58:45 2004</span>
</span><span class='line'><span class="c1">;; Version: 21.0</span>
</span><span class='line'><span class="c1">;; Last-Updated: 01:19pm Sun 01/Jul (+10.00)</span>
</span><span class='line'><span class="c1">;;           By: jasonm23</span>
</span><span class='line'><span class="c1">;;     Update #: 899</span>
</span><span class='line'><span class="c1">;; URL: http://www.emacswiki.org/cgi-bin/wiki/hexrgb.el</span>
</span><span class='line'><span class="c1">;; Keywords: number, hex, rgb, color, background, frames, display</span>
</span><span class='line'><span class="c1">;; Compatibility: GNU Emacs: 20.x, 21.x, 22.x, 23.x</span>
</span><span class='line'><span class="c1">;;</span>
</span><span class='line'><span class="c1">;; Features that might be required by this library:</span>
</span><span class='line'><span class="c1">;;</span>
</span><span class='line'><span class="c1">;;   None</span>
</span><span class='line'><span class="c1">;;</span>
</span><span class='line'><span class="c1">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class='line'><span class="c1">;;</span>
</span><span class='line'><span class="c1">;;; Commentary:</span>
</span><span class='line'><span class="c1">;;</span>
</span><span class='line'><span class="c1">;;  Functions to manipulate colors, including RGB hex strings.</span>
</span><span class='line'><span class="c1">;;</span>
</span><span class='line'><span class="c1">;;  This library provides functions for converting between RGB (red,</span>
</span><span class='line'><span class="c1">;;  green, blue) color components and HSV (hue, saturation, value)</span>
</span><span class='line'><span class="c1">;;  color components.  It helps you convert among Emacs color</span>
</span><span class='line'><span class="c1">;;  components (whole numbers from 0 through 65535), RGB and HSV</span>
</span><span class='line'><span class="c1">;;  floating-point components (0.0 through 1.0), Emacs color-name</span>
</span><span class='line'><span class="c1">;;  strings (such as &quot;blue&quot;), and hex RGB color strings (such as</span>
</span><span class='line'><span class="c1">;;  &quot;#FC43A7912&quot;).</span>
</span><span class='line'><span class="c1">;;</span>
</span><span class='line'><span class="c1">;;  An RGB hex string, such as used as a frame `background-color&#39;</span>
</span><span class='line'><span class="c1">;;  property, is a string of 1 + (3 * n) characters, the first of</span>
</span><span class='line'><span class="c1">;;  which is &quot;#&quot;.  The other characters are hexadecimal digits, in</span>
</span><span class='line'><span class="c1">;;  three groups representing (from the left): red, green, and blue</span>
</span><span class='line'><span class="c1">;;  hex codes.</span>
</span><span class='line'><span class="c1">;;</span>
</span><span class='line'><span class="c1">;;  Constants defined here:</span>
</span><span class='line'><span class="c1">;;</span>
</span><span class='line'><span class="c1">;;    `hexrgb-defined-colors&#39;, `hexrgb-defined-colors-alist&#39;,</span>
</span><span class='line'><span class="c1">;;    `hexrgb-defined-colors-no-dups&#39;,</span>
</span><span class='line'><span class="c1">;;    `hexrgb-defined-colors-no-dups-alist&#39;.</span>
</span><span class='line'><span class="c1">;;</span>
</span><span class='line'><span class="c1">;;  Options defined here:</span>
</span><span class='line'><span class="c1">;;</span>
</span><span class='line'><span class="c1">;;    `hexrgb-canonicalize-defined-colors-flag&#39;.</span>
</span><span class='line'><span class="c1">;;</span>
</span><span class='line'><span class="c1">;;  Commands defined here:</span>
</span><span class='line'><span class="c1">;;</span>
</span><span class='line'><span class="c1">;;    `hexrgb-blue&#39;, `hexrgb-complement&#39;, `hexrgb-green&#39;,</span>
</span><span class='line'><span class="c1">;;    `hexrgb-hue&#39;, `hexrgb-read-color&#39;, `hexrgb-red&#39;,</span>
</span><span class='line'><span class="c1">;;    `hexrgb-saturation&#39;, `hexrgb-value&#39;.</span>
</span><span class='line'><span class="c1">;;</span>
</span><span class='line'><span class="c1">;;  Non-interactive functions defined here:</span>
</span><span class='line'><span class="c1">;;</span>
</span><span class='line'><span class="c1">;;    `hexrgb-approx-equal&#39;, `hexrgb-canonicalize-defined-colors&#39;,</span>
</span><span class='line'><span class="c1">;;    `hexrgb-color-name-to-hex&#39;, `hexrgb-color-values-to-hex&#39;,</span>
</span><span class='line'><span class="c1">;;    `hexrgb-color-value-to-float&#39;, `hexrgb-defined-colors&#39;,</span>
</span><span class='line'><span class="c1">;;    `hexrgb-defined-colors-alist&#39;,</span>
</span><span class='line'><span class="c1">;;    `hexrgb-delete-whitespace-from-string&#39;,</span>
</span><span class='line'><span class="c1">;;    `hexrgb-float-to-color-value&#39;, `hexrgb-hex-char-to-integer&#39;,</span>
</span><span class='line'><span class="c1">;;    `hexrgb-hex-to-color-values&#39;, `hexrgb-hex-to-hex&#39;,</span>
</span><span class='line'><span class="c1">;;    `hexrgb-hex-to-hsv&#39;, `hexrgb-hex-to-rgb&#39;, `hexrgb-hsv-to-hex&#39;,</span>
</span><span class='line'><span class="c1">;;    `hexrgb-hex-to-int&#39;, `hexrgb-hsv-to-rgb&#39;,</span>
</span><span class='line'><span class="c1">;;    `hexrgb-increment-blue&#39;, `hexrgb-increment-equal-rgb&#39;,</span>
</span><span class='line'><span class="c1">;;    `hexrgb-increment-green&#39;, `hexrgb-increment-hex&#39;,</span>
</span><span class='line'><span class="c1">;;    `hexrgb-increment-red&#39;, `hexrgb-int-to-hex&#39;, `hexrgb-blue-hex&#39;,</span>
</span><span class='line'><span class="c1">;;    `hexrgb-green-hex&#39;, `hexrgb-red-hex&#39;, `hexrgb-rgb-hex-string-p&#39;,</span>
</span><span class='line'><span class="c1">;;    `hexrgb-rgb-hex-to-rgb-hex&#39;, `hexrgb-rgb-to-hex&#39;,</span>
</span><span class='line'><span class="c1">;;    `hexrgb-rgb-to-hsv&#39;.</span>
</span><span class='line'><span class="c1">;;</span>
</span><span class='line'><span class="c1">;;  New non-interactive functions</span>
</span><span class='line'><span class="c1">;;</span>
</span><span class='line'><span class="c1">;;     `hexrgb-hex-set-brightness, `hexrgb-hex-set-saturation,</span>
</span><span class='line'><span class="c1">;;     `hexrgb-hex-set-hue</span>
</span><span class='line'><span class="c1">;;</span>
</span><span class='line'><span class="c1">;;  New interactive functions </span>
</span><span class='line'><span class="c1">;;     </span>
</span><span class='line'><span class="c1">;;     `hexrgb-hex-hue-group</span>
</span><span class='line'><span class="c1">;;     `hexrgb-hex-sat-group </span>
</span><span class='line'><span class="c1">;;     `hexrgb-hex-val-group</span>
</span><span class='line'><span class="c1">;;</span>
</span><span class='line'><span class="c1">;;  Add this to your initialization file (~/.emacs or ~/_emacs):</span>
</span><span class='line'><span class="c1">;;</span>
</span><span class='line'><span class="c1">;;    (require &#39;hexrgb)</span>
</span><span class='line'><span class="c1">;;</span>
</span><span class='line'><span class="c1">;;  Do not try to use this library without a window manager.</span>
</span><span class='line'><span class="c1">;;  That is, do not use this with `emacs -nw&#39;.</span>
</span><span class='line'><span class="c1">;;</span>
</span><span class='line'><span class="c1">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class='line'><span class="c1">;;</span>
</span><span class='line'><span class="c1">;;; Change Log:</span>
</span><span class='line'><span class="c1">;;</span>
</span><span class='line'><span class="c1">;; 2013/01/18 jasonm23</span>
</span><span class='line'><span class="c1">;;</span>
</span><span class='line'><span class="c1">;; Patched hexrgb-rgb-to-hex to use nb-digits properly</span>
</span><span class='line'><span class="c1">;;</span>
</span><span class='line'><span class="c1">;; 2012/07/01 jasonm23</span>
</span><span class='line'><span class="c1">;;</span>
</span><span class='line'><span class="c1">;;     Added 3 interactive functions that spit out a set of 10 colors from one hex color.</span>
</span><span class='line'><span class="c1">;;     hue, sat, val scales.</span>
</span><span class='line'><span class="c1">;;     e.g. </span>
</span><span class='line'><span class="c1">;;     M-x hexrgb-hex-val-group </span>
</span><span class='line'><span class="c1">;;         #33aaaa </span>
</span><span class='line'><span class="c1">;;     inserts: </span>
</span><span class='line'><span class="c1">;;         #2D98D6, #2887BE, #2376A6, #1E658E, #195477, #14435F, #0F3247, #0A212F, #051017,</span>
</span><span class='line'><span class="c1">;;     at the current cursor position.</span>
</span><span class='line'><span class="c1">;;</span>
</span><span class='line'><span class="c1">;;     This is made more flexible with the addition of a defcustom: `hexrgb-color-group-format&#39;</span>
</span><span class='line'><span class="c1">;;     Which is set to &quot;%s, &quot; by default, can be set to any printf formatting pattern.</span>
</span><span class='line'><span class="c1">;;</span>
</span><span class='line'><span class="c1">;;     For example, creating a set of font-lock-face- settings is pretty easy, set </span>
</span><span class='line'><span class="c1">;;     `hexrgb-color-group-format&#39; to equal..</span>
</span><span class='line'><span class="c1">;;</span>
</span><span class='line'><span class="c1">;;     &quot;&#39;(font-lock-_-face ((t (:foreground \&quot;%s\&quot;))))&quot;</span>
</span><span class='line'><span class="c1">;;</span>
</span><span class='line'><span class="c1">;;     This is only useful when using rainbow-mode at the same time, and you like to experiment</span>
</span><span class='line'><span class="c1">;;     with colors.</span>
</span><span class='line'><span class="c1">;;</span>
</span><span class='line'><span class="c1">;; 2012/06/30 jasonm23 </span>
</span><span class='line'><span class="c1">;;     Modified hexrgb-hsv-to-hex to accept nb-digits. added new</span>
</span><span class='line'><span class="c1">;;     functions  hexrgb-hex-adjust-brightness,  hexrgb-hex-adjust-saturation,</span>
</span><span class='line'><span class="c1">;;      hexrgb-hex-adjust-hue</span>
</span><span class='line'><span class="c1">;;</span>
</span><span class='line'><span class="c1">;; 2012/03/17 dadams</span>
</span><span class='line'><span class="c1">;;     Added: hexrgb-(red|green|blue-hex, hexrgb-rgb-hex-to-rgb-hex, hexrgb-hex-to-hex.</span>
</span><span class='line'><span class="c1">;; 2012/01/05 dadams</span>
</span><span class='line'><span class="c1">;;     hexrgb-complement: Added optional arg MSG-P.</span>
</span><span class='line'><span class="c1">;;     Some doc-string cleanup.</span>
</span><span class='line'><span class="c1">;; 2011/11/26 dadams</span>
</span><span class='line'><span class="c1">;;     hexrgb-read-color: Changed arg order to match vanilla Emacs read-color.  Added MSGP.</span>
</span><span class='line'><span class="c1">;;     *** THIS IS AN INCOMPATIBLE CHANGE.  IF YOU USE THIS FUNCTION THEN UPDATE YOUR CODE. ***</span>
</span><span class='line'><span class="c1">;; 2011/02/16 dadams</span>
</span><span class='line'><span class="c1">;;     hexrgb-increment-hex: INCOMPATIBLE CHANGE:</span>
</span><span class='line'><span class="c1">;;                           Swapped order of args NB-DIGITS, INCREMENT, to fit other functions.</span>
</span><span class='line'><span class="c1">;;     hexrgb-increment-*: Took the change to hexrgb-increment-hex into account.</span>
</span><span class='line'><span class="c1">;;     Improved various doc strings.</span>
</span><span class='line'><span class="c1">;; 2011/01/08 dadams</span>
</span><span class='line'><span class="c1">;;     Restored autoload cookie for eval-and-compile hexrgb-canonicalize-defined-colors.</span>
</span><span class='line'><span class="c1">;; 2011/01/03 dadams</span>
</span><span class='line'><span class="c1">;;     Removed autoload cookies from non-interactive functions.</span>
</span><span class='line'><span class="c1">;; 2010/12/18 dadams</span>
</span><span class='line'><span class="c1">;;     hexrgb-canonicalize-defined-colors: Added autoload cookie.  Thx to Richard Kim.</span>
</span><span class='line'><span class="c1">;; 2010/12/06 dadams</span>
</span><span class='line'><span class="c1">;;     hexrgb-hex-to-color-values: Correct start offset for blue.  Thx to &quot;Linda&quot; on Emacs Wiki.</span>
</span><span class='line'><span class="c1">;; 2009/11/14 dadams</span>
</span><span class='line'><span class="c1">;;    hexrgb-rgb-to-hsv: Corrected hue when &gt; 1.0.  Use strict inequality for hue limit tests.</span>
</span><span class='line'><span class="c1">;;    hexrgb-approx-equal: Convert RFUZZ and AFUZZ to their absolute values.</span>
</span><span class='line'><span class="c1">;; 2009/11/03 dadams</span>
</span><span class='line'><span class="c1">;;    Added: hexrgb-delete-whitespace-from-string, hexrgb-canonicalize-defined-colors,</span>
</span><span class='line'><span class="c1">;;           hexrgb-defined-colors(-no-dups)(-alist), hexrgb-canonicalize-defined-colors-flag.</span>
</span><span class='line'><span class="c1">;;    hexrgb-read-color: Use function hexrgb-defined-colors-alist, not the constant.</span>
</span><span class='line'><span class="c1">;; 2008/12/25 dadams</span>
</span><span class='line'><span class="c1">;;    hexrgb-rgb-to-hsv:</span>
</span><span class='line'><span class="c1">;;      Replace (not (equal 0.0e+NaN saturation)) by standard test (= saturation saturation).</span>
</span><span class='line'><span class="c1">;;      Thx to  Michael Heerdegen for the bug report.</span>
</span><span class='line'><span class="c1">;; 2008-10-17 dadams</span>
</span><span class='line'><span class="c1">;;    hexrgb-defined-colors(-alist): Prevent load-time error if user tries to use emacs -nw.</span>
</span><span class='line'><span class="c1">;; 2007/12/30 dadams</span>
</span><span class='line'><span class="c1">;;    Added: hexrgb-hex-to-color-values.</span>
</span><span class='line'><span class="c1">;; 2007/10/20 dadams</span>
</span><span class='line'><span class="c1">;;    hexrgb-read-color: Treat pseudo colors too (e.g. *point foreground*).</span>
</span><span class='line'><span class="c1">;; 2007/01/21 dadams</span>
</span><span class='line'><span class="c1">;;    hexrgb-read-color: Error if empty string (and not allow-empty-name-p).</span>
</span><span class='line'><span class="c1">;; 2006/06/06 dadams</span>
</span><span class='line'><span class="c1">;;    Added: hexrgb-defined-colors(-alist).  Use instead of (x-defined-colors).</span>
</span><span class='line'><span class="c1">;;    hexrgb-(red|green|blue): Added interactive specs.</span>
</span><span class='line'><span class="c1">;; 2006/06/04 dadams</span>
</span><span class='line'><span class="c1">;;    hexrgb-read-color: Added optional arg allow-empty-name-p.</span>
</span><span class='line'><span class="c1">;; 2006/06/02 dadams</span>
</span><span class='line'><span class="c1">;;    Added: hexrgb-rgb-hex-string-p.  Used it.</span>
</span><span class='line'><span class="c1">;; 2006/05/30 dadams</span>
</span><span class='line'><span class="c1">;;    Added: hexrgb-hex-to-(hsv|rgb), hexrgb-hsv-to-hex, hexrgb-color-name-to-hex,</span>
</span><span class='line'><span class="c1">;;           hexrgb-complement, hexrgb-read-color, hexrgb-hue, hexrgb-saturation,</span>
</span><span class='line'><span class="c1">;;           hexrgb-value, hexrgb-red, hexrgb-blue, hexrgb-green.</span>
</span><span class='line'><span class="c1">;;    approx-equal: Add optional fuzz factor arguments.  Changed the algorithm.</span>
</span><span class='line'><span class="c1">;;    Renamed: approx-equal to hexrgb-approx-equal.</span>
</span><span class='line'><span class="c1">;;    hexrgb-rgb-to-hsv: Changed test from &lt; to &lt;=: (when (&lt;= hue 0.0)...).</span>
</span><span class='line'><span class="c1">;;    hexrgb-hsv-to-rgb: Treat hue = 0.0 (int 0) the same as hue = 1.0 (int 6).</span>
</span><span class='line'><span class="c1">;;    hexrgb-rgb-to-hex, hexrgb-increment-hex: Corrected doc strings.</span>
</span><span class='line'><span class="c1">;; 2006/05/22 dadams</span>
</span><span class='line'><span class="c1">;;    Added: hexrgb-hsv-to-hex, hexrgb-rgb-to-hex.  Require cl.el when byte-compile.</span>
</span><span class='line'><span class="c1">;; 2005/08/09 dadams</span>
</span><span class='line'><span class="c1">;;    hexrgb-rgb-to-hsv: Side-stepped Emacs-20 bug in comparing NaN.</span>
</span><span class='line'><span class="c1">;;    hexrgb-increment-*: Added optional arg wrap-p.</span>
</span><span class='line'><span class="c1">;;    hexrgb-increment-hex: Prevent wrap if not wrap-p.</span>
</span><span class='line'><span class="c1">;; 2005/08/02 dadams</span>
</span><span class='line'><span class="c1">;;    hexrgb-rgb-to-hes: Bug fix: If delta is zero, then so are hue and saturation.</span>
</span><span class='line'><span class="c1">;; 2005/06/24 dadams</span>
</span><span class='line'><span class="c1">;;    hexrgb-rgb-to-hsv: Bug fix: test for NaN (e.g. on divide by zero).</span>
</span><span class='line'><span class="c1">;; 2005/02/08 dadams</span>
</span><span class='line'><span class="c1">;;    hexrgb-hsv-to-rgb: Bug fix (typo: p, q -&gt; pp, qq; added ww).</span>
</span><span class='line'><span class="c1">;; 2005/01/09 dadams</span>
</span><span class='line'><span class="c1">;;    hexrgb-int-to-hex: Fixed bug in hexrgb-int-to-hex: nb-digits not respected.</span>
</span><span class='line'><span class="c1">;;    Added: hexrgb-hsv-to-rgb, hexrgb-rgb-to-hsv, approx-equal.</span>
</span><span class='line'><span class="c1">;;    Renamed old hexrgb-increment-value to hexrgb-increment-equal-rgb.</span>
</span><span class='line'><span class="c1">;; 2005/01/05 dadams</span>
</span><span class='line'><span class="c1">;;    hexrgb-int-to-hex: Used a suggestion from Juri Linkov.</span>
</span><span class='line'><span class="c1">;;</span>
</span><span class='line'><span class="c1">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class='line'><span class="c1">;;</span>
</span><span class='line'><span class="c1">;; This program is free software; you can redistribute it and/or modify</span>
</span><span class='line'><span class="c1">;; it under the terms of the GNU General Public License as published by</span>
</span><span class='line'><span class="c1">;; the Free Software Foundation; either version 2, or (at your option)</span>
</span><span class='line'><span class="c1">;; any later version.</span>
</span><span class='line'>
</span><span class='line'><span class="c1">;; This program is distributed in the hope that it will be useful,</span>
</span><span class='line'><span class="c1">;; but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
</span><span class='line'><span class="c1">;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
</span><span class='line'><span class="c1">;; GNU General Public License for more details.</span>
</span><span class='line'>
</span><span class='line'><span class="c1">;; You should have received a copy of the GNU General Public License</span>
</span><span class='line'><span class="c1">;; along with this program; see the file COPYING.  If not, write to</span>
</span><span class='line'><span class="c1">;; the Free Software Foundation, Inc., 51 Franklin Street, Fifth</span>
</span><span class='line'><span class="c1">;; Floor, Boston, MA 02110-1301, USA.</span>
</span><span class='line'><span class="c1">;;</span>
</span><span class='line'><span class="c1">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class='line'><span class="c1">;;</span>
</span><span class='line'><span class="c1">;;; Code:</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="nv">eval-when-compile</span> <span class="p">(</span><span class="nb">require</span> <span class="ss">&#39;cl</span><span class="p">))</span> <span class="c1">;; case</span>
</span><span class='line'>
</span><span class='line'><span class="c1">;; Unless you first load `hexrgb.el&#39;, then either `palette.el&#39; or `eyedropper.el&#39;, you will get</span>
</span><span class='line'><span class="c1">;; warnings about variables and functions with prefix `eyedrop-&#39; when you byte-compile</span>
</span><span class='line'><span class="c1">;; `hexrgb.el&#39;.  You can ignore these warnings.</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="nb">defvar</span> <span class="nv">eyedrop-picked-foreground</span><span class="p">)</span>
</span><span class='line'><span class="p">(</span><span class="nb">defvar</span> <span class="nv">eyedrop-picked-background</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">;;;;;;;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">;;;###autoload</span>
</span><span class='line'><span class="p">(</span><span class="nv">eval-and-compile</span>
</span><span class='line'> <span class="p">(</span><span class="nb">defun</span> <span class="nv">hexrgb-canonicalize-defined-colors</span> <span class="p">(</span><span class="nb">list</span><span class="p">)</span>
</span><span class='line'>   <span class="s">&quot;Copy of LIST with color names canonicalized.</span>
</span><span class='line'><span class="s">LIST is a list of color names (strings).</span>
</span><span class='line'><span class="s">Canonical names are lowercase, with no whitespace.</span>
</span><span class='line'><span class="s">There are no duplicate names.&quot;</span>
</span><span class='line'>   <span class="p">(</span><span class="k">let</span> <span class="p">((</span><span class="nv">tail</span>  <span class="nb">list</span><span class="p">)</span>
</span><span class='line'>         <span class="nv">this</span> <span class="nv">new</span><span class="p">)</span>
</span><span class='line'>     <span class="p">(</span><span class="nv">while</span> <span class="nv">tail</span>
</span><span class='line'>       <span class="p">(</span><span class="k">setq</span> <span class="nv">this</span>  <span class="p">(</span><span class="nb">car</span> <span class="nv">tail</span><span class="p">)</span>
</span><span class='line'>             <span class="nv">this</span>  <span class="p">(</span><span class="nv">hexrgb-delete-whitespace-from-string</span> <span class="p">(</span><span class="nv">downcase</span> <span class="nv">this</span><span class="p">)</span> <span class="mi">0</span> <span class="p">(</span><span class="nb">length</span> <span class="nv">this</span><span class="p">)))</span>
</span><span class='line'>       <span class="p">(</span><span class="nb">unless</span> <span class="p">(</span><span class="nb">member</span> <span class="nv">this</span> <span class="nv">new</span><span class="p">)</span> <span class="p">(</span><span class="nb">push</span> <span class="nv">this</span> <span class="nv">new</span><span class="p">))</span>
</span><span class='line'>       <span class="p">(</span><span class="nb">pop</span> <span class="nv">tail</span><span class="p">))</span>
</span><span class='line'>     <span class="p">(</span><span class="nb">nreverse</span> <span class="nv">new</span><span class="p">)))</span>
</span><span class='line'>
</span><span class='line'> <span class="p">(</span><span class="nb">defun</span> <span class="nv">hexrgb-delete-whitespace-from-string</span> <span class="p">(</span><span class="nb">string</span> <span class="k">&amp;optional</span> <span class="nv">from</span> <span class="nv">to</span><span class="p">)</span>
</span><span class='line'>   <span class="s">&quot;Remove whitespace from substring of STRING from FROM to TO.</span>
</span><span class='line'><span class="s">If FROM is nil, then start at the beginning of STRING (FROM = 0).</span>
</span><span class='line'><span class="s">If TO is nil, then end at the end of STRING (TO = length of STRING).</span>
</span><span class='line'><span class="s">FROM and TO are zero-based indexes into STRING.</span>
</span><span class='line'><span class="s">Character FROM is affected (possibly deleted).  Character TO is not.&quot;</span>
</span><span class='line'>   <span class="p">(</span><span class="k">setq</span> <span class="nv">from</span>  <span class="p">(</span><span class="nb">or</span> <span class="nv">from</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>         <span class="nv">to</span>    <span class="p">(</span><span class="nb">or</span> <span class="nv">to</span> <span class="p">(</span><span class="nb">length</span> <span class="nb">string</span><span class="p">)))</span>
</span><span class='line'>   <span class="p">(</span><span class="nv">with-temp-buffer</span>
</span><span class='line'>     <span class="p">(</span><span class="nv">insert</span> <span class="nb">string</span><span class="p">)</span>
</span><span class='line'>     <span class="p">(</span><span class="nv">goto-char</span> <span class="p">(</span><span class="nb">+</span> <span class="nv">from</span> <span class="p">(</span><span class="nv">point-min</span><span class="p">)))</span>
</span><span class='line'>     <span class="p">(</span><span class="k">let</span> <span class="p">((</span><span class="nb">count</span>  <span class="nv">from</span><span class="p">)</span>
</span><span class='line'>           <span class="nb">char</span><span class="p">)</span>
</span><span class='line'>       <span class="p">(</span><span class="nv">while</span> <span class="p">(</span><span class="nb">and</span> <span class="p">(</span><span class="nb">not</span> <span class="p">(</span><span class="nv">eobp</span><span class="p">))</span>  <span class="p">(</span><span class="nb">&lt;</span> <span class="nb">count</span> <span class="nv">to</span><span class="p">))</span>
</span><span class='line'>         <span class="p">(</span><span class="k">setq</span> <span class="nb">char</span>  <span class="p">(</span><span class="nv">char-after</span><span class="p">))</span>
</span><span class='line'>         <span class="p">(</span><span class="k">if</span> <span class="p">(</span><span class="nv">memq</span> <span class="nb">char</span> <span class="o">&#39;</span><span class="p">(</span><span class="nv">?\ </span> <span class="nv">?\t</span> <span class="nv">?\n</span><span class="p">))</span>  <span class="p">(</span><span class="nv">delete-char</span> <span class="mi">1</span><span class="p">)</span>  <span class="p">(</span><span class="nv">forward-char</span> <span class="mi">1</span><span class="p">))</span>
</span><span class='line'>         <span class="p">(</span><span class="k">setq</span> <span class="nb">count</span>  <span class="p">(</span><span class="nb">1+</span> <span class="nb">count</span><span class="p">)))</span>
</span><span class='line'>       <span class="p">(</span><span class="nv">buffer-string</span><span class="p">)))))</span>
</span><span class='line'>
</span><span class='line'><span class="c1">;;;###autoload</span>
</span><span class='line'><span class="p">(</span><span class="nv">defconst</span> <span class="nv">hexrgb-defined-colors</span> <span class="p">(</span><span class="nv">eval-when-compile</span> <span class="p">(</span><span class="nb">and</span> <span class="nv">window-system</span> <span class="p">(</span><span class="nv">x-defined-colors</span><span class="p">)))</span>
</span><span class='line'>  <span class="s">&quot;List of all supported colors.&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">;;;###autoload</span>
</span><span class='line'><span class="p">(</span><span class="nv">defconst</span> <span class="nv">hexrgb-defined-colors-no-dups</span>
</span><span class='line'>    <span class="p">(</span><span class="nv">eval-when-compile</span>
</span><span class='line'>     <span class="p">(</span><span class="nb">and</span> <span class="nv">window-system</span> <span class="p">(</span><span class="nv">hexrgb-canonicalize-defined-colors</span> <span class="p">(</span><span class="nv">x-defined-colors</span><span class="p">))))</span>
</span><span class='line'>  <span class="s">&quot;List of all supported color names, with no duplicates.</span>
</span><span class='line'><span class="s">Names are all lowercase, without any spaces.&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">;;;###autoload</span>
</span><span class='line'><span class="p">(</span><span class="nv">defconst</span> <span class="nv">hexrgb-defined-colors-alist</span>
</span><span class='line'>    <span class="p">(</span><span class="nv">eval-when-compile</span> <span class="p">(</span><span class="nb">and</span> <span class="nv">window-system</span> <span class="p">(</span><span class="nb">mapcar</span> <span class="nf">#&#39;</span><span class="nb">list</span> <span class="p">(</span><span class="nv">x-defined-colors</span><span class="p">))))</span>
</span><span class='line'>  <span class="s">&quot;Alist of all supported color names, for use in completion.</span>
</span><span class='line'><span class="s">See also `hexrgb-defined-colors-no-dups-alist&#39;, which is the same</span>
</span><span class='line'><span class="s">thing, but without any duplicates, such as \&quot;light blue\&quot; and</span>
</span><span class='line'><span class="s">\&quot;LightBlue\&quot;.&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">;;;###autoload</span>
</span><span class='line'><span class="p">(</span><span class="nv">defconst</span> <span class="nv">hexrgb-defined-colors-no-dups-alist</span>
</span><span class='line'>    <span class="p">(</span><span class="nv">eval-when-compile</span>
</span><span class='line'>     <span class="p">(</span><span class="nb">and</span> <span class="nv">window-system</span>
</span><span class='line'>          <span class="p">(</span><span class="nb">mapcar</span> <span class="nf">#&#39;</span><span class="nb">list</span> <span class="p">(</span><span class="nv">hexrgb-canonicalize-defined-colors</span> <span class="p">(</span><span class="nv">x-defined-colors</span><span class="p">)))))</span>
</span><span class='line'>  <span class="s">&quot;Alist of all supported color names, with no duplicates, for completion.</span>
</span><span class='line'><span class="s">Names are all lowercase, without any spaces.&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">;;;###autoload</span>
</span><span class='line'><span class="p">(</span><span class="nv">defcustom</span> <span class="nv">hexrgb-canonicalize-defined-colors-flag</span> <span class="no">t</span>
</span><span class='line'>  <span class="s">&quot;*Non-nil means remove duplicate color names.</span>
</span><span class='line'><span class="s">Names are considered duplicates if they are the same when abstracting</span>
</span><span class='line'><span class="s">from whitespace and letter case.&quot;</span>
</span><span class='line'>  <span class="ss">:type</span> <span class="ss">&#39;boolean</span>
</span><span class='line'>  <span class="ss">:group</span> <span class="ss">&#39;Icicles</span> <span class="ss">:group</span> <span class="ss">&#39;doremi-frame-commands</span> <span class="ss">:group</span> <span class="ss">&#39;faces</span> <span class="ss">:group</span> <span class="ss">&#39;convenience</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">;; You should use these two functions, not the constants, so users can change</span>
</span><span class='line'><span class="c1">;; the behavior by customizing `hexrgb-canonicalize-defined-colors-flag&#39;.</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">hexrgb-defined-colors</span> <span class="p">()</span>
</span><span class='line'>  <span class="s">&quot;List of supported color names.</span>
</span><span class='line'><span class="s">If `hexrgb-canonicalize-defined-colors-flag&#39; is non-nil, then names</span>
</span><span class='line'><span class="s">are lowercased, whitespace is removed, and there are no duplicates.&quot;</span>
</span><span class='line'>  <span class="p">(</span><span class="k">if</span> <span class="nv">hexrgb-canonicalize-defined-colors-flag</span>
</span><span class='line'>      <span class="nv">hexrgb-defined-colors-no-dups</span>
</span><span class='line'>    <span class="nv">hexrgb-defined-colors</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">hexrgb-defined-colors-alist</span> <span class="p">()</span>
</span><span class='line'>  <span class="s">&quot;Alist of supported color names.  Usable for completion.</span>
</span><span class='line'><span class="s">If `hexrgb-canonicalize-defined-colors-flag&#39; is non-nil, then names</span>
</span><span class='line'><span class="s">are lowercased, whitespace is removed, and there are no duplicates.&quot;</span>
</span><span class='line'>  <span class="p">(</span><span class="k">if</span> <span class="nv">hexrgb-canonicalize-defined-colors-flag</span>
</span><span class='line'>      <span class="nv">hexrgb-defined-colors-no-dups-alist</span>
</span><span class='line'>    <span class="nv">hexrgb-defined-colors-alist</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="c1">;; RMS added this function to Emacs (23) as `read-color&#39;, with some feature loss.</span>
</span><span class='line'><span class="c1">;;;###autoload</span>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">hexrgb-read-color</span> <span class="p">(</span><span class="k">&amp;optional</span> <span class="nv">prompt</span> <span class="nv">convert-to-RGB-p</span> <span class="nv">allow-empty-name-p</span> <span class="nv">msgp</span><span class="p">)</span>
</span><span class='line'>  <span class="s">&quot;Read a color name or hex RGB hexadecimal color value #RRRRGGGGBBBB.</span>
</span><span class='line'><span class="s">Completion is available for color names, but not for RGB hex strings.</span>
</span><span class='line'><span class="s">If you input an RGB hex string, it must have the form #XXXXXXXXXXXX or</span>
</span><span class='line'><span class="s">XXXXXXXXXXXX, where each X is a hex digit.  The number of Xs must be a</span>
</span><span class='line'><span class="s">multiple of 3, with the same number of Xs for each of red, green, and</span>
</span><span class='line'><span class="s">blue.  The order is red, green, blue.</span>
</span><span class='line'>
</span><span class='line'><span class="s">Color names that are normally considered equivalent are canonicalized:</span>
</span><span class='line'><span class="s">They are lowercased, whitespace is removed, and duplicates are</span>
</span><span class='line'><span class="s">eliminated.  E.g. \&quot;LightBlue\&quot; and \&quot;light blue\&quot; are both replaced</span>
</span><span class='line'><span class="s">by \&quot;lightblue\&quot;.  If you do not want this behavior, but want to</span>
</span><span class='line'><span class="s">choose names that might contain whitespace or uppercase letters, then</span>
</span><span class='line'><span class="s">customize option `hexrgb-canonicalize-defined-colors-flag&#39; to nil.</span>
</span><span class='line'>
</span><span class='line'><span class="s">In addition to standard color names and RGB hex values, the following</span>
</span><span class='line'><span class="s">are available as color candidates.  In each case, the corresponding</span>
</span><span class='line'><span class="s">color is used.</span>
</span><span class='line'>
</span><span class='line'><span class="s">* `*copied foreground*&#39;  - last copied foreground, if available</span>
</span><span class='line'><span class="s">* `*copied background*&#39;  - last copied background, if available</span>
</span><span class='line'><span class="s">* `*mouse-2 foreground*&#39; - foreground where you click `mouse-2&#39;</span>
</span><span class='line'><span class="s">* `*mouse-2 background*&#39; - background where you click `mouse-2&#39;</span>
</span><span class='line'><span class="s">* `*point foreground*&#39;   - foreground under the cursor</span>
</span><span class='line'><span class="s">* `*point background*&#39;   - background under the cursor</span>
</span><span class='line'>
</span><span class='line'><span class="s">\(You can copy a color using eyedropper commands such as</span>
</span><span class='line'><span class="s">`eyedrop-pick-foreground-at-mouse&#39;.)</span>
</span><span class='line'>
</span><span class='line'><span class="s">Optional arg PROMPT is the prompt - nil means use a default prompt.</span>
</span><span class='line'>
</span><span class='line'><span class="s">Checks input to be sure it represents a valid color.  If not, raises</span>
</span><span class='line'><span class="s">an error (but see exception for empty input with non-nil</span>
</span><span class='line'><span class="s">ALLOW-EMPTY-NAME-P).</span>
</span><span class='line'>
</span><span class='line'><span class="s">Interactively, or with optional arg CONVERT-TO-RGB-P non-nil, converts</span>
</span><span class='line'><span class="s">an input color name to an RGB hex string.  Returns the RGB hex string.</span>
</span><span class='line'>
</span><span class='line'><span class="s">Optional arg ALLOW-EMPTY-NAME-P controls what happens if you enter an</span>
</span><span class='line'><span class="s">empty color name (that is, you just hit `RET&#39;).  If non-nil, then</span>
</span><span class='line'><span class="s">`hexrgb-read-color&#39; returns an empty color name, \&quot;\&quot;.  If nil, then</span>
</span><span class='line'><span class="s">it raises an error.  Calling programs must test for \&quot;\&quot; if</span>
</span><span class='line'><span class="s">ALLOW-EMPTY-NAME-P is non-nil.  They can then perform an appropriate</span>
</span><span class='line'><span class="s">action in case of empty input.</span>
</span><span class='line'>
</span><span class='line'><span class="s">Interactively, or with non-nil MSGP, show color name in the echo area.&quot;</span>
</span><span class='line'>  <span class="p">(</span><span class="nv">interactive</span> <span class="s">&quot;i\np\ni\np&quot;</span><span class="p">)</span>             <span class="c1">; Always convert to RGB interactively.</span>
</span><span class='line'>  <span class="p">(</span><span class="k">let*</span> <span class="p">((</span><span class="nv">completion-ignore-case</span>  <span class="no">t</span><span class="p">)</span>
</span><span class='line'>         <span class="c1">;; Free variables here: `eyedrop-picked-foreground&#39;, `eyedrop-picked-background&#39;.</span>
</span><span class='line'>         <span class="c1">;; They are defined in library `palette.el&#39; or library `eyedropper.el&#39;.</span>
</span><span class='line'>         <span class="p">(</span><span class="nv">colors</span>                  <span class="p">(</span><span class="k">if</span> <span class="p">(</span><span class="nb">fboundp</span> <span class="ss">&#39;eyedrop-foreground-at-point</span><span class="p">)</span>
</span><span class='line'>                                      <span class="p">(</span><span class="nb">append</span> <span class="p">(</span><span class="nb">and</span> <span class="nv">eyedrop-picked-foreground</span>
</span><span class='line'>                                                   <span class="o">&#39;</span><span class="p">((</span><span class="s">&quot;*copied foreground*&quot;</span><span class="p">)))</span>
</span><span class='line'>                                              <span class="p">(</span><span class="nb">and</span> <span class="nv">eyedrop-picked-background</span>
</span><span class='line'>                                                   <span class="o">&#39;</span><span class="p">((</span><span class="s">&quot;*copied background*&quot;</span><span class="p">)))</span>
</span><span class='line'>                                              <span class="o">&#39;</span><span class="p">((</span><span class="s">&quot;*mouse-2 foreground*&quot;</span><span class="p">)</span>
</span><span class='line'>                                                <span class="p">(</span><span class="s">&quot;*mouse-2 background*&quot;</span><span class="p">)</span>
</span><span class='line'>                                                <span class="p">(</span><span class="s">&quot;*point foreground*&quot;</span><span class="p">)</span> <span class="p">(</span><span class="s">&quot;*point background*&quot;</span><span class="p">))</span>
</span><span class='line'>                                              <span class="p">(</span><span class="nv">hexrgb-defined-colors-alist</span><span class="p">))</span>
</span><span class='line'>                                    <span class="p">(</span><span class="nv">hexrgb-defined-colors-alist</span><span class="p">)))</span>
</span><span class='line'>         <span class="p">(</span><span class="nv">color</span>                   <span class="p">(</span><span class="nv">completing-read</span> <span class="p">(</span><span class="nb">or</span> <span class="nv">prompt</span> <span class="s">&quot;Color (name or #R+G+B+): &quot;</span><span class="p">)</span>
</span><span class='line'>                                                   <span class="nv">colors</span><span class="p">))</span>
</span><span class='line'>         <span class="nv">hex-string</span><span class="p">)</span>
</span><span class='line'>    <span class="p">(</span><span class="nb">when</span> <span class="p">(</span><span class="nb">fboundp</span> <span class="ss">&#39;eyedrop-foreground-at-point</span><span class="p">)</span>
</span><span class='line'>      <span class="p">(</span><span class="nb">cond</span> <span class="p">((</span><span class="nb">string=</span> <span class="s">&quot;*copied foreground*&quot;</span> <span class="nv">color</span><span class="p">)</span> <span class="p">(</span><span class="k">setq</span> <span class="nv">color</span>  <span class="nv">eyedrop-picked-foreground</span><span class="p">))</span>
</span><span class='line'>            <span class="p">((</span><span class="nb">string=</span> <span class="s">&quot;*copied background*&quot;</span> <span class="nv">color</span><span class="p">)</span> <span class="p">(</span><span class="k">setq</span> <span class="nv">color</span>  <span class="nv">eyedrop-picked-background</span><span class="p">))</span>
</span><span class='line'>            <span class="p">((</span><span class="nb">string=</span> <span class="s">&quot;*point foreground*&quot;</span> <span class="nv">color</span><span class="p">)</span>  <span class="p">(</span><span class="k">setq</span> <span class="nv">color</span>  <span class="p">(</span><span class="nv">eyedrop-foreground-at-point</span><span class="p">)))</span>
</span><span class='line'>            <span class="p">((</span><span class="nb">string=</span> <span class="s">&quot;*point background*&quot;</span> <span class="nv">color</span><span class="p">)</span>  <span class="p">(</span><span class="k">setq</span> <span class="nv">color</span>  <span class="p">(</span><span class="nv">eyedrop-background-at-point</span><span class="p">)))</span>
</span><span class='line'>            <span class="p">((</span><span class="nb">string=</span> <span class="s">&quot;*mouse-2 foreground*&quot;</span> <span class="nv">color</span><span class="p">)</span>
</span><span class='line'>             <span class="p">(</span><span class="k">setq</span> <span class="nv">color</span>  <span class="p">(</span><span class="nb">prog1</span> <span class="p">(</span><span class="nv">eyedrop-foreground-at-mouse</span>
</span><span class='line'>                                  <span class="p">(</span><span class="nv">read-event</span> <span class="s">&quot;Click `mouse-2&#39; to choose foreground color - &quot;</span><span class="p">))</span>
</span><span class='line'>                            <span class="p">(</span><span class="nv">read-event</span><span class="p">))))</span> <span class="c1">; Discard mouse up event.</span>
</span><span class='line'>            <span class="p">((</span><span class="nb">string=</span> <span class="s">&quot;*mouse-2 background*&quot;</span> <span class="nv">color</span><span class="p">)</span>
</span><span class='line'>             <span class="p">(</span><span class="k">setq</span> <span class="nv">color</span>  <span class="p">(</span><span class="nb">prog1</span> <span class="p">(</span><span class="nv">eyedrop-background-at-mouse</span>
</span><span class='line'>                                  <span class="p">(</span><span class="nv">read-event</span> <span class="s">&quot;Click `mouse-2&#39; to choose background color - &quot;</span><span class="p">))</span>
</span><span class='line'>                            <span class="p">(</span><span class="nv">read-event</span><span class="p">))))))</span> <span class="c1">; Discard mouse up event.</span>
</span><span class='line'>    <span class="p">(</span><span class="k">setq</span> <span class="nv">hex-string</span>  <span class="p">(</span><span class="nb">or</span> <span class="p">(</span><span class="nv">string-match</span> <span class="s">&quot;^#\\([a-fA-F0-9][a-fA-F0-9][a-fA-F0-9]\\)+$&quot;</span> <span class="nv">color</span><span class="p">)</span>
</span><span class='line'>                          <span class="p">(</span><span class="nb">and</span> <span class="p">(</span><span class="nv">string-match</span> <span class="s">&quot;^\\([a-fA-F0-9][a-fA-F0-9][a-fA-F0-9]\\)+$&quot;</span> <span class="nv">color</span><span class="p">)</span>
</span><span class='line'>                               <span class="no">t</span><span class="p">)))</span>
</span><span class='line'>    <span class="p">(</span><span class="k">if</span> <span class="p">(</span><span class="nb">and</span> <span class="nv">allow-empty-name-p</span> <span class="p">(</span><span class="nb">string=</span> <span class="s">&quot;&quot;</span> <span class="nv">color</span><span class="p">))</span>
</span><span class='line'>        <span class="s">&quot;&quot;</span>
</span><span class='line'>      <span class="p">(</span><span class="nb">when</span> <span class="p">(</span><span class="nb">and</span> <span class="nv">hex-string</span> <span class="p">(</span><span class="nb">not</span> <span class="p">(</span><span class="nb">eq</span> <span class="mi">0</span> <span class="nv">hex-string</span><span class="p">)))</span>
</span><span class='line'>        <span class="p">(</span><span class="k">setq</span> <span class="nv">color</span>  <span class="p">(</span><span class="nv">concat</span> <span class="s">&quot;#&quot;</span> <span class="nv">color</span><span class="p">)))</span> <span class="c1">; No #; add it.</span>
</span><span class='line'>      <span class="p">(</span><span class="nb">unless</span> <span class="nv">hex-string</span>
</span><span class='line'>        <span class="p">(</span><span class="nb">when</span> <span class="p">(</span><span class="nb">or</span> <span class="p">(</span><span class="nb">string=</span> <span class="s">&quot;&quot;</span> <span class="nv">color</span><span class="p">)</span>
</span><span class='line'>                  <span class="p">(</span><span class="nb">not</span> <span class="p">(</span><span class="k">if</span> <span class="p">(</span><span class="nb">fboundp</span> <span class="ss">&#39;test-completion</span><span class="p">)</span> <span class="c1">; Not defined in Emacs 20.</span>
</span><span class='line'>                           <span class="p">(</span><span class="nv">test-completion</span> <span class="nv">color</span> <span class="nv">colors</span><span class="p">)</span>
</span><span class='line'>                         <span class="p">(</span><span class="nv">try-completion</span> <span class="nv">color</span> <span class="nv">colors</span><span class="p">))))</span>
</span><span class='line'>          <span class="p">(</span><span class="nb">error</span> <span class="s">&quot;No such color: %S&quot;</span> <span class="nv">color</span><span class="p">))</span>
</span><span class='line'>        <span class="p">(</span><span class="nb">when</span> <span class="nv">convert-to-RGB-p</span> <span class="p">(</span><span class="k">setq</span> <span class="nv">color</span>  <span class="p">(</span><span class="nv">hexrgb-color-name-to-hex</span> <span class="nv">color</span><span class="p">))))</span>
</span><span class='line'>      <span class="p">(</span><span class="nb">when</span> <span class="nv">msgp</span> <span class="p">(</span><span class="nv">message</span> <span class="s">&quot;Color: `%s&#39;&quot;</span> <span class="nv">color</span><span class="p">))</span>
</span><span class='line'>      <span class="nv">color</span><span class="p">)))</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">hexrgb-rgb-hex-string-p</span> <span class="p">(</span><span class="nv">color</span> <span class="k">&amp;optional</span> <span class="nv">laxp</span><span class="p">)</span>
</span><span class='line'>  <span class="s">&quot;Non-nil if COLOR is an RGB string #XXXXXXXXXXXX.</span>
</span><span class='line'><span class="s">Each X is a hex digit.  The number of Xs must be a multiple of 3, with</span>
</span><span class='line'><span class="s">the same number of Xs for each of red, green, and blue.</span>
</span><span class='line'>
</span><span class='line'><span class="s">Non-nil optional arg LAXP means that the initial `#&#39; is optional.  In</span>
</span><span class='line'><span class="s">that case, for a valid string of hex digits: when # is present 0 is</span>
</span><span class='line'><span class="s">returned; otherwise, t is returned.&quot;</span>
</span><span class='line'>  <span class="p">(</span><span class="nb">or</span> <span class="p">(</span><span class="nv">string-match</span> <span class="s">&quot;^#\\([a-fA-F0-9][a-fA-F0-9][a-fA-F0-9]\\)+$&quot;</span> <span class="nv">color</span><span class="p">)</span>
</span><span class='line'>      <span class="p">(</span><span class="nb">and</span> <span class="nv">laxp</span> <span class="p">(</span><span class="nv">string-match</span> <span class="s">&quot;^\\([a-fA-F0-9][a-fA-F0-9][a-fA-F0-9]\\)+$&quot;</span> <span class="nv">color</span><span class="p">)</span> <span class="no">t</span><span class="p">)))</span>
</span><span class='line'>
</span><span class='line'><span class="c1">;;;###autoload</span>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">hexrgb-complement</span> <span class="p">(</span><span class="nv">color</span> <span class="k">&amp;optional</span> <span class="nv">msg-p</span><span class="p">)</span>
</span><span class='line'>  <span class="s">&quot;Return the color that is the complement of COLOR.</span>
</span><span class='line'><span class="s">Non-interactively, non-nil optional arg MSG-P means show a message</span>
</span><span class='line'><span class="s">with the complement.&quot;</span>
</span><span class='line'>  <span class="p">(</span><span class="nv">interactive</span> <span class="p">(</span><span class="nb">list</span> <span class="p">(</span><span class="nv">hexrgb-read-color</span><span class="p">)</span> <span class="no">t</span><span class="p">))</span>
</span><span class='line'>  <span class="p">(</span><span class="k">setq</span> <span class="nv">color</span>  <span class="p">(</span><span class="nv">hexrgb-color-name-to-hex</span> <span class="nv">color</span><span class="p">))</span>
</span><span class='line'>  <span class="p">(</span><span class="k">let</span> <span class="p">((</span><span class="nv">red</span>    <span class="p">(</span><span class="nv">hexrgb-red</span> <span class="nv">color</span><span class="p">))</span>
</span><span class='line'>        <span class="p">(</span><span class="nv">green</span>  <span class="p">(</span><span class="nv">hexrgb-green</span> <span class="nv">color</span><span class="p">))</span>
</span><span class='line'>        <span class="p">(</span><span class="nv">blue</span>   <span class="p">(</span><span class="nv">hexrgb-blue</span> <span class="nv">color</span><span class="p">)))</span>
</span><span class='line'>    <span class="p">(</span><span class="k">setq</span> <span class="nv">color</span>  <span class="p">(</span><span class="nv">hexrgb-rgb-to-hex</span> <span class="p">(</span><span class="nb">-</span> <span class="mf">1.0</span> <span class="nv">red</span><span class="p">)</span> <span class="p">(</span><span class="nb">-</span> <span class="mf">1.0</span> <span class="nv">green</span><span class="p">)</span> <span class="p">(</span><span class="nb">-</span> <span class="mf">1.0</span> <span class="nv">blue</span><span class="p">))))</span>
</span><span class='line'>  <span class="p">(</span><span class="nb">when</span> <span class="nv">msg-p</span> <span class="p">(</span><span class="nv">message</span> <span class="s">&quot;Complement: `%s&#39;&quot;</span> <span class="nv">color</span><span class="p">))</span>
</span><span class='line'>  <span class="nv">color</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">;;;###autoload</span>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">hexrgb-hue</span> <span class="p">(</span><span class="nv">color</span><span class="p">)</span>
</span><span class='line'>  <span class="s">&quot;Return the hue component of COLOR, in range 0 to 1 inclusive.</span>
</span><span class='line'><span class="s">COLOR is a color name or hex RGB string that starts with \&quot;#\&quot;.&quot;</span>
</span><span class='line'>  <span class="p">(</span><span class="nv">interactive</span> <span class="p">(</span><span class="nb">list</span> <span class="p">(</span><span class="nv">hexrgb-read-color</span><span class="p">)))</span>
</span><span class='line'>  <span class="p">(</span><span class="k">setq</span> <span class="nv">color</span>  <span class="p">(</span><span class="nv">hexrgb-color-name-to-hex</span> <span class="nv">color</span><span class="p">))</span>
</span><span class='line'>  <span class="p">(</span><span class="nb">car</span> <span class="p">(</span><span class="nv">hexrgb-rgb-to-hsv</span> <span class="p">(</span><span class="nv">hexrgb-red</span> <span class="nv">color</span><span class="p">)</span> <span class="p">(</span><span class="nv">hexrgb-green</span> <span class="nv">color</span><span class="p">)</span> <span class="p">(</span><span class="nv">hexrgb-blue</span> <span class="nv">color</span><span class="p">))))</span>
</span><span class='line'>
</span><span class='line'><span class="c1">;;;###autoload</span>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">hexrgb-saturation</span> <span class="p">(</span><span class="nv">color</span><span class="p">)</span>
</span><span class='line'>  <span class="s">&quot;Return the saturation component of COLOR, in range 0 to 1 inclusive.</span>
</span><span class='line'><span class="s">COLOR is a color name or hex RGB string that starts with \&quot;#\&quot;.&quot;</span>
</span><span class='line'>  <span class="p">(</span><span class="nv">interactive</span> <span class="p">(</span><span class="nb">list</span> <span class="p">(</span><span class="nv">hexrgb-read-color</span><span class="p">)))</span>
</span><span class='line'>  <span class="p">(</span><span class="k">setq</span> <span class="nv">color</span>  <span class="p">(</span><span class="nv">hexrgb-color-name-to-hex</span> <span class="nv">color</span><span class="p">))</span>
</span><span class='line'>  <span class="p">(</span><span class="nb">cadr</span> <span class="p">(</span><span class="nv">hexrgb-rgb-to-hsv</span> <span class="p">(</span><span class="nv">hexrgb-red</span> <span class="nv">color</span><span class="p">)</span> <span class="p">(</span><span class="nv">hexrgb-green</span> <span class="nv">color</span><span class="p">)</span> <span class="p">(</span><span class="nv">hexrgb-blue</span> <span class="nv">color</span><span class="p">))))</span>
</span><span class='line'>
</span><span class='line'><span class="c1">;;;###autoload</span>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">hexrgb-value</span> <span class="p">(</span><span class="nv">color</span><span class="p">)</span>
</span><span class='line'>  <span class="s">&quot;Return the value component of COLOR, in range 0 to 1 inclusive.</span>
</span><span class='line'><span class="s">COLOR is a color name or hex RGB string that starts with \&quot;#\&quot;.&quot;</span>
</span><span class='line'>  <span class="p">(</span><span class="nv">interactive</span> <span class="p">(</span><span class="nb">list</span> <span class="p">(</span><span class="nv">hexrgb-read-color</span><span class="p">)))</span>
</span><span class='line'>  <span class="p">(</span><span class="k">setq</span> <span class="nv">color</span>  <span class="p">(</span><span class="nv">hexrgb-color-name-to-hex</span> <span class="nv">color</span><span class="p">))</span>
</span><span class='line'>  <span class="p">(</span><span class="nb">caddr</span> <span class="p">(</span><span class="nv">hexrgb-rgb-to-hsv</span> <span class="p">(</span><span class="nv">hexrgb-red</span> <span class="nv">color</span><span class="p">)</span> <span class="p">(</span><span class="nv">hexrgb-green</span> <span class="nv">color</span><span class="p">)</span> <span class="p">(</span><span class="nv">hexrgb-blue</span> <span class="nv">color</span><span class="p">))))</span>
</span><span class='line'>
</span><span class='line'><span class="c1">;;;###autoload</span>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">hexrgb-red</span> <span class="p">(</span><span class="nv">color</span><span class="p">)</span>
</span><span class='line'>  <span class="s">&quot;Return the red component of COLOR, in range 0 to 1 inclusive.</span>
</span><span class='line'><span class="s">COLOR is a color name or hex RGB string that starts with \&quot;#\&quot;.&quot;</span>
</span><span class='line'>  <span class="p">(</span><span class="nv">interactive</span> <span class="p">(</span><span class="nb">list</span> <span class="p">(</span><span class="nv">hexrgb-read-color</span><span class="p">)))</span>
</span><span class='line'>  <span class="p">(</span><span class="k">setq</span> <span class="nv">color</span>  <span class="p">(</span><span class="nv">hexrgb-color-name-to-hex</span> <span class="nv">color</span><span class="p">))</span>
</span><span class='line'>  <span class="p">(</span><span class="nb">/</span> <span class="p">(</span><span class="nv">hexrgb-hex-to-int</span> <span class="p">(</span><span class="nv">substring</span> <span class="nv">color</span> <span class="mi">1</span> <span class="p">(</span><span class="nb">1+</span> <span class="p">(</span><span class="nb">/</span> <span class="p">(</span><span class="nb">1-</span> <span class="p">(</span><span class="nb">length</span> <span class="nv">color</span><span class="p">))</span> <span class="mi">3</span><span class="p">))))</span>
</span><span class='line'>     <span class="p">(</span><span class="nb">expt</span> <span class="mf">16.0</span> <span class="p">(</span><span class="nb">/</span> <span class="p">(</span><span class="nb">1-</span> <span class="p">(</span><span class="nb">length</span> <span class="nv">color</span><span class="p">))</span> <span class="mf">3.0</span><span class="p">))))</span>
</span><span class='line'>
</span><span class='line'><span class="c1">;;;###autoload</span>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">hexrgb-green</span> <span class="p">(</span><span class="nv">color</span><span class="p">)</span>
</span><span class='line'>  <span class="s">&quot;Return the green component of COLOR, in range 0 to 1 inclusive.</span>
</span><span class='line'><span class="s">COLOR is a color name or hex RGB string that starts with \&quot;#\&quot;.&quot;</span>
</span><span class='line'>  <span class="p">(</span><span class="nv">interactive</span> <span class="p">(</span><span class="nb">list</span> <span class="p">(</span><span class="nv">hexrgb-read-color</span><span class="p">)))</span>
</span><span class='line'>  <span class="p">(</span><span class="k">setq</span> <span class="nv">color</span>  <span class="p">(</span><span class="nv">hexrgb-color-name-to-hex</span> <span class="nv">color</span><span class="p">))</span>
</span><span class='line'>  <span class="p">(</span><span class="k">let*</span> <span class="p">((</span><span class="nv">len</span>    <span class="p">(</span><span class="nb">/</span> <span class="p">(</span><span class="nb">1-</span> <span class="p">(</span><span class="nb">length</span> <span class="nv">color</span><span class="p">))</span> <span class="mi">3</span><span class="p">))</span>
</span><span class='line'>         <span class="p">(</span><span class="nv">start</span>  <span class="p">(</span><span class="nb">1+</span> <span class="nv">len</span><span class="p">)))</span>
</span><span class='line'>    <span class="p">(</span><span class="nb">/</span> <span class="p">(</span><span class="nv">hexrgb-hex-to-int</span> <span class="p">(</span><span class="nv">substring</span> <span class="nv">color</span> <span class="nv">start</span> <span class="p">(</span><span class="nb">+</span> <span class="nv">start</span> <span class="nv">len</span><span class="p">)))</span>
</span><span class='line'>       <span class="p">(</span><span class="nb">expt</span> <span class="mf">16.0</span> <span class="p">(</span><span class="nb">/</span> <span class="p">(</span><span class="nb">1-</span> <span class="p">(</span><span class="nb">length</span> <span class="nv">color</span><span class="p">))</span> <span class="mf">3.0</span><span class="p">)))))</span>
</span><span class='line'>
</span><span class='line'><span class="c1">;;;###autoload</span>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">hexrgb-blue</span> <span class="p">(</span><span class="nv">color</span><span class="p">)</span>
</span><span class='line'>  <span class="s">&quot;Return the blue component of COLOR, in range 0 to 1 inclusive.</span>
</span><span class='line'><span class="s">COLOR is a color name or hex RGB string that starts with \&quot;#\&quot;.&quot;</span>
</span><span class='line'>  <span class="p">(</span><span class="nv">interactive</span> <span class="p">(</span><span class="nb">list</span> <span class="p">(</span><span class="nv">hexrgb-read-color</span><span class="p">)))</span>
</span><span class='line'>  <span class="p">(</span><span class="k">setq</span> <span class="nv">color</span>  <span class="p">(</span><span class="nv">hexrgb-color-name-to-hex</span> <span class="nv">color</span><span class="p">))</span>
</span><span class='line'>  <span class="p">(</span><span class="k">let*</span> <span class="p">((</span><span class="nv">len</span>    <span class="p">(</span><span class="nb">/</span> <span class="p">(</span><span class="nb">1-</span> <span class="p">(</span><span class="nb">length</span> <span class="nv">color</span><span class="p">))</span> <span class="mi">3</span><span class="p">))</span>
</span><span class='line'>         <span class="p">(</span><span class="nv">start</span>  <span class="p">(</span><span class="nb">+</span> <span class="mi">1</span> <span class="nv">len</span> <span class="nv">len</span><span class="p">)))</span>
</span><span class='line'>    <span class="p">(</span><span class="nb">/</span> <span class="p">(</span><span class="nv">hexrgb-hex-to-int</span> <span class="p">(</span><span class="nv">substring</span> <span class="nv">color</span> <span class="nv">start</span> <span class="p">(</span><span class="nb">+</span> <span class="nv">start</span> <span class="nv">len</span><span class="p">)))</span>
</span><span class='line'>       <span class="p">(</span><span class="nb">expt</span> <span class="mf">16.0</span> <span class="p">(</span><span class="nb">/</span> <span class="p">(</span><span class="nb">1-</span> <span class="p">(</span><span class="nb">length</span> <span class="nv">color</span><span class="p">))</span> <span class="mf">3.0</span><span class="p">)))))</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">hexrgb-rgb-to-hsv</span> <span class="p">(</span><span class="nv">red</span> <span class="nv">green</span> <span class="nv">blue</span><span class="p">)</span>
</span><span class='line'>  <span class="s">&quot;Convert RED, GREEN, BLUE components to HSV (hue, saturation, value).</span>
</span><span class='line'><span class="s">Each input component is 0.0 to 1.0, inclusive.</span>
</span><span class='line'><span class="s">Returns a list of HSV components of value 0.0 to 1.0, inclusive.&quot;</span>
</span><span class='line'>  <span class="p">(</span><span class="k">let*</span> <span class="p">((</span><span class="nb">min</span>    <span class="p">(</span><span class="nb">min</span> <span class="nv">red</span> <span class="nv">green</span> <span class="nv">blue</span><span class="p">))</span>
</span><span class='line'>         <span class="p">(</span><span class="nb">max</span>    <span class="p">(</span><span class="nb">max</span> <span class="nv">red</span> <span class="nv">green</span> <span class="nv">blue</span><span class="p">))</span>
</span><span class='line'>         <span class="p">(</span><span class="nv">value</span>  <span class="nb">max</span><span class="p">)</span>
</span><span class='line'>         <span class="p">(</span><span class="nv">delta</span>  <span class="p">(</span><span class="nb">-</span> <span class="nb">max</span> <span class="nb">min</span><span class="p">))</span>
</span><span class='line'>         <span class="nv">hue</span> <span class="nv">saturation</span><span class="p">)</span>
</span><span class='line'>    <span class="p">(</span><span class="k">if</span> <span class="p">(</span><span class="nv">hexrgb-approx-equal</span> <span class="mf">0.0</span> <span class="nv">delta</span><span class="p">)</span>
</span><span class='line'>        <span class="p">(</span><span class="k">setq</span> <span class="nv">hue</span>         <span class="mf">0.0</span>
</span><span class='line'>              <span class="nv">saturation</span>  <span class="mf">0.0</span><span class="p">)</span>          <span class="c1">; Gray scale - no color; only value.</span>
</span><span class='line'>      <span class="p">(</span><span class="k">if</span> <span class="p">(</span><span class="nb">and</span> <span class="p">(</span><span class="nv">condition-case</span> <span class="no">nil</span>
</span><span class='line'>                   <span class="p">(</span><span class="k">setq</span> <span class="nv">saturation</span>  <span class="p">(</span><span class="nb">/</span> <span class="nv">delta</span> <span class="nb">max</span><span class="p">))</span>
</span><span class='line'>                 <span class="p">(</span><span class="nv">arith-error</span> <span class="no">nil</span><span class="p">))</span>
</span><span class='line'>               <span class="c1">;; Must be a number, not a NaN.  The standard test for a NaN is (not (= N N)),</span>
</span><span class='line'>               <span class="c1">;; but an Emacs 20 bug makes (= N N) return t for a NaN also.</span>
</span><span class='line'>               <span class="p">(</span><span class="nb">or</span> <span class="p">(</span><span class="nb">&lt;</span> <span class="nv">emacs-major-version</span> <span class="mi">21</span><span class="p">)</span> <span class="p">(</span><span class="nb">=</span> <span class="nv">saturation</span> <span class="nv">saturation</span><span class="p">)))</span>
</span><span class='line'>          <span class="p">(</span><span class="k">if</span> <span class="p">(</span><span class="nv">hexrgb-approx-equal</span> <span class="mf">0.0</span> <span class="nv">saturation</span><span class="p">)</span>
</span><span class='line'>              <span class="p">(</span><span class="k">setq</span> <span class="nv">hue</span>         <span class="mf">0.0</span>
</span><span class='line'>                    <span class="nv">saturation</span>  <span class="mf">0.0</span><span class="p">)</span>    <span class="c1">; Again, no color; only value.</span>
</span><span class='line'>            <span class="c1">;; Color</span>
</span><span class='line'>            <span class="p">(</span><span class="k">setq</span> <span class="nv">hue</span>  <span class="p">(</span><span class="k">if</span> <span class="p">(</span><span class="nv">hexrgb-approx-equal</span> <span class="nv">red</span> <span class="nb">max</span><span class="p">)</span>
</span><span class='line'>                           <span class="p">(</span><span class="nb">/</span> <span class="p">(</span><span class="nb">-</span> <span class="nv">green</span> <span class="nv">blue</span><span class="p">)</span> <span class="nv">delta</span><span class="p">)</span> <span class="c1">; Between yellow &amp; magenta.</span>
</span><span class='line'>                         <span class="p">(</span><span class="k">if</span> <span class="p">(</span><span class="nv">hexrgb-approx-equal</span> <span class="nv">green</span> <span class="nb">max</span><span class="p">)</span>
</span><span class='line'>                             <span class="p">(</span><span class="nb">+</span> <span class="mf">2.0</span> <span class="p">(</span><span class="nb">/</span> <span class="p">(</span><span class="nb">-</span> <span class="nv">blue</span> <span class="nv">red</span><span class="p">)</span> <span class="nv">delta</span><span class="p">))</span> <span class="c1">; Between cyan &amp; yellow.</span>
</span><span class='line'>                           <span class="p">(</span><span class="nb">+</span> <span class="mf">4.0</span> <span class="p">(</span><span class="nb">/</span> <span class="p">(</span><span class="nb">-</span> <span class="nv">red</span> <span class="nv">green</span><span class="p">)</span> <span class="nv">delta</span><span class="p">))))</span> <span class="c1">; Between magenta &amp; cyan.</span>
</span><span class='line'>                  <span class="nv">hue</span>  <span class="p">(</span><span class="nb">/</span> <span class="nv">hue</span> <span class="mf">6.0</span><span class="p">))</span>
</span><span class='line'>            <span class="c1">;; (when (&lt;= hue 0.0) (setq hue  (+ hue 1.0)))  ; $$$$$$</span>
</span><span class='line'>            <span class="c1">;; (when (&gt;= hue 1.0) (setq hue  (- hue 1.0)))) ; $$$$$$</span>
</span><span class='line'>            <span class="p">(</span><span class="nb">when</span> <span class="p">(</span><span class="nb">&lt;</span> <span class="nv">hue</span> <span class="mf">0.0</span><span class="p">)</span> <span class="p">(</span><span class="k">setq</span> <span class="nv">hue</span>  <span class="p">(</span><span class="nb">+</span> <span class="nv">hue</span> <span class="mf">1.0</span><span class="p">)))</span>
</span><span class='line'>            <span class="p">(</span><span class="nb">when</span> <span class="p">(</span><span class="nb">&gt;</span> <span class="nv">hue</span> <span class="mf">1.0</span><span class="p">)</span> <span class="p">(</span><span class="k">setq</span> <span class="nv">hue</span>  <span class="p">(</span><span class="nb">-</span> <span class="nv">hue</span> <span class="mf">1.0</span><span class="p">))))</span>
</span><span class='line'>        <span class="p">(</span><span class="k">setq</span> <span class="nv">hue</span>         <span class="mf">0.0</span>           <span class="c1">; Div by zero (max=0): H:=0, S:=0. (Hue undefined.)</span>
</span><span class='line'>              <span class="nv">saturation</span>  <span class="mf">0.0</span><span class="p">)))</span>
</span><span class='line'>    <span class="p">(</span><span class="nb">list</span> <span class="nv">hue</span> <span class="nv">saturation</span> <span class="nv">value</span><span class="p">)))</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">hexrgb-hsv-to-rgb</span> <span class="p">(</span><span class="nv">hue</span> <span class="nv">saturation</span> <span class="nv">value</span><span class="p">)</span>
</span><span class='line'>  <span class="s">&quot;Convert HUE, SATURATION, VALUE components to RGB (red, green, blue).</span>
</span><span class='line'><span class="s">Each input component is 0.0 to 1.0, inclusive.</span>
</span><span class='line'><span class="s">Returns a list of RGB components of value 0.0 to 1.0, inclusive.&quot;</span>
</span><span class='line'>  <span class="p">(</span><span class="k">let</span> <span class="p">(</span><span class="nv">red</span> <span class="nv">green</span> <span class="nv">blue</span> <span class="nv">int-hue</span> <span class="nv">fract</span> <span class="nv">pp</span> <span class="nv">qq</span> <span class="nv">tt</span> <span class="nv">ww</span><span class="p">)</span>
</span><span class='line'>    <span class="p">(</span><span class="k">if</span> <span class="p">(</span><span class="nv">hexrgb-approx-equal</span> <span class="mf">0.0</span> <span class="nv">saturation</span><span class="p">)</span>
</span><span class='line'>        <span class="p">(</span><span class="k">setq</span> <span class="nv">red</span>    <span class="nv">value</span>
</span><span class='line'>              <span class="nv">green</span>  <span class="nv">value</span>
</span><span class='line'>              <span class="nv">blue</span>   <span class="nv">value</span><span class="p">)</span>             <span class="c1">; Gray</span>
</span><span class='line'>      <span class="p">(</span><span class="k">setq</span> <span class="nv">hue</span>      <span class="p">(</span><span class="nb">*</span> <span class="nv">hue</span> <span class="mf">6.0</span><span class="p">)</span>        <span class="c1">; Sectors: 0 to 5</span>
</span><span class='line'>            <span class="nv">int-hue</span>  <span class="p">(</span><span class="nb">floor</span> <span class="nv">hue</span><span class="p">)</span>
</span><span class='line'>            <span class="nv">fract</span>    <span class="p">(</span><span class="nb">-</span> <span class="nv">hue</span> <span class="nv">int-hue</span><span class="p">)</span>
</span><span class='line'>            <span class="nv">pp</span>       <span class="p">(</span><span class="nb">*</span> <span class="nv">value</span> <span class="p">(</span><span class="nb">-</span> <span class="mi">1</span> <span class="nv">saturation</span><span class="p">))</span>
</span><span class='line'>            <span class="nv">qq</span>       <span class="p">(</span><span class="nb">*</span> <span class="nv">value</span> <span class="p">(</span><span class="nb">-</span> <span class="mi">1</span> <span class="p">(</span><span class="nb">*</span> <span class="nv">saturation</span> <span class="nv">fract</span><span class="p">)))</span>
</span><span class='line'>            <span class="nv">ww</span>       <span class="p">(</span><span class="nb">*</span> <span class="nv">value</span> <span class="p">(</span><span class="nb">-</span> <span class="mi">1</span> <span class="p">(</span><span class="nb">*</span> <span class="nv">saturation</span> <span class="p">(</span><span class="nb">-</span> <span class="mi">1</span> <span class="p">(</span><span class="nb">-</span> <span class="nv">hue</span> <span class="nv">int-hue</span><span class="p">))))))</span>
</span><span class='line'>      <span class="p">(</span><span class="nb">case</span> <span class="nv">int-hue</span>
</span><span class='line'>        <span class="p">((</span><span class="mi">0</span> <span class="mi">6</span><span class="p">)</span> <span class="p">(</span><span class="k">setq</span> <span class="nv">red</span>    <span class="nv">value</span>
</span><span class='line'>                     <span class="nv">green</span>  <span class="nv">ww</span>
</span><span class='line'>                     <span class="nv">blue</span>   <span class="nv">pp</span><span class="p">))</span>
</span><span class='line'>        <span class="p">(</span><span class="mi">1</span> <span class="p">(</span><span class="k">setq</span> <span class="nv">red</span>    <span class="nv">qq</span>
</span><span class='line'>                 <span class="nv">green</span>  <span class="nv">value</span>
</span><span class='line'>                 <span class="nv">blue</span>   <span class="nv">pp</span><span class="p">))</span>
</span><span class='line'>        <span class="p">(</span><span class="mi">2</span> <span class="p">(</span><span class="k">setq</span> <span class="nv">red</span>    <span class="nv">pp</span>
</span><span class='line'>                 <span class="nv">green</span>  <span class="nv">value</span>
</span><span class='line'>                 <span class="nv">blue</span>   <span class="nv">ww</span><span class="p">))</span>
</span><span class='line'>        <span class="p">(</span><span class="mi">3</span> <span class="p">(</span><span class="k">setq</span> <span class="nv">red</span>    <span class="nv">pp</span>
</span><span class='line'>                 <span class="nv">green</span>  <span class="nv">qq</span>
</span><span class='line'>                 <span class="nv">blue</span>   <span class="nv">value</span><span class="p">))</span>
</span><span class='line'>        <span class="p">(</span><span class="mi">4</span> <span class="p">(</span><span class="k">setq</span> <span class="nv">red</span>    <span class="nv">ww</span>
</span><span class='line'>                 <span class="nv">green</span>  <span class="nv">pp</span>
</span><span class='line'>                 <span class="nv">blue</span>   <span class="nv">value</span><span class="p">))</span>
</span><span class='line'>        <span class="p">(</span><span class="nv">otherwise</span> <span class="p">(</span><span class="k">setq</span> <span class="nv">red</span>    <span class="nv">value</span>
</span><span class='line'>                         <span class="nv">green</span>  <span class="nv">pp</span>
</span><span class='line'>                         <span class="nv">blue</span>   <span class="nv">qq</span><span class="p">))))</span>
</span><span class='line'>    <span class="p">(</span><span class="nb">list</span> <span class="nv">red</span> <span class="nv">green</span> <span class="nv">blue</span><span class="p">)))</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">hexrgb-hsv-to-hex</span> <span class="p">(</span><span class="nv">hue</span> <span class="nv">saturation</span> <span class="nv">value</span> <span class="k">&amp;optional</span> <span class="nv">nb-digits</span><span class="p">)</span>
</span><span class='line'>  <span class="s">&quot;Return the hex RBG color string for inputs HUE, SATURATION, VALUE.</span>
</span><span class='line'><span class="s">The inputs are each in the range 0 to 1.</span>
</span><span class='line'><span class="s">The output string is of the form \&quot;#RRRRGGGGBBBB\&quot; unless the</span>
</span><span class='line'><span class="s">  nb-digits &amp;optional argument is supplied.&quot;</span>
</span><span class='line'>  <span class="p">(</span><span class="nv">hexrgb-color-values-to-hex</span>
</span><span class='line'>   <span class="p">(</span><span class="nb">mapcar</span> <span class="p">(</span><span class="k">lambda</span> <span class="p">(</span><span class="nv">x</span><span class="p">)</span> <span class="p">(</span><span class="nb">floor</span> <span class="p">(</span><span class="nb">*</span> <span class="nv">x</span> <span class="mf">65535.0</span><span class="p">)))</span> <span class="p">(</span><span class="nv">hexrgb-hsv-to-rgb</span> <span class="nv">hue</span>
</span><span class='line'>  <span class="nv">saturation</span> <span class="nv">value</span><span class="p">))</span> <span class="p">(</span><span class="nb">or</span> <span class="nv">nb-digits</span> <span class="mi">4</span><span class="p">)))</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">hexrgb-rgb-to-hex</span> <span class="p">(</span><span class="nv">red</span> <span class="nv">green</span> <span class="nv">blue</span> <span class="k">&amp;optional</span> <span class="nv">nb-digits</span><span class="p">)</span>
</span><span class='line'>  <span class="s">&quot;Return the hex RBG color string for inputs RED, GREEN, BLUE.</span>
</span><span class='line'><span class="s">The inputs are each in the range 0 to 1.</span>
</span><span class='line'><span class="s">The output string is of the form \&quot;#RRRRGGGGBBBB\&quot;.&quot;</span>
</span><span class='line'>  <span class="p">(</span><span class="nv">hexrgb-color-values-to-hex</span>
</span><span class='line'>   <span class="p">(</span><span class="nb">mapcar</span> <span class="p">(</span><span class="k">lambda</span> <span class="p">(</span><span class="nv">x</span><span class="p">)</span> <span class="p">(</span><span class="nb">floor</span>
</span><span class='line'>                        <span class="p">(</span><span class="nb">*</span> <span class="nv">x</span> <span class="mf">65535.0</span><span class="p">)))</span>
</span><span class='line'>           <span class="p">(</span><span class="nb">list</span> <span class="nv">red</span> <span class="nv">green</span> <span class="nv">blue</span><span class="p">))</span> <span class="p">(</span><span class="nb">or</span> <span class="nv">nb-digits</span> <span class="mi">4</span><span class="p">)))</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">hexrgb-hex-to-hsv</span> <span class="p">(</span><span class="nv">color</span><span class="p">)</span>
</span><span class='line'>  <span class="s">&quot;Return a list of HSV (hue, saturation, value) color components.</span>
</span><span class='line'><span class="s">Each component is a value from 0.0 to 1.0, inclusive.</span>
</span><span class='line'><span class="s">COLOR is a color name or a hex RGB string that starts with \&quot;#\&quot; and</span>
</span><span class='line'><span class="s">is followed by an equal number of hex digits for red, green, and blue</span>
</span><span class='line'><span class="s">components.&quot;</span>
</span><span class='line'>  <span class="p">(</span><span class="k">let</span> <span class="p">((</span><span class="nv">rgb-components</span>  <span class="p">(</span><span class="nv">hexrgb-hex-to-rgb</span> <span class="nv">color</span><span class="p">)))</span>
</span><span class='line'>    <span class="p">(</span><span class="nb">apply</span> <span class="nf">#&#39;</span><span class="nv">hexrgb-rgb-to-hsv</span> <span class="nv">rgb-components</span><span class="p">)))</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">hexrgb-hex-to-rgb</span> <span class="p">(</span><span class="nv">color</span><span class="p">)</span>
</span><span class='line'>  <span class="s">&quot;Return a list of RGB (red, green, blue) color components.</span>
</span><span class='line'><span class="s">Each component is a value from 0.0 to 1.0, inclusive.</span>
</span><span class='line'><span class="s">COLOR is a color name or a hex RGB string that starts with \&quot;#\&quot; and</span>
</span><span class='line'><span class="s">is followed by an equal number of hex digits for red, green, and blue</span>
</span><span class='line'><span class="s">components.&quot;</span>
</span><span class='line'>  <span class="p">(</span><span class="nb">unless</span> <span class="p">(</span><span class="nv">hexrgb-rgb-hex-string-p</span> <span class="nv">color</span><span class="p">)</span> <span class="p">(</span><span class="k">setq</span> <span class="nv">color</span>  <span class="p">(</span><span class="nv">hexrgb-color-name-to-hex</span> <span class="nv">color</span><span class="p">)))</span>
</span><span class='line'>  <span class="p">(</span><span class="k">let</span> <span class="p">((</span><span class="nv">len</span>  <span class="p">(</span><span class="nb">/</span> <span class="p">(</span><span class="nb">1-</span> <span class="p">(</span><span class="nb">length</span> <span class="nv">color</span><span class="p">))</span> <span class="mi">3</span><span class="p">)))</span>
</span><span class='line'>    <span class="p">(</span><span class="nb">list</span> <span class="p">(</span><span class="nb">/</span> <span class="p">(</span><span class="nv">hexrgb-hex-to-int</span> <span class="p">(</span><span class="nv">substring</span> <span class="nv">color</span> <span class="mi">1</span> <span class="p">(</span><span class="nb">1+</span> <span class="nv">len</span><span class="p">)))</span> <span class="mf">65535.0</span><span class="p">)</span>
</span><span class='line'>          <span class="p">(</span><span class="nb">/</span> <span class="p">(</span><span class="nv">hexrgb-hex-to-int</span> <span class="p">(</span><span class="nv">substring</span> <span class="nv">color</span> <span class="p">(</span><span class="nb">1+</span> <span class="nv">len</span><span class="p">)</span> <span class="p">(</span><span class="nb">+</span> <span class="mi">1</span> <span class="nv">len</span> <span class="nv">len</span><span class="p">)))</span> <span class="mf">65535.0</span><span class="p">)</span>
</span><span class='line'>          <span class="p">(</span><span class="nb">/</span> <span class="p">(</span><span class="nv">hexrgb-hex-to-int</span> <span class="p">(</span><span class="nv">substring</span> <span class="nv">color</span> <span class="p">(</span><span class="nb">+</span> <span class="mi">1</span> <span class="nv">len</span> <span class="nv">len</span><span class="p">)))</span> <span class="mf">65535.0</span><span class="p">))))</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">hexrgb-color-name-to-hex</span> <span class="p">(</span><span class="nv">color</span> <span class="k">&amp;optional</span> <span class="nv">nb-digits</span><span class="p">)</span>
</span><span class='line'>  <span class="s">&quot;Return the RGB hex string for the COLOR name, starting with \&quot;#\&quot;.</span>
</span><span class='line'><span class="s">If COLOR is already a string starting with \&quot;#\&quot;, then just return</span>
</span><span class='line'><span class="s">  it.&quot;</span>
</span><span class='line'>  <span class="p">(</span><span class="k">setq</span> <span class="nv">nb-digits</span> <span class="p">(</span><span class="nb">or</span> <span class="nv">nb-digits</span> <span class="mi">4</span><span class="p">))</span>
</span><span class='line'>  <span class="p">(</span><span class="k">let</span> <span class="p">((</span><span class="nv">components</span>  <span class="p">(</span><span class="nv">x-color-values</span> <span class="nv">color</span><span class="p">)))</span>
</span><span class='line'>    <span class="p">(</span><span class="nb">unless</span> <span class="nv">components</span> <span class="p">(</span><span class="nb">error</span> <span class="s">&quot;No such color: %S&quot;</span> <span class="nv">color</span><span class="p">))</span>
</span><span class='line'>    <span class="p">(</span><span class="nb">unless</span> <span class="p">(</span><span class="nv">hexrgb-rgb-hex-string-p</span> <span class="nv">color</span><span class="p">)</span>
</span><span class='line'>      <span class="p">(</span><span class="k">setq</span> <span class="nv">color</span>  <span class="p">(</span><span class="nv">hexrgb-color-values-to-hex</span> <span class="nv">components</span> <span class="nv">nb-digits</span><span class="p">))))</span>
</span><span class='line'>  <span class="nv">color</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">;; Color &quot;components&quot; would be better in the name than color &quot;value&quot;</span>
</span><span class='line'><span class="c1">;; but this name follows the Emacs tradition (e.g. `x-color-values&#39;,</span>
</span><span class='line'><span class="c1">;; &#39;ps-color-values&#39;, `ps-e-x-color-values&#39;).</span>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">hexrgb-color-values-to-hex</span> <span class="p">(</span><span class="nv">components</span> <span class="k">&amp;optional</span> <span class="nv">nb-digits</span><span class="p">)</span>
</span><span class='line'>  <span class="s">&quot;Convert list of rgb color COMPONENTS to a hex string, #XXXXXXXXXXXX.</span>
</span><span class='line'><span class="s">Each X in the string is a hexadecimal digit.</span>
</span><span class='line'><span class="s">Input COMPONENTS is as for the output of `x-color-values&#39;. &amp;optional</span>
</span><span class='line'><span class="s">nbdigits, specifies the length of each hex color component&quot;</span>
</span><span class='line'><span class="c1">;; nbdigits was previously hardcoded as 4, since `x-color-values&#39;</span>
</span><span class='line'><span class="c1">;; seems to produce appropriate integer values for `4&#39;.</span>
</span><span class='line'><span class="c1">;; however, with the ubiquity of 6 digit hex colors, this is</span>
</span><span class='line'><span class="c1">;; impractical for the majority of use cases. So I&#39;ve change the</span>
</span><span class='line'><span class="c1">;; parameter to a optional argument, and added support for the</span>
</span><span class='line'><span class="c1">;; nbdigits where values are converted to hex, e.g. hexrgb-hsv-to-hex,</span>
</span><span class='line'><span class="c1">;; etc.</span>
</span><span class='line'>  <span class="p">(</span><span class="k">setq</span> <span class="nv">nb-digits</span> <span class="p">(</span><span class="nb">or</span> <span class="nv">nb-digits</span> <span class="mi">4</span><span class="p">))</span>
</span><span class='line'>  <span class="p">(</span><span class="nv">concat</span> <span class="s">&quot;#&quot;</span> <span class="p">(</span><span class="nv">hexrgb-int-to-hex</span> <span class="p">(</span><span class="nb">nth</span> <span class="mi">0</span> <span class="nv">components</span><span class="p">)</span> <span class="nv">nb-digits</span><span class="p">)</span> <span class="c1">; red</span>
</span><span class='line'>          <span class="p">(</span><span class="nv">hexrgb-int-to-hex</span> <span class="p">(</span><span class="nb">nth</span> <span class="mi">1</span> <span class="nv">components</span><span class="p">)</span> <span class="nv">nb-digits</span><span class="p">)</span> <span class="c1">; green</span>
</span><span class='line'>          <span class="p">(</span><span class="nv">hexrgb-int-to-hex</span> <span class="p">(</span><span class="nb">nth</span> <span class="mi">2</span> <span class="nv">components</span><span class="p">)</span> <span class="nv">nb-digits</span><span class="p">)))</span> <span class="c1">; blue</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">hexrgb-hex-to-color-values</span> <span class="p">(</span><span class="nv">color</span><span class="p">)</span>
</span><span class='line'>  <span class="s">&quot;Convert hex COLOR to a list of RGB color components.</span>
</span><span class='line'><span class="s">COLOR is a hex rgb color string, #XXXXXXXXXXXX</span>
</span><span class='line'><span class="s">Each X in the string is a hexadecimal digit.  There are 3N X&#39;s, N &gt; 0.</span>
</span><span class='line'><span class="s">The output list is as for `x-color-values&#39;.&quot;</span>
</span><span class='line'>  <span class="p">(</span><span class="k">let*</span> <span class="p">((</span><span class="nv">hex-strgp</span>  <span class="p">(</span><span class="nv">string-match</span>
</span><span class='line'>                      <span class="s">&quot;^\\(#\\)?\\(\\([a-fA-F0-9][a-fA-F0-9][a-fA-F0-9]\\)+\\)$&quot;</span>
</span><span class='line'>                      <span class="nv">color</span><span class="p">))</span>
</span><span class='line'>         <span class="p">(</span><span class="nv">ndigits</span>    <span class="p">(</span><span class="nb">/</span> <span class="p">(</span><span class="k">if</span> <span class="p">(</span><span class="nb">eq</span> <span class="p">(</span><span class="nv">match-beginning</span> <span class="mi">1</span><span class="p">)</span> <span class="p">(</span><span class="nv">match-end</span> <span class="mi">1</span><span class="p">))</span>
</span><span class='line'>                            <span class="p">(</span><span class="nb">length</span> <span class="nv">color</span><span class="p">)</span>
</span><span class='line'>                          <span class="p">(</span><span class="nb">1-</span> <span class="p">(</span><span class="nb">length</span> <span class="nv">color</span><span class="p">)))</span>
</span><span class='line'>                        <span class="mi">3</span><span class="p">))</span>
</span><span class='line'>         <span class="nv">red</span> <span class="nv">green</span> <span class="nv">blue</span><span class="p">)</span>
</span><span class='line'>    <span class="p">(</span><span class="nb">unless</span> <span class="nv">hex-strgp</span> <span class="p">(</span><span class="nb">error</span> <span class="s">&quot;Invalid RGB color string: %s&quot;</span> <span class="nv">color</span><span class="p">))</span>
</span><span class='line'>    <span class="p">(</span><span class="k">setq</span> <span class="nv">color</span>  <span class="p">(</span><span class="nv">substring</span> <span class="nv">color</span> <span class="p">(</span><span class="nv">match-beginning</span> <span class="mi">2</span><span class="p">)</span> <span class="p">(</span><span class="nv">match-end</span> <span class="mi">2</span><span class="p">))</span>
</span><span class='line'>          <span class="nv">red</span>    <span class="p">(</span><span class="nv">hexrgb-hex-to-int</span> <span class="p">(</span><span class="nv">substring</span> <span class="nv">color</span> <span class="mi">0</span> <span class="nv">ndigits</span><span class="p">))</span>
</span><span class='line'>          <span class="nv">green</span>  <span class="p">(</span><span class="nv">hexrgb-hex-to-int</span> <span class="p">(</span><span class="nv">substring</span> <span class="nv">color</span> <span class="nv">ndigits</span> <span class="p">(</span><span class="nb">*</span> <span class="mi">2</span> <span class="nv">ndigits</span><span class="p">)))</span>
</span><span class='line'>          <span class="nv">blue</span>   <span class="p">(</span><span class="nv">hexrgb-hex-to-int</span> <span class="p">(</span><span class="nv">substring</span> <span class="nv">color</span> <span class="p">(</span><span class="nb">*</span> <span class="mi">2</span> <span class="nv">ndigits</span><span class="p">)</span> <span class="p">(</span><span class="nb">*</span> <span class="mi">3</span> <span class="nv">ndigits</span><span class="p">))))</span>
</span><span class='line'>    <span class="p">(</span><span class="nb">list</span> <span class="nv">red</span> <span class="nv">green</span> <span class="nv">blue</span><span class="p">)))</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">hexrgb-increment-red</span> <span class="p">(</span><span class="nv">hex</span> <span class="nv">nb-digits</span> <span class="nv">increment</span> <span class="k">&amp;optional</span> <span class="nv">wrap-p</span><span class="p">)</span>
</span><span class='line'>  <span class="s">&quot;Increment red component of rgb string HEX by INCREMENT.</span>
</span><span class='line'><span class="s">String HEX starts with \&quot;#\&quot;.  Each color is NB-DIGITS hex digits long.</span>
</span><span class='line'><span class="s">If optional arg WRAP-P is non-nil then the result wraps around zero.</span>
</span><span class='line'><span class="s">  For example, with NB-DIGITS 3, incrementing \&quot;#fffffffff\&quot; by 1</span>
</span><span class='line'><span class="s">  causes it to wrap around to \&quot;#000ffffff\&quot;.&quot;</span>
</span><span class='line'>  <span class="p">(</span><span class="nv">concat</span> <span class="s">&quot;#&quot;</span>
</span><span class='line'>          <span class="p">(</span><span class="nv">hexrgb-increment-hex</span> <span class="p">(</span><span class="nv">substring</span> <span class="nv">hex</span> <span class="mi">1</span> <span class="p">(</span><span class="nb">1+</span> <span class="nv">nb-digits</span><span class="p">))</span> <span class="nv">nb-digits</span> <span class="nv">increment</span> <span class="nv">wrap-p</span><span class="p">)</span>
</span><span class='line'>          <span class="p">(</span><span class="nv">substring</span> <span class="nv">hex</span> <span class="p">(</span><span class="nb">1+</span> <span class="nv">nb-digits</span><span class="p">)</span> <span class="p">(</span><span class="nb">1+</span> <span class="p">(</span><span class="nb">*</span> <span class="nv">nb-digits</span> <span class="mi">2</span><span class="p">)))</span>
</span><span class='line'>          <span class="p">(</span><span class="nv">substring</span> <span class="nv">hex</span> <span class="p">(</span><span class="nb">1+</span> <span class="p">(</span><span class="nb">*</span> <span class="nv">nb-digits</span> <span class="mi">2</span><span class="p">)))))</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">hexrgb-increment-green</span> <span class="p">(</span><span class="nv">hex</span> <span class="nv">nb-digits</span> <span class="nv">increment</span> <span class="k">&amp;optional</span> <span class="nv">wrap-p</span><span class="p">)</span>
</span><span class='line'>  <span class="s">&quot;Increment green component of rgb string HEX by INCREMENT.</span>
</span><span class='line'><span class="s">String HEX starts with \&quot;#\&quot;.  Each color is NB-DIGITS hex digits long.</span>
</span><span class='line'><span class="s">If optional arg WRAP-P is non-nil then the result wraps around zero.</span>
</span><span class='line'><span class="s">  For example, with NB-DIGITS 3, incrementing \&quot;#fffffffff\&quot; by 1</span>
</span><span class='line'><span class="s">  causes it to wrap around to \&quot;#fff000fff\&quot;.&quot;</span>
</span><span class='line'>  <span class="p">(</span><span class="nv">concat</span>
</span><span class='line'>   <span class="s">&quot;#&quot;</span> <span class="p">(</span><span class="nv">substring</span> <span class="nv">hex</span> <span class="mi">1</span> <span class="p">(</span><span class="nb">1+</span> <span class="nv">nb-digits</span><span class="p">))</span>
</span><span class='line'>   <span class="p">(</span><span class="nv">hexrgb-increment-hex</span> <span class="p">(</span><span class="nv">substring</span> <span class="nv">hex</span> <span class="p">(</span><span class="nb">1+</span> <span class="nv">nb-digits</span><span class="p">)</span> <span class="p">(</span><span class="nb">1+</span> <span class="p">(</span><span class="nb">*</span> <span class="nv">nb-digits</span> <span class="mi">2</span><span class="p">)))</span>
</span><span class='line'>                         <span class="nv">nb-digits</span>
</span><span class='line'>                         <span class="nv">increment</span>
</span><span class='line'>                         <span class="nv">wrap-p</span><span class="p">)</span>
</span><span class='line'>   <span class="p">(</span><span class="nv">substring</span> <span class="nv">hex</span> <span class="p">(</span><span class="nb">1+</span> <span class="p">(</span><span class="nb">*</span> <span class="nv">nb-digits</span> <span class="mi">2</span><span class="p">)))))</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">hexrgb-increment-blue</span> <span class="p">(</span><span class="nv">hex</span> <span class="nv">nb-digits</span> <span class="nv">increment</span> <span class="k">&amp;optional</span> <span class="nv">wrap-p</span><span class="p">)</span>
</span><span class='line'>  <span class="s">&quot;Increment blue component of rgb string HEX by INCREMENT.</span>
</span><span class='line'><span class="s">String HEX starts with \&quot;#\&quot;.  Each color is NB-DIGITS hex digits long.</span>
</span><span class='line'><span class="s">If optional arg WRAP-P is non-nil then the result wraps around zero.</span>
</span><span class='line'><span class="s">  For example, with NB-DIGITS 3, incrementing \&quot;#fffffffff\&quot; by 1</span>
</span><span class='line'><span class="s">  causes it to wrap around to \&quot;#ffffff000\&quot;.&quot;</span>
</span><span class='line'>  <span class="p">(</span><span class="nv">concat</span> <span class="s">&quot;#&quot;</span> <span class="p">(</span><span class="nv">substring</span> <span class="nv">hex</span> <span class="mi">1</span> <span class="p">(</span><span class="nb">1+</span> <span class="p">(</span><span class="nb">*</span> <span class="nv">nb-digits</span> <span class="mi">2</span><span class="p">)))</span>
</span><span class='line'>          <span class="p">(</span><span class="nv">hexrgb-increment-hex</span> <span class="p">(</span><span class="nv">substring</span> <span class="nv">hex</span> <span class="p">(</span><span class="nb">1+</span> <span class="p">(</span><span class="nb">*</span> <span class="nv">nb-digits</span> <span class="mi">2</span><span class="p">)))</span>
</span><span class='line'>                                <span class="nv">nb-digits</span>
</span><span class='line'>                                <span class="nv">increment</span>
</span><span class='line'>                                <span class="nv">wrap-p</span><span class="p">)))</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">hexrgb-increment-equal-rgb</span> <span class="p">(</span><span class="nv">hex</span> <span class="nv">nb-digits</span> <span class="nv">increment</span> <span class="k">&amp;optional</span> <span class="nv">wrap-p</span><span class="p">)</span>
</span><span class='line'>  <span class="s">&quot;Increment each color component (r,g,b) of rgb string HEX by INCREMENT.</span>
</span><span class='line'><span class="s">String HEX starts with \&quot;#\&quot;.  Each color is NB-DIGITS hex digits long.</span>
</span><span class='line'><span class="s">If optional arg WRAP-P is non-nil then the result wraps around zero.</span>
</span><span class='line'><span class="s">  For example, with NB-DIGITS 3, incrementing \&quot;#fffffffff\&quot; by 1</span>
</span><span class='line'><span class="s">  causes it to wrap around to \&quot;#000000000\&quot;.&quot;</span>
</span><span class='line'>  <span class="p">(</span><span class="nv">concat</span>
</span><span class='line'>   <span class="s">&quot;#&quot;</span>
</span><span class='line'>   <span class="p">(</span><span class="nv">hexrgb-increment-hex</span> <span class="p">(</span><span class="nv">substring</span> <span class="nv">hex</span> <span class="mi">1</span> <span class="p">(</span><span class="nb">1+</span> <span class="nv">nb-digits</span><span class="p">))</span> <span class="nv">nb-digits</span> <span class="nv">increment</span> <span class="nv">wrap-p</span><span class="p">)</span>
</span><span class='line'>   <span class="p">(</span><span class="nv">hexrgb-increment-hex</span> <span class="p">(</span><span class="nv">substring</span> <span class="nv">hex</span> <span class="p">(</span><span class="nb">1+</span> <span class="nv">nb-digits</span><span class="p">)</span> <span class="p">(</span><span class="nb">1+</span> <span class="p">(</span><span class="nb">*</span> <span class="nv">nb-digits</span> <span class="mi">2</span><span class="p">)))</span>
</span><span class='line'>                         <span class="nv">nb-digits</span>
</span><span class='line'>                         <span class="nv">increment</span>
</span><span class='line'>                         <span class="nv">wrap-p</span><span class="p">)</span>
</span><span class='line'>   <span class="p">(</span><span class="nv">hexrgb-increment-hex</span> <span class="p">(</span><span class="nv">substring</span> <span class="nv">hex</span> <span class="p">(</span><span class="nb">1+</span> <span class="p">(</span><span class="nb">*</span> <span class="nv">nb-digits</span> <span class="mi">2</span><span class="p">)))</span> <span class="nv">nb-digits</span> <span class="nv">increment</span> <span class="nv">wrap-p</span><span class="p">)))</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">hexrgb-increment-hex</span> <span class="p">(</span><span class="nv">hex</span> <span class="nv">nb-digits</span> <span class="nv">increment</span> <span class="k">&amp;optional</span> <span class="nv">wrap-p</span><span class="p">)</span>
</span><span class='line'>  <span class="s">&quot;Increment hexadecimal-digits string HEX by INCREMENT.</span>
</span><span class='line'><span class="s">Only the first NB-DIGITS of HEX are used.</span>
</span><span class='line'><span class="s">If optional arg WRAP-P is non-nil then the result wraps around zero.</span>
</span><span class='line'><span class="s">  For example, with NB-DIGITS 3, incrementing \&quot;fff\&quot; by 1 causes it</span>
</span><span class='line'><span class="s">  to wrap around to \&quot;000\&quot;.&quot;</span>
</span><span class='line'>  <span class="p">(</span><span class="k">let*</span> <span class="p">((</span><span class="nv">int</span>      <span class="p">(</span><span class="nv">hexrgb-hex-to-int</span> <span class="nv">hex</span><span class="p">))</span>
</span><span class='line'>         <span class="p">(</span><span class="nv">new-int</span>  <span class="p">(</span><span class="nb">+</span> <span class="nv">increment</span> <span class="nv">int</span><span class="p">)))</span>
</span><span class='line'>    <span class="p">(</span><span class="k">if</span> <span class="p">(</span><span class="nb">or</span> <span class="nv">wrap-p</span>
</span><span class='line'>            <span class="p">(</span><span class="nb">and</span> <span class="p">(</span><span class="nb">&gt;=</span> <span class="nv">int</span> <span class="mi">0</span><span class="p">)</span>             <span class="c1">; Not too large for the machine.</span>
</span><span class='line'>                 <span class="p">(</span><span class="nb">&gt;=</span> <span class="nv">new-int</span> <span class="mi">0</span><span class="p">)</span>         <span class="c1">; For the case where increment &lt; 0.</span>
</span><span class='line'>                 <span class="p">(</span><span class="nb">&lt;=</span> <span class="p">(</span><span class="nb">length</span> <span class="p">(</span><span class="nb">format</span> <span class="p">(</span><span class="nv">concat</span> <span class="s">&quot;%X&quot;</span><span class="p">)</span> <span class="nv">new-int</span><span class="p">))</span> <span class="nv">nb-digits</span><span class="p">)))</span> <span class="c1">; Not too long.</span>
</span><span class='line'>        <span class="p">(</span><span class="nv">hexrgb-int-to-hex</span> <span class="nv">new-int</span> <span class="nv">nb-digits</span><span class="p">)</span> <span class="c1">; Use incremented number.</span>
</span><span class='line'>      <span class="nv">hex</span><span class="p">)))</span>                            <span class="c1">; Don&#39;t increment.</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">hexrgb-hex-to-int</span> <span class="p">(</span><span class="nv">hex</span><span class="p">)</span>
</span><span class='line'>  <span class="s">&quot;Convert HEX string argument to an integer.</span>
</span><span class='line'><span class="s">The characters of HEX must be hex characters.&quot;</span>
</span><span class='line'>  <span class="p">(</span><span class="k">let*</span> <span class="p">((</span><span class="nv">factor</span>  <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>         <span class="p">(</span><span class="nv">len</span>     <span class="p">(</span><span class="nb">length</span> <span class="nv">hex</span><span class="p">))</span>
</span><span class='line'>         <span class="p">(</span><span class="nv">indx</span>    <span class="p">(</span><span class="nb">1-</span> <span class="nv">len</span><span class="p">))</span>
</span><span class='line'>         <span class="p">(</span><span class="nv">int</span>     <span class="mi">0</span><span class="p">))</span>
</span><span class='line'>    <span class="p">(</span><span class="nv">while</span> <span class="p">(</span><span class="nb">&gt;=</span> <span class="nv">indx</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="p">(</span><span class="k">setq</span> <span class="nv">int</span>     <span class="p">(</span><span class="nb">+</span> <span class="nv">int</span> <span class="p">(</span><span class="nb">*</span> <span class="nv">factor</span> <span class="p">(</span><span class="nv">hexrgb-hex-char-to-integer</span> <span class="p">(</span><span class="nb">aref</span> <span class="nv">hex</span> <span class="nv">indx</span><span class="p">))))</span>
</span><span class='line'>            <span class="nv">indx</span>    <span class="p">(</span><span class="nb">1-</span> <span class="nv">indx</span><span class="p">)</span>
</span><span class='line'>            <span class="nv">factor</span>  <span class="p">(</span><span class="nb">*</span> <span class="mi">16</span> <span class="nv">factor</span><span class="p">)))</span>
</span><span class='line'>    <span class="nv">int</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="c1">;; From `hexl.el&#39;.  This is the same as `hexl-hex-char-to-integer&#39; defined there.</span>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">hexrgb-hex-char-to-integer</span> <span class="p">(</span><span class="nb">character</span><span class="p">)</span>
</span><span class='line'>  <span class="s">&quot;Take a CHARACTER and return its value as if it were a hex digit.&quot;</span>
</span><span class='line'>  <span class="p">(</span><span class="k">if</span> <span class="p">(</span><span class="nb">and</span> <span class="p">(</span><span class="nb">&gt;=</span> <span class="nb">character</span> <span class="nv">?0</span><span class="p">)</span> <span class="p">(</span><span class="nb">&lt;=</span> <span class="nb">character</span> <span class="nv">?9</span><span class="p">))</span>
</span><span class='line'>      <span class="p">(</span><span class="nb">-</span> <span class="nb">character</span> <span class="nv">?0</span><span class="p">)</span>
</span><span class='line'>    <span class="p">(</span><span class="k">let</span> <span class="p">((</span><span class="nv">ch</span>  <span class="p">(</span><span class="nb">logior</span> <span class="nb">character</span> <span class="mi">32</span><span class="p">)))</span>
</span><span class='line'>      <span class="p">(</span><span class="k">if</span> <span class="p">(</span><span class="nb">and</span> <span class="p">(</span><span class="nb">&gt;=</span> <span class="nv">ch</span> <span class="nv">?a</span><span class="p">)</span> <span class="p">(</span><span class="nb">&lt;=</span> <span class="nv">ch</span> <span class="nv">?f</span><span class="p">))</span>
</span><span class='line'>          <span class="p">(</span><span class="nb">-</span> <span class="nv">ch</span> <span class="p">(</span><span class="nb">-</span> <span class="nv">?a</span> <span class="mi">10</span><span class="p">))</span>
</span><span class='line'>        <span class="p">(</span><span class="nb">error</span> <span class="s">&quot;Invalid hex digit `%c&#39;&quot;</span> <span class="nv">ch</span><span class="p">)))))</span>
</span><span class='line'>
</span><span class='line'><span class="c1">;; Originally, I used the code from `int-to-hex-string&#39; in `float.el&#39;.</span>
</span><span class='line'><span class="c1">;; This version is thanks to Juri Linkov &lt;juri@jurta.org&gt;.</span>
</span><span class='line'><span class="c1">;;</span>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">hexrgb-int-to-hex</span> <span class="p">(</span><span class="nv">int</span> <span class="k">&amp;optional</span> <span class="nv">nb-digits</span><span class="p">)</span>
</span><span class='line'>  <span class="s">&quot;Convert integer argument INT to a #XXXXXXXXXXXX format hex string.</span>
</span><span class='line'><span class="s">Each X in the output string is a hexadecimal digit.</span>
</span><span class='line'><span class="s">NB-DIGITS is the number of hex digits.  If INT is too large to be</span>
</span><span class='line'><span class="s">represented with NB-DIGITS, then the result is truncated from the</span>
</span><span class='line'><span class="s">left.  So, for example, INT=256 and NB-DIGITS=2 returns \&quot;00\&quot;, since</span>
</span><span class='line'><span class="s">the hex equivalent of 256 decimal is 100, which is more than 2 digits.&quot;</span>
</span><span class='line'>  <span class="p">(</span><span class="k">setq</span> <span class="nv">nb-digits</span> <span class="p">(</span><span class="nb">or</span> <span class="nv">nb-digits</span> <span class="mi">4</span><span class="p">))</span>
</span><span class='line'>  <span class="p">(</span><span class="nv">substring</span> <span class="p">(</span><span class="nb">format</span> <span class="p">(</span><span class="nv">concat</span> <span class="s">&quot;%0&quot;</span> <span class="p">(</span><span class="nv">int-to-string</span> <span class="nv">nb-digits</span><span class="p">)</span> <span class="s">&quot;X&quot;</span><span class="p">)</span> <span class="nv">int</span><span class="p">)</span> <span class="p">(</span><span class="nb">-</span> <span class="nv">nb-digits</span><span class="p">)))</span>
</span><span class='line'>
</span><span class='line'><span class="c1">;; Inspired by Elisp Info manual, node &quot;Comparison of Numbers&quot;.</span>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">hexrgb-approx-equal</span> <span class="p">(</span><span class="nv">x</span> <span class="nv">y</span> <span class="k">&amp;optional</span> <span class="nv">rfuzz</span> <span class="nv">afuzz</span><span class="p">)</span>
</span><span class='line'>  <span class="s">&quot;Return non-nil if numbers X and Y are approximately equal.</span>
</span><span class='line'><span class="s">RFUZZ is a relative fuzz factor.  AFUZZ is an absolute fuzz factor.</span>
</span><span class='line'><span class="s">RFUZZ defaults to 1.0e-8.  AFUZZ defaults to (/ RFUZZ 10).</span>
</span><span class='line'><span class="s">RFUZZ and AFUZZ are converted to their absolute values.</span>
</span><span class='line'><span class="s">The algorithm is:</span>
</span><span class='line'><span class="s"> (&lt; (abs (- X Y)) (+ AFUZZ (* RFUZZ (+ (abs X) (abs Y))))).&quot;</span>
</span><span class='line'>  <span class="p">(</span><span class="k">setq</span> <span class="nv">rfuzz</span>  <span class="p">(</span><span class="nb">or</span> <span class="nv">rfuzz</span> <span class="mf">1.0e-8</span><span class="p">)</span>
</span><span class='line'>        <span class="nv">rfuzz</span>  <span class="p">(</span><span class="nb">abs</span> <span class="nv">rfuzz</span><span class="p">)</span>
</span><span class='line'>        <span class="nv">afuzz</span>  <span class="p">(</span><span class="nb">or</span> <span class="nv">afuzz</span> <span class="p">(</span><span class="nb">/</span> <span class="nv">rfuzz</span> <span class="mi">10</span><span class="p">))</span>
</span><span class='line'>        <span class="nv">afuzz</span>  <span class="p">(</span><span class="nb">abs</span> <span class="nv">afuzz</span><span class="p">))</span>
</span><span class='line'>  <span class="p">(</span><span class="nb">&lt;</span> <span class="p">(</span><span class="nb">abs</span> <span class="p">(</span><span class="nb">-</span> <span class="nv">x</span> <span class="nv">y</span><span class="p">))</span> <span class="p">(</span><span class="nb">+</span> <span class="nv">afuzz</span> <span class="p">(</span><span class="nb">*</span> <span class="nv">rfuzz</span> <span class="p">(</span><span class="nb">+</span> <span class="p">(</span><span class="nb">abs</span> <span class="nv">x</span><span class="p">)</span> <span class="p">(</span><span class="nb">abs</span> <span class="nv">y</span><span class="p">))))))</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">hexrgb-color-value-to-float</span> <span class="p">(</span><span class="nv">n</span><span class="p">)</span>
</span><span class='line'>  <span class="s">&quot;Return the floating-point equivalent of color-component value N.</span>
</span><span class='line'><span class="s">N must be an integer between 0 and 65535, or else an error is raised.&quot;</span>
</span><span class='line'>  <span class="p">(</span><span class="nb">unless</span> <span class="p">(</span><span class="nb">and</span> <span class="p">(</span><span class="nv">wholenump</span> <span class="nv">n</span><span class="p">)</span> <span class="p">(</span><span class="nb">&lt;=</span> <span class="nv">n</span> <span class="mi">65535</span><span class="p">))</span>
</span><span class='line'>    <span class="p">(</span><span class="nb">error</span> <span class="s">&quot;Not a whole number less than 65536&quot;</span><span class="p">))</span>
</span><span class='line'>  <span class="p">(</span><span class="nb">/</span> <span class="p">(</span><span class="nb">float</span> <span class="nv">n</span><span class="p">)</span> <span class="mf">65535.0</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">hexrgb-hex-to-hex</span> <span class="p">(</span><span class="nv">hex</span> <span class="nv">nb-digits</span><span class="p">)</span>
</span><span class='line'>  <span class="s">&quot;Return a hex string of NB-DIGITS digits, rounded from hex string HEX.</span>
</span><span class='line'><span class="s">Raise an error if HEX represents a number &gt; `most-positive-fixnum&#39;</span>
</span><span class='line'><span class="s">HEX is a hex string, not an RGB string.  It does not start with `#&#39;.&quot;</span>
</span><span class='line'>  <span class="p">(</span><span class="k">let*</span> <span class="p">((</span><span class="nv">len</span>      <span class="p">(</span><span class="nb">length</span> <span class="nv">hex</span><span class="p">))</span>
</span><span class='line'>         <span class="p">(</span><span class="nv">digdiff</span>  <span class="p">(</span><span class="nb">-</span> <span class="nv">nb-digits</span> <span class="nv">len</span><span class="p">)))</span>
</span><span class='line'>    <span class="p">(</span><span class="nb">cond</span> <span class="p">((</span><span class="nb">zerop</span> <span class="nv">digdiff</span><span class="p">)</span>
</span><span class='line'>           <span class="nv">hex</span><span class="p">)</span>
</span><span class='line'>          <span class="p">((</span><span class="nv">natnump</span> <span class="nv">digdiff</span><span class="p">)</span>
</span><span class='line'>           <span class="p">(</span><span class="k">let</span> <span class="p">((</span><span class="nv">int</span>  <span class="p">(</span><span class="nv">hexrgb-hex-to-int</span> <span class="nv">hex</span><span class="p">)))</span>
</span><span class='line'>             <span class="p">(</span><span class="nb">unless</span> <span class="p">(</span><span class="nv">natnump</span> <span class="nv">int</span><span class="p">)</span> <span class="p">(</span><span class="nb">error</span> <span class="s">&quot;HEX number is too large&quot;</span><span class="p">))</span>
</span><span class='line'>             <span class="p">(</span><span class="nb">format</span> <span class="p">(</span><span class="nv">concat</span> <span class="s">&quot;%0&quot;</span> <span class="p">(</span><span class="nv">int-to-string</span> <span class="nv">len</span><span class="p">)</span> <span class="s">&quot;X&quot;</span> <span class="p">(</span><span class="nb">make-string</span> <span class="nv">digdiff</span> <span class="nv">?0</span><span class="p">))</span> <span class="nv">int</span><span class="p">)))</span>
</span><span class='line'>          <span class="p">(</span><span class="no">t</span>
</span><span class='line'>           <span class="p">(</span><span class="k">let</span> <span class="p">((</span><span class="nv">over</span>  <span class="p">(</span><span class="nv">substring</span> <span class="nv">hex</span> <span class="nv">digdiff</span><span class="p">)))</span>
</span><span class='line'>             <span class="p">(</span><span class="k">setq</span> <span class="nv">hex</span>  <span class="p">(</span><span class="nv">substring</span> <span class="nv">hex</span> <span class="mi">0</span> <span class="nv">nb-digits</span><span class="p">))</span>
</span><span class='line'>             <span class="p">(</span><span class="k">if</span> <span class="p">(</span><span class="nb">&gt;</span> <span class="p">(</span><span class="nv">string-to-number</span> <span class="nv">over</span> <span class="mi">16</span><span class="p">)</span>
</span><span class='line'>                    <span class="p">(</span><span class="nv">string-to-number</span> <span class="p">(</span><span class="nb">make-string</span> <span class="p">(</span><span class="nb">-</span> <span class="nv">digdiff</span><span class="p">)</span> <span class="nv">?7</span><span class="p">)</span> <span class="mi">16</span><span class="p">))</span>
</span><span class='line'>                 <span class="p">(</span><span class="nv">hexrgb-increment-hex</span> <span class="nv">hex</span> <span class="nv">nb-digits</span> <span class="mi">1</span><span class="p">)</span> <span class="c1">; Round up.</span>
</span><span class='line'>               <span class="nv">hex</span><span class="p">))))))</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">hexrgb-rgb-hex-to-rgb-hex</span> <span class="p">(</span><span class="nv">hex</span> <span class="nv">nb-digits</span><span class="p">)</span>
</span><span class='line'>  <span class="s">&quot;Trim or expand hex RGB string HEX to NB-DIGITS digits.</span>
</span><span class='line'><span class="s">HEX can optionally start with `#&#39;.</span>
</span><span class='line'><span class="s">In that case, so does the return value.&quot;</span>
</span><span class='line'>  <span class="p">(</span><span class="k">let*</span> <span class="p">((</span><span class="nv">nb-sign-p</span>  <span class="p">(</span><span class="nb">eq</span> <span class="nv">?#</span> <span class="p">(</span><span class="nb">aref</span> <span class="nv">hex</span> <span class="mi">0</span><span class="p">)))</span>
</span><span class='line'>         <span class="p">(</span><span class="nv">hex+</span>       <span class="p">(</span><span class="nb">or</span> <span class="p">(</span><span class="nb">and</span> <span class="nv">nb-sign-p</span>  <span class="nv">hex</span><span class="p">)</span>  <span class="p">(</span><span class="nv">concat</span> <span class="s">&quot;#&quot;</span> <span class="nv">hex</span><span class="p">)))</span>
</span><span class='line'>         <span class="p">(</span><span class="nv">red</span>        <span class="p">(</span><span class="nv">hexrgb-red-hex</span>   <span class="nv">hex+</span><span class="p">))</span>
</span><span class='line'>         <span class="p">(</span><span class="nv">green</span>      <span class="p">(</span><span class="nv">hexrgb-green-hex</span> <span class="nv">hex+</span><span class="p">))</span>
</span><span class='line'>         <span class="p">(</span><span class="nv">blue</span>       <span class="p">(</span><span class="nv">hexrgb-blue-hex</span>  <span class="nv">hex+</span><span class="p">)))</span>
</span><span class='line'>    <span class="p">(</span><span class="nb">format</span> <span class="s">&quot;%s%s%s%s&quot;</span>
</span><span class='line'>            <span class="p">(</span><span class="k">if</span> <span class="nv">nb-sign-p</span> <span class="s">&quot;#&quot;</span> <span class="s">&quot;&quot;</span><span class="p">)</span>
</span><span class='line'>            <span class="p">(</span><span class="nv">hexrgb-hex-to-hex</span> <span class="nv">red</span>   <span class="nv">nb-digits</span><span class="p">)</span>
</span><span class='line'>            <span class="p">(</span><span class="nv">hexrgb-hex-to-hex</span> <span class="nv">green</span> <span class="nv">nb-digits</span><span class="p">)</span>
</span><span class='line'>            <span class="p">(</span><span class="nv">hexrgb-hex-to-hex</span> <span class="nv">blue</span>  <span class="nv">nb-digits</span><span class="p">))))</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">hexrgb-red-hex</span> <span class="p">(</span><span class="nv">hex</span><span class="p">)</span>
</span><span class='line'>  <span class="s">&quot;Return the red hex component for RGB string HEX.</span>
</span><span class='line'><span class="s">HEX can optionally start with `#&#39;.  The return value does not.&quot;</span>
</span><span class='line'>  <span class="p">(</span><span class="k">let*</span> <span class="p">((</span><span class="nv">nb-sign-p</span>  <span class="p">(</span><span class="nb">eq</span> <span class="nv">?#</span> <span class="p">(</span><span class="nb">aref</span> <span class="nv">hex</span> <span class="mi">0</span><span class="p">)))</span>
</span><span class='line'>         <span class="p">(</span><span class="nv">hex-</span>       <span class="p">(</span><span class="nb">or</span> <span class="p">(</span><span class="nb">and</span> <span class="nv">nb-sign-p</span>  <span class="p">(</span><span class="nv">substring</span> <span class="nv">hex</span> <span class="mi">1</span><span class="p">))</span>  <span class="nv">hex</span><span class="p">)))</span>
</span><span class='line'>    <span class="p">(</span><span class="nv">substring</span> <span class="nv">hex-</span> <span class="mi">0</span> <span class="p">(</span><span class="nb">/</span> <span class="p">(</span><span class="nb">length</span> <span class="nv">hex-</span><span class="p">)</span> <span class="mi">3</span><span class="p">))))</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">hexrgb-green-hex</span> <span class="p">(</span><span class="nv">hex</span><span class="p">)</span>
</span><span class='line'>  <span class="s">&quot;Return the green hex component for RGB string HEX.</span>
</span><span class='line'><span class="s">HEX can optionally start with `#&#39;.  The return value does not.&quot;</span>
</span><span class='line'>  <span class="p">(</span><span class="k">let*</span> <span class="p">((</span><span class="nv">nb-sign-p</span>  <span class="p">(</span><span class="nb">eq</span> <span class="nv">?#</span> <span class="p">(</span><span class="nb">aref</span> <span class="nv">hex</span> <span class="mi">0</span><span class="p">)))</span>
</span><span class='line'>         <span class="p">(</span><span class="nv">hex-</span>       <span class="p">(</span><span class="nb">or</span> <span class="p">(</span><span class="nb">and</span> <span class="nv">nb-sign-p</span>  <span class="p">(</span><span class="nv">substring</span> <span class="nv">hex</span> <span class="mi">1</span><span class="p">))</span>  <span class="nv">hex</span><span class="p">))</span>
</span><span class='line'>         <span class="p">(</span><span class="nv">len</span>        <span class="p">(</span><span class="nb">/</span> <span class="p">(</span><span class="nb">length</span> <span class="nv">hex-</span><span class="p">)</span> <span class="mi">3</span><span class="p">)))</span>
</span><span class='line'>    <span class="p">(</span><span class="nv">substring</span> <span class="nv">hex-</span> <span class="nv">len</span> <span class="p">(</span><span class="nb">*</span> <span class="mi">2</span> <span class="nv">len</span><span class="p">))))</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">hexrgb-blue-hex</span> <span class="p">(</span><span class="nv">hex</span><span class="p">)</span>
</span><span class='line'>  <span class="s">&quot;Return the blue hex component for RGB string HEX.</span>
</span><span class='line'><span class="s">HEX can optionally start with `#&#39;.  The return value does not.&quot;</span>
</span><span class='line'>  <span class="p">(</span><span class="k">let*</span> <span class="p">((</span><span class="nv">nb-sign-p</span>  <span class="p">(</span><span class="nb">eq</span> <span class="nv">?#</span> <span class="p">(</span><span class="nb">aref</span> <span class="nv">hex</span> <span class="mi">0</span><span class="p">)))</span>
</span><span class='line'>         <span class="p">(</span><span class="nv">hex-</span>       <span class="p">(</span><span class="nb">or</span> <span class="p">(</span><span class="nb">and</span> <span class="nv">nb-sign-p</span>  <span class="p">(</span><span class="nv">substring</span> <span class="nv">hex</span> <span class="mi">1</span><span class="p">))</span>  <span class="nv">hex</span><span class="p">))</span>
</span><span class='line'>         <span class="p">(</span><span class="nv">len</span>        <span class="p">(</span><span class="nb">/</span> <span class="p">(</span><span class="nb">length</span> <span class="nv">hex-</span><span class="p">)</span> <span class="mi">3</span><span class="p">)))</span>
</span><span class='line'>    <span class="p">(</span><span class="nv">substring</span> <span class="nv">hex-</span> <span class="p">(</span><span class="nb">*</span> <span class="mi">2</span> <span class="nv">len</span><span class="p">))))</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">hexrgb-float-to-color-value</span> <span class="p">(</span><span class="nv">x</span><span class="p">)</span>
</span><span class='line'>  <span class="s">&quot;Return the color-component value equivalent of floating-point number X.</span>
</span><span class='line'><span class="s">X must be between 0.0 and 1.0, or else an error is raised.&quot;</span>
</span><span class='line'>  <span class="p">(</span><span class="nb">unless</span> <span class="p">(</span><span class="nb">and</span> <span class="p">(</span><span class="nb">numberp</span> <span class="nv">x</span><span class="p">)</span> <span class="p">(</span><span class="nb">&lt;=</span> <span class="mf">0.0</span> <span class="nv">x</span><span class="p">)</span> <span class="p">(</span><span class="nb">&lt;=</span> <span class="nv">x</span> <span class="mf">1.0</span><span class="p">))</span>
</span><span class='line'>    <span class="p">(</span><span class="nb">error</span> <span class="s">&quot;Not a floating-point number between 0.0 and 1.0&quot;</span><span class="p">))</span>
</span><span class='line'>  <span class="p">(</span><span class="nb">floor</span> <span class="p">(</span><span class="nb">*</span> <span class="nv">x</span> <span class="mf">65535.0</span><span class="p">)))</span>
</span><span class='line'>
</span><span class='line'><span class="c1">;;;;;;;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class='line'><span class="c1">;; New functions</span>
</span><span class='line'><span class="c1">;;</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">hexrgb-hex-set-brightness</span>
</span><span class='line'>  <span class="p">(</span><span class="nv">hex</span> <span class="nv">brightness</span><span class="p">)</span>
</span><span class='line'>  <span class="s">&quot;set brightness of a hex color, amount values from 0-1</span>
</span><span class='line'><span class="s">   returns a 6 digit hex color&quot;</span>
</span><span class='line'>  <span class="p">(</span><span class="k">let*</span> <span class="p">((</span><span class="nv">hsv</span> <span class="p">(</span><span class="nv">hexrgb-hex-to-hsv</span> <span class="nv">hex</span><span class="p">))</span>
</span><span class='line'>         <span class="p">(</span><span class="nv">h</span> <span class="p">(</span><span class="nb">first</span> <span class="nv">hsv</span><span class="p">))</span> <span class="p">(</span><span class="nv">s</span> <span class="p">(</span><span class="nb">second</span> <span class="nv">hsv</span><span class="p">))</span> <span class="p">(</span><span class="nv">v</span> <span class="p">(</span><span class="nb">third</span> <span class="nv">hsv</span><span class="p">)))</span>
</span><span class='line'>    <span class="p">(</span><span class="nv">hexrgb-hsv-to-hex</span> <span class="nv">h</span> <span class="nv">s</span> <span class="p">(</span><span class="nb">*</span> <span class="nv">brightness</span> <span class="nv">v</span><span class="p">)</span> <span class="mi">2</span><span class="p">)))</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">hexrgb-hex-set-saturation</span>
</span><span class='line'>  <span class="p">(</span><span class="nv">hex</span> <span class="nv">saturation</span><span class="p">)</span>
</span><span class='line'>  <span class="s">&quot;set saturation of a hex color, amount values from 0-1</span>
</span><span class='line'><span class="s">   returns a 6 digit hex color&quot;</span>
</span><span class='line'>  <span class="p">(</span><span class="k">let*</span> <span class="p">((</span><span class="nv">hsv</span> <span class="p">(</span><span class="nv">hexrgb-hex-to-hsv</span> <span class="nv">hex</span><span class="p">))</span>
</span><span class='line'>         <span class="p">(</span><span class="nv">h</span> <span class="p">(</span><span class="nb">first</span> <span class="nv">hsv</span><span class="p">))</span> <span class="p">(</span><span class="nv">s</span> <span class="p">(</span><span class="nb">second</span> <span class="nv">hsv</span><span class="p">))</span> <span class="p">(</span><span class="nv">v</span> <span class="p">(</span><span class="nb">third</span> <span class="nv">hsv</span><span class="p">)))</span>
</span><span class='line'>    <span class="p">(</span><span class="nv">hexrgb-hsv-to-hex</span> <span class="nv">h</span> <span class="p">(</span><span class="nb">*</span> <span class="nv">saturation</span> <span class="nv">s</span><span class="p">)</span> <span class="nv">v</span> <span class="mi">2</span><span class="p">)))</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="nb">defun</span> <span class="nv">hexrgb-hex-set-hue</span>
</span><span class='line'>  <span class="p">(</span><span class="nv">hex</span> <span class="nv">hue</span><span class="p">)</span>
</span><span class='line'>  <span class="s">&quot;set hue of a hex color, amount values from 0-1</span>
</span><span class='line'><span class="s">   returns a 6 digit hex color&quot;</span>
</span><span class='line'>  <span class="p">(</span><span class="k">let*</span> <span class="p">((</span><span class="nv">hsv</span> <span class="p">(</span><span class="nv">hexrgb-hex-to-hsv</span> <span class="nv">hex</span><span class="p">))</span>
</span><span class='line'>         <span class="p">(</span><span class="nv">s</span> <span class="p">(</span><span class="nb">second</span> <span class="nv">hsv</span><span class="p">))</span> <span class="p">(</span><span class="nv">v</span> <span class="p">(</span><span class="nb">third</span> <span class="nv">hsv</span><span class="p">)))</span>
</span><span class='line'>    <span class="p">(</span><span class="nv">hexrgb-hsv-to-hex</span> <span class="nv">hue</span> <span class="nv">s</span> <span class="nv">v</span> <span class="mi">2</span><span class="p">)))</span>
</span><span class='line'>
</span><span class='line'> <span class="p">(</span><span class="nv">defcustom</span> <span class="nv">hexrgb-color-group-format</span> <span class="s">&quot;%s, &quot;</span> <span class="s">&quot;DOCSTRING&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'> <span class="p">(</span><span class="nb">defun</span> <span class="nv">hexrgb-hex-hue-group</span> <span class="p">(</span><span class="nv">hex</span> <span class="p">)</span> <span class="s">&quot;Return a list of hexcolors of different hues&quot;</span>
</span><span class='line'>   <span class="p">(</span><span class="nv">interactive</span> <span class="s">&quot;sHex color: &quot;</span><span class="p">)</span>
</span><span class='line'>   <span class="p">(</span><span class="nb">loop</span> <span class="nv">for</span> <span class="nv">n</span> <span class="nv">from</span> <span class="mi">9</span> <span class="nv">downto</span> <span class="mi">1</span> <span class="nb">do</span>
</span><span class='line'>         <span class="p">(</span><span class="nv">insert</span>
</span><span class='line'>          <span class="p">(</span><span class="nb">format</span> <span class="p">(</span><span class="nb">or</span> <span class="nv">hexrgb-color-group-format</span> <span class="s">&quot;\n%s&quot;</span><span class="p">)</span> <span class="p">(</span><span class="nv">hexrgb-hex-set-hue</span> <span class="nv">hex</span> <span class="p">(</span><span class="nb">*</span> <span class="nv">n</span> <span class="mf">0.1</span><span class="p">))))))</span>
</span><span class='line'>
</span><span class='line'> <span class="p">(</span><span class="nb">defun</span> <span class="nv">hexrgb-hex-sat-group</span> <span class="p">(</span><span class="nv">hex</span><span class="p">)</span> <span class="s">&quot;DOCSTRING&quot;</span>
</span><span class='line'>   <span class="p">(</span><span class="nv">interactive</span> <span class="s">&quot;sHex color: &quot;</span><span class="p">)</span>
</span><span class='line'>   <span class="p">(</span><span class="nb">loop</span> <span class="nv">for</span> <span class="nv">n</span> <span class="nv">from</span> <span class="mi">9</span> <span class="nv">downto</span> <span class="mi">1</span> <span class="nb">do</span>
</span><span class='line'>         <span class="p">(</span><span class="nv">insert</span>
</span><span class='line'>          <span class="p">(</span><span class="nb">format</span> <span class="p">(</span><span class="nb">or</span> <span class="nv">hexrgb-color-group-format</span> <span class="s">&quot;\n%s&quot;</span><span class="p">)</span> <span class="p">(</span><span class="nv">hexrgb-hex-set-saturation</span> <span class="nv">hex</span> <span class="p">(</span><span class="nb">*</span> <span class="nv">n</span> <span class="mf">0.1</span><span class="p">))))))</span>
</span><span class='line'>
</span><span class='line'> <span class="p">(</span><span class="nb">defun</span> <span class="nv">hexrgb-hex-val-group</span> <span class="p">(</span><span class="nv">hex</span><span class="p">)</span> <span class="s">&quot;Insert a set of colors with a range of brightness (val) &quot;</span>
</span><span class='line'>   <span class="p">(</span><span class="nv">interactive</span> <span class="s">&quot;sHex color: &quot;</span><span class="p">)</span>
</span><span class='line'>   <span class="p">(</span><span class="nb">loop</span> <span class="nv">for</span> <span class="nv">n</span> <span class="nv">from</span> <span class="mi">9</span> <span class="nv">downto</span> <span class="mi">1</span> <span class="nb">do</span>
</span><span class='line'>         <span class="p">(</span><span class="nv">insert</span>
</span><span class='line'>          <span class="p">(</span><span class="nb">format</span> <span class="p">(</span><span class="nb">or</span> <span class="nv">hexrgb-color-group-format</span> <span class="s">&quot;\n%s&quot;</span><span class="p">)</span> <span class="p">(</span><span class="nv">hexrgb-hex-set-brightness</span> <span class="nv">hex</span> <span class="p">(</span><span class="nb">*</span> <span class="nv">n</span> <span class="mf">0.1</span><span class="p">))))))</span>
</span><span class='line'>
</span><span class='line'><span class="c1">;;</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="nb">provide</span> <span class="ss">&#39;hexrgb</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span>
</span><span class='line'><span class="c1">;;; hexrgb.el ends here</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Two Emacs24 Themes]]></title>
    <link href="http://emacsfodder.github.com/blog/two-new-emacs24-themes/"/>
    <updated>2012-06-29T00:00:00+10:00</updated>
    <id>http://emacsfodder.github.com/blog/two-new-emacs24-themes</id>
    <content type="html"><![CDATA[<p><img src="http://emacsfodder.github.com/media/emacs24.themes.vol1.png" alt="" /></p>

<h1>Download&#8230;</h1>

<p><a href="http://emacsfodder.github.com/downloads/deep-blue-day-theme.el">deep-blue-day-theme.el</a></p>

<p><a href="http://emacsfodder.github.com/downloads/mechanical-turq-theme.el">mechanical-turq-theme.el</a></p>

<p>Save them to your emacs custom theme folder, <code>~/.emacs.d/</code> by default, and in Emacs use <code>M-x enable-theme</code> to load and enable them (TAB completion will be available there, to make your life easier.)</p>

<p>If you have questions, let me know.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Powerline.el enhanced]]></title>
    <link href="http://emacsfodder.github.com/blog/powerline-enhanced/"/>
    <updated>2012-06-20T00:00:00+10:00</updated>
    <id>http://emacsfodder.github.com/blog/powerline-enhanced</id>
    <content type="html"><![CDATA[<h2>Update: Jan 2013 - There is now a new powerline.el (1.2)</h2>

<p>*Note that these enhancements were made to an earlier version, which
 has been bugfixed. It should be trivial to extract the xpm data /
 memoization / condition, for a shape you&#8217;d like, I&#8217;ll patch and
 pull-request at some stage to add these into the latest version&#8230;</p>

<h3>&#8230;. back to the original post.</h3>

<!--more-->


<p>Powerline is an awesome little enhancement for Emacs, ported over from
Vim by <strike>an original unknown author</strike> Nicolas Rougier and
Chen Yuan, you can find the original version at
<a href="http://emacswiki.org/emacs/powerline.el">http://emacswiki.org/emacs/powerline.el</a></p>

<p>I&#8217;ve added a few different xpm shapes as alternatives to the arrows or
flatshapes, a rounded or folded corner, and a set of diagonals.</p>

<p>Grab the updated powerline from here: <a href="https://gist.github.com/2945235">https://gist.github.com/2945235</a> <span class="icon-download icon-white"></span></p>

<p>Put it somewhere in your Emacs load path (e.g. <code>~/.emacs.d</code>) and add
the following lines to the end of your <code>.emacs</code> / <code>init.el</code> - to load
it, set the colors and graphic shape:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='cl'><span class='line'><span class="p">(</span><span class="nb">require</span> <span class="ss">&#39;powerline</span><span class="p">)</span>
</span><span class='line'><span class="c1">;; colors...</span>
</span><span class='line'><span class="p">(</span><span class="k">setq</span> <span class="nv">powerline-color1</span> <span class="s">&quot;#222&quot;</span><span class="p">)</span>      <span class="c1">;; dark grey; </span>
</span><span class='line'><span class="p">(</span><span class="k">setq</span> <span class="nv">powerline-color2</span> <span class="s">&quot;#444&quot;</span><span class="p">)</span>      <span class="c1">;; slightly lighter grey</span>
</span><span class='line'><span class="c1">;; shape...</span>
</span><span class='line'><span class="p">(</span><span class="k">setq</span> <span class="nv">powerline-arrow-shape</span> <span class="ss">&#39;arrow</span><span class="p">)</span> <span class="c1">;; mirrored arrows, </span>
</span><span class='line'><span class="c1">;; see below for the shape options</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Shapes</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(setq powerline-arrow-shape 'arrow)       ;; 18px high arrows</span></code></pre></td></tr></table></div></figure>


<p><img src="http://emacsfodder.github.com/media/arrow.png" alt="" /></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cl'><span class='line'><span class="p">(</span><span class="k">setq</span> <span class="nv">powerline-arrow-shape</span> <span class="ss">&#39;arrow14</span><span class="p">)</span>     <span class="c1">;; 14px high arrows</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://emacsfodder.github.com/media/arrow14.png" alt="" /></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cl'><span class='line'><span class="p">(</span><span class="k">setq</span> <span class="nv">powerline-arrow-shape</span> <span class="ss">&#39;half</span><span class="p">)</span>        <span class="c1">;; flat</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://emacsfodder.github.com/media/half.png" alt="" /></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cl'><span class='line'><span class="p">(</span><span class="k">setq</span> <span class="nv">powerline-arrow-shape</span> <span class="ss">&#39;percent</span><span class="p">)</span>     <span class="c1">;; ...? (I have no idea)</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://emacsfodder.github.com/media/percent.png" alt="" /></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cl'><span class='line'><span class="p">(</span><span class="k">setq</span> <span class="nv">powerline-arrow-shape</span> <span class="ss">&#39;curve</span><span class="p">)</span>       <span class="c1">;; scallop curve</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://emacsfodder.github.com/media/curve.png" alt="" /></p>

<h2>New shapes in this version</h2>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cl'><span class='line'><span class="p">(</span><span class="k">setq</span> <span class="nv">powerline-arrow-shape</span> <span class="ss">&#39;rounded</span><span class="p">)</span>     <span class="c1">;; new, round corner</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://emacsfodder.github.com/media/rounded.png" alt="" /></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cl'><span class='line'><span class="p">(</span><span class="k">setq</span> <span class="nv">powerline-arrow-shape</span> <span class="ss">&#39;chamfer</span><span class="p">)</span>     <span class="c1">;; new, folded corner</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://emacsfodder.github.com/media/chamfer.png" alt="" /></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cl'><span class='line'><span class="p">(</span><span class="k">setq</span> <span class="nv">powerline-arrow-shape</span> <span class="ss">&#39;slant-left</span><span class="p">)</span>  <span class="c1">;; new, diagonal from left</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://emacsfodder.github.com/media/slant-left.png" alt="" /></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cl'><span class='line'><span class="p">(</span><span class="k">setq</span> <span class="nv">powerline-arrow-shape</span> <span class="ss">&#39;slant-right</span><span class="p">)</span> <span class="c1">;; new, diagonal from right</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://emacsfodder.github.com/media/slant-right.png" alt="" /></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cl'><span class='line'><span class="p">(</span><span class="k">setq</span> <span class="nv">powerline-arrow-shape</span> <span class="ss">&#39;slant</span><span class="p">)</span>       <span class="c1">;; mirrored diagonals</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://emacsfodder.github.com/media/slant.png" alt="" /></p>
]]></content>
  </entry>
  
</feed>
