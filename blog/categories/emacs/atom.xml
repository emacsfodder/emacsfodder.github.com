<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Emacs | Emacs Fodder]]></title>
  <link href="http://emacsfodder.github.com/blog/categories/emacs/atom.xml" rel="self"/>
  <link href="http://emacsfodder.github.com/"/>
  <updated>2013-01-15T08:53:35+11:00</updated>
  <id>http://emacsfodder.github.com/</id>
  <author>
    <name><![CDATA[Jason Milkins]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Mesa theme]]></title>
    <link href="http://emacsfodder.github.com/blog/2013/01/14/mesa-theme/"/>
    <updated>2013-01-14T00:00:00+11:00</updated>
    <id>http://emacsfodder.github.com/blog/2013/01/14/mesa-theme</id>
    <content type="html"><![CDATA[<p>Mesa is a theme for Emacs 24, works in both the terminal and full
color GUIs.</p>

<p>Download : <a href="mesa-theme.el">mesa-theme.el</a></p>

<h1>Screenshots</h1>

<p><img src="mesa-screen.png" alt="" />
<img src="mesa-screen2.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Soothe theme]]></title>
    <link href="http://emacsfodder.github.com/blog/2012/07/17/soothe-theme/"/>
    <updated>2012-07-17T00:00:00+10:00</updated>
    <id>http://emacsfodder.github.com/blog/2012/07/17/soothe-theme</id>
    <content type="html"><![CDATA[<p>This is a theme I use almost exclusively now, it's not Terminal
friendly, and I should fix that, but if you're using Emacs.app on OS
X, or in another full color window manager it'll serve you well.</p>

<p>The block-highlights may put you off, I find them very helpful for
some reason I'm unable to clarify for you in any technical /
psychological / color-theory sense, but try it out anyway.</p>

<p>Feel free to fork modify, whatever, it's MIT Licensed.</p>

<p><a href="/soothe-theme.el">soothe-theme.el</a></p>

<h1>Screenshots</h1>

<p><img src="/soothe-ruby.png" alt="" /></p>

<p><img src="/soothe-html.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jade Dragon theme]]></title>
    <link href="http://emacsfodder.github.com/blog/2012/07/03/jadedragon-theme/"/>
    <updated>2012-07-03T00:00:00+10:00</updated>
    <id>http://emacsfodder.github.com/blog/2012/07/03/jadedragon-theme</id>
    <content type="html"><![CDATA[<p><a href="http://emacsfodder.github.com/Jadedragon-theme.el" class="btn
btn-primary btn-large">Jadedragon-theme.el</a></p>

<h3>emacs-lisp</h3>

<p><img src="/jadedragon-emacslisp.png" alt="emacs-lisp" /></p>

<h3>ObjC</h3>

<p><img src="/jadedragon-objc.png" alt="SleepDisplay console utility" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tangerine Theme]]></title>
    <link href="http://emacsfodder.github.com/blog/2012/07/02/tangerine-theme/"/>
    <updated>2012-07-02T00:00:00+10:00</updated>
    <id>http://emacsfodder.github.com/blog/2012/07/02/tangerine-theme</id>
    <content type="html"><![CDATA[<p>Amber CRTs, Tangerine Dream, retro-futuristic, kandy kolored tangerine
flake streamline baby... all these things held some influence over
the creation of this theme.  Well, those things, and the fact I like orange.</p>

<p><a href="http://emacsfodder.github.com/Tangerine-theme.el" class="btn
btn-primary btn-large">Tangerine-theme.el</a></p>

<h2>Obligatory screenshots</h2>

<p><img src="/tangerine-clojure.png" alt="Sample emacslisp" /></p>

<h3>Tangerine shell</h3>

<p><img src="/tangerine-shell.png" alt="Sample Shell script" /></p>

<h3>Tangerine Perl</h3>

<p><img src="/tangerine-perls.png" alt="Sample Perl code Git.pm" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HexRGB.el with some extras]]></title>
    <link href="http://emacsfodder.github.com/blog/2012/06/30/hexrgb-some-convenient-functions/"/>
    <updated>2012-06-30T00:00:00+10:00</updated>
    <id>http://emacsfodder.github.com/blog/2012/06/30/hexrgb-some-convenient-functions</id>
    <content type="html"><![CDATA[<p>If you use a lot of CSS we have a number of useful CSS DSLs, like
<a href="http://sass-lang.com">SASS</a> and <a href="http://lesscss.org">LESS</a> both of
which give us a collection of color manipulation functions.</p>

<p>Adding a few of these helpful color functions to Emacs is relatively
simple and the bulk of the work required is already done by Drew Adams
in his <a href="http://www.emacswiki.org/cgi-bin/wiki/hexrgb.el">hexrgb.el</a>
extension.</p>

<p>I've added a few small modifications in
<a href="https://gist.github.com/3022890">this version</a>, the
function: <code>hexrgb-hsv-to-hex</code> accepts an additional argument
<code>nb-digits</code> so that hex colors returned are with 2 digits per r,g,b
value.</p>

<pre><code>(hexrgb-hsv-to-hex   0.05   0.7   0.4     2) 
;;------------------ ^ ---- ^ --- ^ ----- ^ -------
;;                   hue    sat   light   nb-digits 
</code></pre>

<p>Which returns <span style="color: white; background-color:#6639B8;
padding:4px; border-radius: 3px;">#6639B8</span></p>

<p>Previously, <strong>hexrgb.el</strong> returned hex colors with 4 digits per
channel (r, g, b), I'm not sure why, but obviously for a large number
of people, this isn't all that useful.</p>

<p>I've also added a few convenience functions that provide color
manipulation direct from hex colors. Currently these just work in
eshell or ielm (interactive emacs lisp modes.)</p>

<p>For example:</p>

<pre><code>(hexrgb-hex-set-brightness "#ff0000" 0.3)
</code></pre>

<p>returns <span style="color:white;background-color:#4C0000; padding:4px; border-radius: 3px;">#4C0000</span></p>

<pre><code>(hexrgb-hex-set-saturation "#ff0000" 0.5)
</code></pre>

<p>returns <span style="color:white;background-color:#FF7F7F; padding:4px; border-radius: 3px;">#FF7F7F</span></p>

<pre><code>(hexrgb-hex-set-hue "#FF0000" 0.6)
</code></pre>

<p>returns <span style="color:white;background-color:#0066FF; padding:4px; border-radius: 3px;">#0066FF</span></p>

<p>These functions aren't complicated, they use the hex-to-hsv existing
function, grab the h, s or v values and then convert back to a hex
color value.  This makes working with colors easier, for example, you
could add <code>(require 'hexrgb)</code> to a theme definition and use the
functions to manipulate theme colors, or just switch on
<a href="https://github.com/emacsmirror/rainbow-mode"><em>rainbow-mode</em></a> when
you're in eshell, and play.</p>

<p>Here's the function definitions:</p>

<pre><code>(defun hexrgb-hex-set-brightness
  (hex brightness)
  "set brightness of a hex color, amount values from 0-1
   returns a 6 digit hex color"
  (let* ((hsv (hexrgb-hex-to-hsv hex))
         (h (first hsv)) (s (second hsv)) (v (third hsv)))
    (hexrgb-hsv-to-hex h s (* v brightness) 2)))

(defun hexrgb-hex-set-saturation
  (hex saturation)
  "set saturation of a hex color, amount values from 0-1
   returns a 6 digit hex color"
  (let* ((hsv (hexrgb-hex-to-hsv hex))
         (h (first hsv)) (s (second hsv)) (v (third hsv)))
    (hexrgb-hsv-to-hex h (* s saturation) v 2)))

(defun hexrgb-hex-set-hue
  (hex hue)
  "set hue of a hex color, amount values from 0-1
   returns a 6 digit hex color"
  (let* ((hsv (hexrgb-hex-to-hsv hex))
         (s (second hsv)) (v (third hsv)))
    (hexrgb-hsv-to-hex hue s v 2)))
</code></pre>
]]></content>
  </entry>
  
</feed>
